###Driver
###UrlSuffix(gcc/Overall-Options.html#index-_0023_0023_0023)
-all-warningsAda AdaWhy AdaSCIL Alias(Wall)
-all-warningsC ObjC C++ ObjC++ Warning Alias(Wall)
-all-warningsFortran Alias(Wall)
-ansiC ObjC C++ ObjC++ Alias(ansi)
-assembleDriver Alias(S)
-assertC ObjC C++ ObjC++ Separate Alias(A) MissingArgError(assertion missing after %qs)
-assertFortran Separate Alias(A)
-assert=C ObjC C++ ObjC++ Joined Alias(A) MissingArgError(assertion missing after %qs)
-assert=Fortran Joined Alias(A)
-commentsC ObjC C++ ObjC++ Alias(C)
-commentsFortran Alias(C)
-comments-in-macrosC ObjC C++ ObjC++ Alias(CC)
-comments-in-macrosFortran Alias(CC)
-compileDriver Alias(c)
-completion=Common Driver Joined UndocumentedProvide bash completion for options starting with provided string.
-coverageDriver Alias(coverage)
-debugCommon Alias(g)
-define-macroC ObjC C++ ObjC++ Separate Alias(D) MissingArgError(macro name missing after %qs)
-define-macroFortran Separate Alias(D)
-define-macro=C ObjC C++ ObjC++ Joined Alias(D) MissingArgError(macro name missing after %qs)
-define-macro=Fortran Joined Alias(D)
-dependenciesC ObjC C++ ObjC++ Alias(M)
-dependenciesD Alias(M)
-dependenciesFortran Alias(M)
-dumpC ObjC C++ ObjC++ Separate Alias(d)
-dumpCommon Separate Alias(d)
-dumpFortran Separate Alias(d)
-dump=C ObjC C++ ObjC++ Joined Alias(d)
-dump=Common Joined Alias(d)
-dump=Fortran Joined Alias(d)
-dumpbaseDriver Common Separate Alias(dumpbase)
-dumpbase-extDriver Common Separate Alias(dumpbase-ext)
-dumpdirDriver Common Separate Alias(dumpdir)
-embed-dir=C ObjC C++ ObjC++ Joined MissingArgError(missing filename after %qs)--embed-dir=<dir>	Add <dir> to the #embed path.
-embed-directoryC ObjC C++ ObjC++ Separate Alias(-embed-dir=) MissingArgError(missing path after %qs)
-embed-directory=C ObjC C++ ObjC++ Joined Alias(-embed-dir=) MissingArgError(missing path after %qs)
-entryDriver Separate Alias(e)
-entry=Driver Joined Alias(e)
-extra-warningsCommon Warning Alias(Wextra)
-for-assemblerDriver Separate Alias(Xassembler)
-for-assembler=Driver JoinedOrMissing Alias(Xassembler)
-for-linkerDriver Separate Alias(Xlinker)
-for-linker=Driver JoinedOrMissing Alias(Xlinker)
-force-linkDriver Separate Alias(u)
-force-link=Driver Joined Alias(u)
-helpCommon Driver Var(help_flag)Display this information.
-help=Common Driver Joined--help=<class>	Display descriptions of a specific class of options.  <class> is one or more of optimizers, target, warnings, undocumented, params.
-imacrosC ObjC C++ ObjC++ Separate Alias(imacros) MissingArgError(missing filename after %qs)
-imacros=C ObjC C++ ObjC++ Joined Alias(imacros) MissingArgError(missing filename after %qs)
-includeC ObjC C++ ObjC++ Separate Alias(include) MissingArgError(missing filename after %qs)
-include-barrierAda AdaWhy AdaSCIL Alias(I, -)
-include-barrierC ObjC C++ ObjC++ Alias(I, -)
-include-barrierFortran Alias(I, -)
-include-directoryAda AdaWhy AdaSCIL Separate Alias(I)
-include-directoryC ObjC C++ ObjC++ Separate Alias(I) MissingArgError(missing path after %qs)
-include-directoryFortran Separate Alias(I)
-include-directory-afterC ObjC C++ ObjC++ Separate Alias(idirafter) MissingArgError(missing path after %qs)
-include-directory-afterFortran Separate Alias(idirafter)
-include-directory-after=C ObjC C++ ObjC++ Joined Alias(idirafter) MissingArgError(missing path after %qs)
-include-directory-after=Fortran Joined Alias(idirafter)
-include-directory=Ada AdaWhy AdaSCIL Joined Alias(I)
-include-directory=C ObjC C++ ObjC++ Joined Alias(I) MissingArgError(missing path after %qs)
-include-directory=Fortran Joined Alias(I)
-include-prefixC ObjC C++ ObjC++ Separate Alias(iprefix)
-include-prefixFortran Separate Alias(iprefix)
-include-prefix=C ObjC C++ ObjC++ JoinedOrMissing Alias(iprefix)
-include-prefix=Fortran JoinedOrMissing Alias(iprefix)
-include-with-prefixC ObjC C++ ObjC++ Separate Alias(iwithprefix)
-include-with-prefix-afterC ObjC C++ ObjC++ Separate Alias(iwithprefix)
-include-with-prefix-after=C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefix)
-include-with-prefix-beforeC ObjC C++ ObjC++ Separate Alias(iwithprefixbefore)
-include-with-prefix-before=C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefixbefore)
-include-with-prefix=C ObjC C++ ObjC++ JoinedOrMissing Alias(iwithprefix)
-include=C ObjC C++ ObjC++ Joined Alias(include) MissingArgError(missing filename after %qs)
-languageDriver Separate Alias(x)
-language=Driver Joined Alias(x)
-library-directoryDriver Separate Alias(L)
-library-directory=Driver Joined Alias(L)
-no-canonical-prefixesDriver Alias(no-canonical-prefixes)
-no-integrated-cppDriver Alias(no-integrated-cpp)
-no-line-commandsC ObjC C++ ObjC++ Alias(P)
-no-line-commandsFortran Alias(P)
-no-standard-includesAda AdaWhy AdaSCIL Alias(nostdinc)
-no-standard-includesC ObjC C++ ObjC++ Alias(nostdinc)
-no-standard-includesFortran Alias(nostdinc)
-no-standard-librariesAda AdaWhy AdaSCIL Alias(nostdlib)
-no-standard-librariesDriver Alias(nostdlib)
-no-sysroot-suffixDriver Var(no_sysroot_suffix)
-no-warningsC ObjC C++ ObjC++ Alias(w)
-no-warningsCommon Alias(w)
-optimizeCommon Alias(O)
-outputC ObjC C++ ObjC++ Separate Alias(o)
-outputCommon Driver Separate Alias(o) MissingArgError(missing filename after %qs)
-outputFortran Separate Alias(o)
-output-pchC ObjC C++ ObjC++ Separate
-output=C ObjC C++ ObjC++ Joined Alias(o)
-output=Common Driver Joined Alias(o) MissingArgError(missing filename after %qs)
-output=Fortran Joined Alias(o)
-param=align-loop-iterations=Common Joined UInteger Var(param_align_loop_iterations) Init(4) Param OptimizationLoops iterating at least selected number of iterations will get loop alignment.
-param=align-threshold=Common Joined UInteger Var(param_align_threshold) Init(100) IntegerRange(1, 65536) Param OptimizationSelect fraction of the maximal frequency of executions of basic block in function given basic block get alignment.
-param=analyzer-bb-explosion-factor=Common Joined UInteger Var(param_analyzer_bb_explosion_factor) Init(5) ParamThe maximum number of 'after supernode' exploded nodes within the analyzer per supernode, before terminating analysis.
-param=analyzer-max-constraints=Common Joined UInteger Var(param_analyzer_max_constraints) Init(20) ParamThe maximum number of constraints per state.
-param=analyzer-max-enodes-for-full-dump=Common Joined UInteger Var(param_analyzer_max_enodes_for_full_dump) Init(200) ParamThe maximum depth of exploded nodes that should appear in a dot dump before switching to a less verbose format.
-param=analyzer-max-enodes-per-program-point=Common Joined UInteger Var(param_analyzer_max_enodes_per_program_point) Init(8) ParamThe maximum number of exploded nodes per program point within the analyzer, before terminating analysis of that point.
-param=analyzer-max-infeasible-edges=Common Joined UInteger Var(param_analyzer_max_infeasible_edges) Init(10) ParamThe maximum number of infeasible edges to reject before declaring a diagnostic as infeasible.
-param=analyzer-max-recursion-depth=Common Joined UInteger Var(param_analyzer_max_recursion_depth) Init(2) ParamThe maximum number of times a callsite can appear in a call stack within the analyzer, before terminating analysis of a call that would recurse deeper.
-param=analyzer-max-svalue-depth=Common Joined UInteger Var(param_analyzer_max_svalue_depth) Init(18) ParamThe maximum depth of a symbolic value, before approximating the value as unknown.
-param=analyzer-min-snodes-for-call-summary=Common Joined UInteger Var(param_analyzer_min_snodes_for_call_summary) Init(10) ParamThe minimum number of supernodes within a function for the analyzer to consider summarizing its effects at call sites.
-param=analyzer-text-art-ideal-canvas-width=Common Joined UInteger Var(param_analyzer_text_art_ideal_canvas_width) Init(72) ParamThe ideal width in characters of text art diagrams generated by the analyzer.
-param=analyzer-text-art-string-ellipsis-head-len=Common Joined UInteger Var(param_analyzer_text_art_string_ellipsis_head_len) Init(6) ParamThe number of literal bytes to show at the head of a string literal in text art when ellipsizing it.
-param=analyzer-text-art-string-ellipsis-tail-len=Common Joined UInteger Var(param_analyzer_text_art_string_ellipsis_tail_len) Init(6) ParamThe number of literal bytes to show at the tail of a string literal in text art when ellipsizing it.
-param=analyzer-text-art-string-ellipsis-threshold=Common Joined UInteger Var(param_analyzer_text_art_string_ellipsis_threshold) Init(15) ParamThe number of bytes at which to ellipsize string literals in analyzer text art diagrams.
-param=asan-globals=Common Joined UInteger Var(param_asan_globals) Init(1) IntegerRange(0, 1) ParamEnable asan globals protection.
-param=asan-instrument-allocas=Common Joined UInteger Var(param_asan_protect_allocas) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan allocas/VLAs protection.
-param=asan-instrument-reads=Common Joined UInteger Var(param_asan_instrument_reads) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan load operations protection.
-param=asan-instrument-writes=Common Joined UInteger Var(param_asan_instrument_writes) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan store operations protection.
-param=asan-instrumentation-with-call-threshold=Common Joined UInteger Var(param_asan_instrumentation_with_call_threshold) Init(7000) Param OptimizationUse callbacks instead of inline code if number of accesses in function becomes greater or equal to this number.
-param=asan-kernel-mem-intrinsic-prefix=Common Joined UInteger Var(param_asan_kernel_mem_intrinsic_prefix) Init(0) IntegerRange(0, 1) Param OptimizationPrefix calls to memcpy, memset and memmove with __asan_ or __hwasan_ for -fsanitize=kernel-address or -fsanitize=kernel-hwaddress.
-param=asan-memintrin=Common Joined UInteger Var(param_asan_memintrin) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan builtin functions protection.
-param=asan-stack=Common Joined UInteger Var(param_asan_stack) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan stack protection.
-param=asan-use-after-return=Common Joined UInteger Var(param_asan_use_after_return) Init(1) IntegerRange(0, 1) Param OptimizationEnable asan detection of use-after-return bugs.
-param=avg-loop-niter=Common Joined UInteger Var(param_avg_loop_niter) Init(10) IntegerRange(1, 65536) Param OptimizationAverage number of iterations of a loop.
-param=avoid-fma-max-bits=Common Joined UInteger Var(param_avoid_fma_max_bits) IntegerRange(0, 512) Param OptimizationMaximum number of bits for which we avoid creating FMAs.
-param=builtin-expect-probability=Common Joined UInteger Var(param_builtin_expect_probability) Init(90) IntegerRange(0, 100) Param OptimizationSet the estimated probability in percentage for builtin expect. The default value is 90% probability.
-param=builtin-string-cmp-inline-length=Common Joined UInteger Var(param_builtin_string_cmp_inline_length) Init(3) IntegerRange(0, 100) Param OptimizationThe maximum length of a constant string for a builtin string cmp call eligible for inlining. The default value is 3.
-param=case-values-threshold=Common Joined UInteger Var(param_case_values_threshold) Param OptimizationThe smallest number of different values for which it is best to use a jump-table instead of a tree of conditional branches, if 0, use the default for the machine.
-param=comdat-sharing-probability=Common Joined UInteger Var(param_comdat_sharing_probability) Init(20) Param OptimizationProbability that COMDAT function will be shared with different compilation unit.
-param=constructive-interference-size=Common Joined UInteger Var(param_construct_interfere_size) Init(0) Param OptimizationThe maximum recommended size of contiguous memory occupied by two objectsaccessed with temporal locality by concurrent threads.  Typically the L1 cacheline size, but can be smaller to accommodate a variety of target processors withdifferent cache line sizes.
-param=cxx-max-namespaces-for-diagnostic-help=Common Joined UInteger Var(param_cxx_max_namespaces_for_diagnostic_help) Init(1000) ParamMaximum number of namespaces to search for alternatives when name lookup fails.
-param=cycle-accurate-model=Common Joined UInteger Var(param_cycle_accurate_model) Init(1) IntegerRange(0, 1) Param OptimizationWhether the scheduling description is mostly a cycle-accurate model of the target processor and is likely to be spill aggressively to fill any pipeline bubbles.
-param=destructive-interference-size=Common Joined UInteger Var(param_destruct_interfere_size) Init(0) Param OptimizationThe minimum recommended offset between two concurrently-accessed objects toavoid additional performance degradation due to contention introduced by theimplementation.  Typically the L1 cache line size, but can be larger toaccommodate a variety of target processors with different cache line sizes.C++17 code might use this value in structure layout, but is stronglydiscouraged from doing so in public ABIs.
-param=dse-max-alias-queries-per-store=Common Joined UInteger Var(param_dse_max_alias_queries_per_store) Init(256) Param OptimizationMaximum number of queries into the alias oracle per store.
-param=dse-max-object-size=Common Joined UInteger Var(param_dse_max_object_size) Init(256) Param OptimizationMaximum size (in bytes) of objects tracked bytewise by dead store elimination.
-param=early-inlining-insns=Common Joined UInteger Var(param_early_inlining_insns) Init(6) Optimization ParamMaximal estimated growth of function body caused by early inlining of single call.
-param=file-cache-files=Common Joined UInteger Var(param_file_cache_files) Init(16) ParamMax number of files in the file cache.
-param=file-cache-lines=Common Joined UInteger Var(param_file_cache_lines) Init(0) ParamMax number of lines to index into file cache. When 0 this is automatically sized.
-param=fsm-scale-path-stmts=Common Joined UInteger Var(param_fsm_scale_path_stmts) Init(2) IntegerRange(1, 10) Param OptimizationScale factor to apply to the number of statements in a threading path crossing a loop backedge when comparing to max-jump-thread-duplication-stmts.
-param=fully-pipelined-fma=Common Joined UInteger Var(param_fully_pipelined_fma) Init(0) IntegerRange(0, 1) Param OptimizationWhether the target fully pipelines FMA instructions.  If non-zero,reassociation considers the benefit of parallelizing FMA's multiplicationpart and addition part, assuming FMUL and FMA use the same units that canalso do FADD.
-param=gcse-after-reload-critical-fraction=Common Joined UInteger Var(param_gcse_after_reload_critical_fraction) Init(10) Param OptimizationThe threshold ratio of critical edges execution count that permit performing redundancy elimination after reload.
-param=gcse-after-reload-partial-fraction=Common Joined UInteger Var(param_gcse_after_reload_partial_fraction) Init(3) Param OptimizationThe threshold ratio for performing partial redundancy elimination after reload.
-param=gcse-cost-distance-ratio=Common Joined UInteger Var(param_gcse_cost_distance_ratio) Init(10) Param OptimizationScaling factor in calculation of maximum distance an expression can be moved by GCSE optimizations.
-param=gcse-unrestricted-cost=Common Joined UInteger Var(param_gcse_unrestricted_cost) Init(3) Param OptimizationCost at which GCSE optimizations will not constraint the distance an expression can travel.
-param=ggc-min-expand=Common Joined UInteger Var(param_ggc_min_expand) Init(30) ParamMinimum heap expansion to trigger garbage collection, as a percentage of the total size of the heap.
-param=ggc-min-heapsize=Common Joined UInteger Var(param_ggc_min_heapsize) Init(4096) ParamMinimum heap size before we start collecting garbage, in kilobytes.
-param=gimple-fe-computed-hot-bb-threshold=Common Joined UInteger Var(param_gimple_fe_computed_hot_bb_threshold) ParamThe number of executions of a basic block which is considered hot. The parameter is used only in GIMPLE FE.
-param=graphite-allow-codegen-errors=Common Joined UInteger Var(param_graphite_allow_codegen_errors) IntegerRange(0, 1) ParamWhether codegen errors should be ICEs when -fchecking.
-param=graphite-max-arrays-per-scop=Common Joined UInteger Var(param_graphite_max_arrays_per_scop) Init(100) Param OptimizationMaximum number of arrays per SCoP.
-param=graphite-max-nb-scop-params=Common Joined UInteger Var(param_graphite_max_nb_scop_params) Init(10) Param OptimizationMaximum number of parameters in a SCoP.
-param=hardcfr-max-blocks=Common Joined UInteger Var(param_hardcfr_max_blocks) Init(0) Param OptimizationMaximum number of blocks for -fharden-control-flow-redundancy.
-param=hardcfr-max-inline-blocks=Common Joined UInteger Var(param_hardcfr_max_inline_blocks) Init(16) Param OptimizationMaximum number of blocks for in-line -fharden-control-flow-redundancy.
-param=hash-table-verification-limit=Common Joined UInteger Var(param_hash_table_verification_limit) Init(10) ParamThe number of elements for which hash table verification is done for each searched element.
-param=hot-bb-count-fraction=Common Joined UInteger Var(param_hot_bb_count_fraction) Init(10000) ParamThe denominator n of fraction 1/n of the maximal execution count of a basic block in the entire program that a basic block needs to at least have in order to be considered hot (used in non-LTO mode).
-param=hot-bb-count-ws-permille=Common Joined UInteger Var(param_hot_bb_count_ws_permille) Init(990) IntegerRange(0, 1000) ParamThe number of most executed permilles of the profiled execution of the entire program to which the execution count of a basic block must be part of in order to be considered hot (used in LTO mode).
-param=hot-bb-frequency-fraction=Common Joined UInteger Var(param_hot_bb_frequency_fraction) Init(1000) ParamThe denominator n of fraction 1/n of the execution frequency of the entry block of a function that a basic block of this function needs to at least have in order to be considered hot.
-param=hwasan-instrument-allocas=Common Joined UInteger Var(param_hwasan_instrument_allocas) Init(1) IntegerRange(0, 1) Param OptimizationEnable hwasan instrumentation of allocas/VLAs.
-param=hwasan-instrument-mem-intrinsics=Common Joined UInteger Var(param_hwasan_instrument_mem_intrinsics) Init(1) IntegerRange(0, 1) Param OptimizationEnable hwasan instrumentation of builtin functions.
-param=hwasan-instrument-reads=Common Joined UInteger Var(param_hwasan_instrument_reads) Init(1) IntegerRange(0, 1) Param OptimizationEnable hwasan instrumentation of load operations.
-param=hwasan-instrument-stack=Common Joined UInteger Var(param_hwasan_instrument_stack) Init(1) IntegerRange(0, 1) Param OptimizationEnable hwasan instrumentation of statically sized stack-allocated variables.
-param=hwasan-instrument-writes=Common Joined UInteger Var(param_hwasan_instrument_writes) Init(1) IntegerRange(0, 1) Param OptimizationEnable hwasan instrumentation of store operations.
-param=hwasan-random-frame-tag=Common Joined UInteger Var(param_hwasan_random_frame_tag) Init(1) IntegerRange(0, 1) Param OptimizationUse random base tag for each frame, as opposed to base always zero.
-param=inline-heuristics-hint-percent=Common Joined UInteger Var(param_inline_heuristics_hint_percent) Init(200) Optimization IntegerRange(100, 1000000) ParamThe scale (in percents) applied to inline-insns-single and auto limits when heuristics hints that inlining is very profitable.
-param=inline-min-speedup=Common Joined UInteger Var(param_inline_min_speedup) Init(30) Optimization IntegerRange(0, 100) ParamThe minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-insns-auto.
-param=inline-unit-growth=Common Joined UInteger Var(param_inline_unit_growth) Init(40) Optimization ParamHow much can given compilation unit grow because of the inlining (in percent).
-param=integer-share-limit=Common Joined UInteger Var(param_integer_share_limit) Init(251) IntegerRange(2, 65536) ParamThe upper bound for sharing integer constants.
-param=ipa-cp-eval-threshold=Common Joined UInteger Var(param_ipa_cp_eval_threshold) Init(500) Param OptimizationThreshold ipa-cp opportunity evaluation that is still considered beneficial to clone.
-param=ipa-cp-large-unit-insns=Common Joined UInteger Var(param_ipa_cp_large_unit_insns) Optimization Init(16000) ParamThe size of translation unit that IPA-CP pass considers large.
-param=ipa-cp-loop-hint-bonus=Common Joined UInteger Var(param_ipa_cp_loop_hint_bonus) Init(64) Param OptimizationCompile-time bonus IPA-CP assigns to candidates which make loop bounds or strides known.
-param=ipa-cp-max-recursive-depth=Common Joined UInteger Var(param_ipa_cp_max_recursive_depth) Init(8) Param OptimizationMaximum depth of recursive cloning for self-recursive function.
-param=ipa-cp-min-recursive-probability=Common Joined UInteger Var(param_ipa_cp_min_recursive_probability) Init(2) Param OptimizationRecursive cloning only when the probability of call being executed exceeds the parameter.
-param=ipa-cp-profile-count-base=Common Joined UInteger Var(param_ipa_cp_profile_count_base) Init(10) IntegerRange(0, 100) Param OptimizationWhen using profile feedback, use the edge at this percentage position in frequency histogram as the bases for IPA-CP heuristics.
-param=ipa-cp-recursion-penalty=Common Joined UInteger Var(param_ipa_cp_recursion_penalty) Init(40) IntegerRange(0, 100) Param OptimizationPercentage penalty the recursive functions will receive when they are evaluated for cloning.
-param=ipa-cp-recursive-freq-factor=Common Joined UInteger Var(param_ipa_cp_recursive_freq_factor) Init(6) Param OptimizationWhen propagating IPA-CP effect estimates, multiply frequencies of recursive edges that bring back an unchanged value by this factor.
-param=ipa-cp-single-call-penalty=Common Joined UInteger Var(param_ipa_cp_single_call_penalty) Init(15) IntegerRange(0, 100) Param OptimizationPercentage penalty functions containing a single call to another function will receive when they are evaluated for cloning.
-param=ipa-cp-unit-growth=Common Joined UInteger Var(param_ipa_cp_unit_growth) Init(10) Param OptimizationHow much can given compilation unit grow because of the interprocedural constant propagation (in percent).
-param=ipa-cp-value-list-size=Common Joined UInteger Var(param_ipa_cp_value_list_size) Init(8) Param OptimizationMaximum size of a list of values associated with each parameter for interprocedural constant propagation.
-param=ipa-jump-function-lookups=Common Joined UInteger Var(param_ipa_jump_function_lookups) Init(8) Param OptimizationMaximum number of statements visited during jump function offset discovery.
-param=ipa-max-aa-steps=Common Joined UInteger Var(param_ipa_max_aa_steps) Init(25000) Param OptimizationMaximum number of statements that will be visited by IPA formal parameter analysis based on alias analysis in any given function.
-param=ipa-max-agg-items=Common Joined UInteger Var(param_ipa_max_agg_items) Init(16) Param OptimizationMaximum number of aggregate content items for a parameter in jump functions and lattices.
-param=ipa-max-loop-predicates=Common Joined UInteger Var(param_ipa_max_loop_predicates) Init(16) Param OptimizationMaximum number of different predicates used to track properties of loops in IPA analysis.
-param=ipa-max-param-expr-ops=Common Joined UInteger Var(param_ipa_max_param_expr_ops) Init(10) Param OptimizationMaximum number of operations in a parameter expression that can be handled by IPA analysis.
-param=ipa-max-switch-predicate-bounds=Common Joined UInteger Var(param_ipa_max_switch_predicate_bounds) Init(5) Param OptimizationMaximal number of boundary endpoints of case ranges of switch statement used during IPA function summary generation.
-param=ipa-sra-deref-prob-threshold=Common Joined UInteger Var(param_ipa_sra_deref_prob_threshold) Init(50) IntegerRange(0, 100) Param OptimizationMinimum probability (in percent) of dereferencing of a function pointer parameter for it to be considered for replacement with simple values.
-param=ipa-sra-max-replacements=Common Joined UInteger Var(param_ipa_sra_max_replacements) Optimization Init(8) IntegerRange(0, 16) ParamMaximum pieces that IPA-SRA tracks per formal parameter, as a consequence, also the maximum number of replacements of a formal parameter.
-param=ipa-sra-ptr-growth-factor=Common Joined UInteger Var(param_ipa_sra_ptr_growth_factor) Init(2) Param OptimizationMaximum allowed growth of total size of new parameters that ipa-sra replaces a pointer to an aggregate with.
-param=ipa-sra-ptrwrap-growth-factor=Common Joined UInteger Var(param_ipa_sra_ptrwrap_growth_factor) Init(4) IntegerRange(1, 8) Param OptimizationAdditional maximum allowed growth of total size of new parameters that ipa-sra replaces a pointer to an aggregate with, if it points to a local variable that the caller only writes to and passes it as an argument to functions.
-param=ira-consider-dup-in-all-alts=Common Joined UInteger Var(param_ira_consider_dup_in_all_alts) Init(1) IntegerRange(0, 1) Param OptimizationControl ira to consider matching constraint (duplicated operand number) heavily in all available alternatives for preferred register class.  If it is set as zero, it means ira only respects the matching constraint when it's in the only available alternative with an appropriate register class.  Otherwise, it means ira will check all available alternatives for preferred register class even if it has found some choice with an appropriate register class and respect the found qualified matching constraint.
-param=ira-loop-reserved-regs=Common Joined UInteger Var(param_ira_loop_reserved_regs) Init(2) Param OptimizationThe number of registers in each class kept unused by loop invariant motion.
-param=ira-max-conflict-table-size=Common Joined UInteger Var(param_ira_max_conflict_table_size) Init(1000) Param OptimizationMax size of conflict table in MB.
-param=ira-max-loops-num=Common Joined UInteger Var(param_ira_max_loops_num) Init(100) Param OptimizationMax loops number for regional RA.
-param=ira-simple-lra-insn-threshold=Common Joined UInteger Var(param_ira_simple_lra_insn_threshold) Init(1000) Param OptimizationApproximate function insn number in 1K units triggering simple local RA.
-param=iv-always-prune-cand-set-bound=Common Joined UInteger Var(param_iv_always_prune_cand_set_bound) Init(10) Param OptimizationIf number of candidates in the set is smaller, we always try to remove unused ivs during its optimization.
-param=iv-consider-all-candidates-bound=Common Joined UInteger Var(param_iv_consider_all_candidates_bound) Init(40) Param OptimizationBound on number of candidates below that all candidates are considered in iv optimizations.
-param=iv-max-considered-uses=Common Joined UInteger Var(param_iv_max_considered_uses) Init(250) Param OptimizationBound on number of iv uses in loop optimized in iv optimizations.
-param=jump-table-max-growth-ratio-for-size=Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_size) Init(300) IntegerRange(0, 10000) Param OptimizationThe maximum code size growth ratio when expanding into a jump table (in percent).  The parameter is used when optimizing for size.
-param=jump-table-max-growth-ratio-for-speed=Common Joined UInteger Var(param_jump_table_max_growth_ratio_for_speed) Init(800) IntegerRange(0, 10000) Param OptimizationThe maximum code size growth ratio when expanding into a jump table (in percent).  The parameter is used when optimizing for speed.
-param=l1-cache-line-size=Common Joined UInteger Var(param_l1_cache_line_size) Init(32) Param OptimizationThe size of L1 cache line.
-param=l1-cache-size=Common Joined UInteger Var(param_l1_cache_size) Init(64) Param OptimizationThe size of L1 cache.
-param=l2-cache-size=Common Joined UInteger Var(param_l2_cache_size) Init(512) Param OptimizationThe size of L2 cache.
-param=large-function-growth=Common Joined UInteger Var(param_large_function_growth) Optimization Init(100) ParamMaximal growth due to inlining of large function (in percent).
-param=large-function-insns=Common Joined UInteger Var(param_large_function_insns) Optimization Init(2700) ParamThe size of function body to be considered large.
-param=large-stack-frame-growth=Common Joined UInteger Var(param_stack_frame_growth) Optimization Init(1000) ParamMaximal stack frame growth due to inlining (in percent).
-param=large-stack-frame=Common Joined UInteger Var(param_large_stack_frame) Init(256) Optimization ParamThe size of stack frame to be considered large.
-param=large-unit-insns=Common Joined UInteger Var(param_large_unit_insns) Optimization Init(10000) ParamThe size of translation unit to be considered large.
-param=lazy-modules=C++ Joined UInteger Var(param_lazy_modules) Init(32768) ParamMaximum number of concurrently open C++ module files when lazy loading.
-param=lim-expensive=Common Joined UInteger Var(param_lim_expensive) Init(20) Param OptimizationThe minimum cost of an expensive expression in the loop invariant motion.
-param=logical-op-non-short-circuit=Common Joined UInteger Var(param_logical_op_non_short_circuit) Init(-1) IntegerRange(0, 1) ParamTrue if a non-short-circuit operation is optimal.
-param=loop-block-tile-size=Common Joined UInteger Var(param_loop_block_tile_size) Init(51) Param OptimizationSize of tiles for loop blocking.
-param=loop-interchange-max-num-stmts=Common Joined UInteger Var(param_loop_interchange_max_num_stmts) Init(64) Param OptimizationThe maximum number of stmts in loop nest for loop interchange.
-param=loop-interchange-stride-ratio=Common Joined UInteger Var(param_loop_interchange_stride_ratio) Init(2) Param OptimizationThe minimum stride ratio for loop interchange to be profitable.
-param=loop-invariant-max-bbs-in-loop=Common Joined UInteger Var(param_loop_invariant_max_bbs_in_loop) Init(10000) Param OptimizationMax basic blocks number in loop for loop invariant motion.
-param=loop-max-datarefs-for-datadeps=Common Joined UInteger Var(param_loop_max_datarefs_for_datadeps) Init(1000) Param OptimizationMaximum number of datarefs in loop for building loop data dependencies.
-param=loop-versioning-max-inner-insns=Common Joined UInteger Var(param_loop_versioning_max_inner_insns) Init(200) Param OptimizationThe maximum number of instructions in an inner loop that is being considered for versioning.
-param=loop-versioning-max-outer-insns=Common Joined UInteger Var(param_loop_versioning_max_outer_insns) Init(100) Param OptimizationThe maximum number of instructions in an outer loop that is being considered for versioning, on top of the instructions in inner loops.
-param=lra-inheritance-ebb-probability-cutoff=Common Joined UInteger Var(param_lra_inheritance_ebb_probability_cutoff) Init(40) IntegerRange(0, 100) Param OptimizationMinimal fall-through edge probability in percentage used to add BB to inheritance EBB in LRA.
-param=lra-max-considered-reload-pseudos=Common Joined UInteger Var(param_lra_max_considered_reload_pseudos) Init(500) Param OptimizationThe max number of reload pseudos which are considered during spilling a non-reload pseudo.
-param=lto-max-partition=Common Joined UInteger Var(param_max_partition_size) Init(1000000) ParamMaximal size of a partition for LTO (in estimated instructions).
-param=lto-max-streaming-parallelism=Common Joined UInteger Var(param_max_lto_streaming_parallelism) Init(32) IntegerRange(1, 65536) Parammaximal number of LTO partitions streamed in parallel.
-param=lto-min-partition=Common Joined UInteger Var(param_min_partition_size) Init(10000) ParamMinimal size of a partition for LTO (in estimated instructions).
-param=lto-partitions=Common Joined UInteger Var(param_lto_partitions) Init(128) IntegerRange(1, 65536) ParamNumber of partitions the program should be split to.
-param=max-average-unrolled-insns=Common Joined UInteger Var(param_max_average_unrolled_insns) Init(80) Param OptimizationThe maximum number of instructions to consider to unroll in a loop on average.
-param=max-combine-insns=Common Joined UInteger Var(param_max_combine_insns) Init(4) IntegerRange(2, 4) Param OptimizationThe maximum number of insns combine tries to combine.
-param=max-completely-peel-loop-nest-depth=Common Joined UInteger Var(param_max_unroll_iterations) Init(8) Param OptimizationThe maximum depth of a loop nest we completely peel.
-param=max-completely-peel-times=Common Joined UInteger Var(param_max_completely_peel_times) Init(16) Param OptimizationThe maximum number of peelings of a single loop that is peeled completely.
-param=max-completely-peeled-insns=Common Joined UInteger Var(param_max_completely_peeled_insns) Init(200) Param OptimizationThe maximum number of insns of a completely peeled loop.
-param=max-crossjump-edges=Common Joined UInteger Var(param_max_crossjump_edges) Init(100) Param OptimizationThe maximum number of incoming edges to consider for crossjumping.
-param=max-cse-insns=Common Joined UInteger Var(param_max_cse_insns) Init(1000) Param OptimizationThe maximum instructions CSE process before flushing.
-param=max-cse-path-length=Common Joined UInteger Var(param_max_cse_path_length) Init(10) IntegerRange(1, 65536) Param OptimizationThe maximum length of path considered in cse.
-param=max-cselib-memory-locations=Common Joined UInteger Var(param_max_cselib_memory_locations) Init(500) Param OptimizationThe maximum memory locations recorded by cselib.
-param=max-debug-marker-count=Common Joined UInteger Var(param_max_debug_marker_count) Init(100000) Param OptimizationMax. count of debug markers to expand or inline.
-param=max-delay-slot-insn-search=Common Joined UInteger Var(param_max_delay_slot_insn_search) Init(100) Param OptimizationThe maximum number of instructions to consider to fill a delay slot.
-param=max-delay-slot-live-search=Common Joined UInteger Var(param_max_delay_slot_live_search) Init(333) Param OptimizationThe maximum number of instructions to consider to find accurate live register information.
-param=max-dse-active-local-stores=Common Joined UInteger Var(param_max_dse_active_local_stores) Init(5000) Param OptimizationMaximum number of active local stores in RTL dead store elimination.
-param=max-early-inliner-iterations=Common Joined UInteger Var(param_early_inliner_max_iterations) Init(1) Param OptimizationThe maximum number of nested indirect inlining performed by early inliner.
-param=max-fields-for-field-sensitive=Common Joined UInteger Var(param_max_fields_for_field_sensitive) ParamMaximum number of fields in a structure before pointer analysis treats the structure as a single variable.
-param=max-find-base-term-values=Common Joined UInteger Var(param_max_find_base_term_values) Init(200) Param OptimizationMaximum number of VALUEs handled during a single find_base_term call.
-param=max-fsm-thread-path-insns=Common Joined UInteger Var(param_max_fsm_thread_path_insns) Init(100) IntegerRange(1, 999999) Param OptimizationMaximum number of instructions to copy when duplicating blocks on a finite state automaton jump thread path.
-param=max-gcse-insertion-ratio=Common Joined UInteger Var(param_max_gcse_insertion_ratio) Init(20) Param OptimizationThe maximum ratio of insertions to deletions of expressions in GCSE.
-param=max-gcse-memory=Common Joined UInteger Var(param_max_gcse_memory) Init(131072) Param OptimizationThe maximum amount of memory to be allocated by GCSE, in kilobytes.
-param=max-goto-duplication-insns=Common Joined UInteger Var(param_max_goto_duplication_insns) Init(8) Param OptimizationThe maximum number of insns to duplicate when unfactoring computed gotos.
-param=max-grow-copy-bb-insns=Common Joined UInteger Var(param_max_grow_copy_bb_insns) Init(8) Param OptimizationThe maximum expansion factor when copying basic blocks.
-param=max-hoist-depth=Common Joined UInteger Var(param_max_hoist_depth) Init(30) Param OptimizationMaximum depth of search in the dominator tree for expressions to hoist.
-param=max-inline-functions-called-once-insns=Common Joined UInteger Var(param_inline_functions_called_once_insns) Init(4000) Optimization ParamMaximum combined size of caller and callee which is inlined if callee is called once.
-param=max-inline-functions-called-once-loop-depth=Common Joined UInteger Var(param_inline_functions_called_once_loop_depth) Init(6) Optimization ParamMaximum loop depth of a call which is considered for inlining functions called once.
-param=max-inline-insns-auto=Common Joined UInteger Var(param_max_inline_insns_auto) Init(15) Optimization ParamThe maximum number of instructions when automatically inlining.
-param=max-inline-insns-recursive-auto=Common Joined UInteger Var(param_max_inline_insns_recursive_auto) Optimization Init(450) ParamThe maximum number of instructions non-inline function can grow to via recursive inlining.
-param=max-inline-insns-recursive=Common Joined UInteger Var(param_max_inline_insns_recursive) Optimization Init(450) ParamThe maximum number of instructions inline function can grow to via recursive inlining.
-param=max-inline-insns-single=Common Joined UInteger Var(param_max_inline_insns_single) Optimization Init(70) ParamThe maximum number of instructions in a single function eligible for inlining.
-param=max-inline-insns-size=Common Joined UInteger Var(param_max_inline_insns_size) Optimization ParamThe maximum number of instructions when inlining for size.
-param=max-inline-insns-small=Common Joined UInteger Var(param_max_inline_insns_small) Optimization ParamThe maximum number of instructions when automatically inlining small functions.
-param=max-inline-recursive-depth-auto=Common Joined UInteger Var(param_max_inline_recursive_depth_auto) Optimization Init(8) ParamThe maximum depth of recursive inlining for non-inline functions.
-param=max-inline-recursive-depth=Common Joined UInteger Var(param_max_inline_recursive_depth) Optimization Init(8) ParamThe maximum depth of recursive inlining for inline functions.
-param=max-isl-operations=Common Joined UInteger Var(param_max_isl_operations) Init(350000) Param OptimizationMaximum number of isl operations, 0 means unlimited.
-param=max-iterations-computation-cost=Common Joined UInteger Var(param_max_iterations_computation_cost) Init(10) Param OptimizationBound on the cost of an expression to compute the number of iterations.
-param=max-iterations-to-track=Common Joined UInteger Var(param_max_iterations_to_track) Init(1000) Param OptimizationBound on the number of iterations the brute force # of iterations analysis algorithm evaluates.
-param=max-jump-thread-duplication-stmts=Common Joined UInteger Var(param_max_jump_thread_duplication_stmts) Init(15) Param OptimizationMaximum number of statements allowed in a block that needs to be duplicated when threading jumps.
-param=max-jump-thread-paths=Common Joined UInteger Var(param_max_jump_thread_paths) Init(64) IntegerRange(1, 65536) Param OptimizationSearch space limit for the backwards jump threader.
-param=max-last-value-rtl=Common Joined UInteger Var(param_max_last_value_rtl) Init(10000) Param OptimizationThe maximum number of RTL nodes that can be recorded as combiner's last value.
-param=max-loop-header-insns=Common Joined UInteger Var(param_max_loop_header_insns) Init(20) Param OptimizationThe maximum number of insns in loop header duplicated by the copy loop headers pass.
-param=max-modulo-backtrack-attempts=Common Joined UInteger Var(param_max_modulo_backtrack_attempts) Init(40) Param OptimizationThe maximum number of backtrack attempts the scheduler should make when modulo scheduling a loop.
-param=max-partial-antic-length=Common Joined UInteger Var(param_max_partial_antic_length) Init(100) Param OptimizationMaximum length of partial antic set when performing tree pre optimization.
-param=max-peel-branches=Common Joined UInteger Var(param_max_peel_branches) Init(32) Param OptimizationThe maximum number of branches on the path through the peeled sequence.
-param=max-peel-times=Common Joined UInteger Var(param_max_peel_times) Init(16) Param OptimizationThe maximum number of peelings of a single loop.
-param=max-peeled-insns=Common Joined UInteger Var(param_max_peeled_insns) Init(100) Param OptimizationThe maximum number of insns of a peeled loop.
-param=max-pending-list-length=Common Joined UInteger Var(param_max_pending_list_length) Init(32) Param OptimizationThe maximum length of scheduling's pending operations list.
-param=max-pipeline-region-blocks=Common Joined UInteger Var(param_max_pipeline_region_blocks) Init(15) Param OptimizationThe maximum number of blocks in a region to be considered for interblock scheduling.
-param=max-pipeline-region-insns=Common Joined UInteger Var(param_max_pipeline_region_insns) Init(200) Param OptimizationThe maximum number of insns in a region to be considered for interblock scheduling.
-param=max-pow-sqrt-depth=Common Joined UInteger Var(param_max_pow_sqrt_depth) Init(5) IntegerRange(1, 32) Param OptimizationMaximum depth of sqrt chains to use when synthesizing exponentiation by a real constant.
-param=max-predicted-iterations=Common Joined UInteger Var(param_max_predicted_iterations) Init(100) IntegerRange(0, 65536) Param OptimizationThe maximum number of loop iterations we predict statically.
-param=max-reload-search-insns=Common Joined UInteger Var(param_max_reload_search_insns) Init(100) Param OptimizationThe maximum number of instructions to search backward when looking for equivalent reload.
-param=max-rtl-if-conversion-insns=Common Joined UInteger Var(param_max_rtl_if_conversion_insns) Init(10) IntegerRange(0, 99) Param OptimizationMaximum number of insns in a basic block to consider for RTL if-conversion.
-param=max-rtl-if-conversion-predictable-cost=Common Joined UInteger Var(param_max_rtl_if_conversion_predictable_cost) Init(20) IntegerRange(0, 200) Param OptimizationMaximum permissible cost for the sequence that would be generated by the RTL if-conversion pass for a branch that is considered predictable.
-param=max-rtl-if-conversion-unpredictable-cost=Common Joined UInteger Var(param_max_rtl_if_conversion_unpredictable_cost) Init(40) IntegerRange(0, 200) Param OptimizationMaximum permissible cost for the sequence that would be generated by the RTL if-conversion pass for a branch that is considered unpredictable.
-param=max-sched-extend-regions-iters=Common Joined UInteger Var(param_max_sched_extend_regions_iters) Param OptimizationThe maximum number of iterations through CFG to extend regions.
-param=max-sched-insn-conflict-delay=Common Joined UInteger Var(param_max_sched_insn_conflict_delay) Init(3) IntegerRange(1, 10) Param OptimizationThe maximum conflict delay for an insn to be considered for speculative motion.
-param=max-sched-ready-insns=Common Joined UInteger Var(param_max_sched_ready_insns) Init(100) IntegerRange(1, 65536) Param OptimizationThe maximum number of instructions ready to be issued to be considered by the scheduler during the first scheduling pass.
-param=max-sched-region-blocks=Common Joined UInteger Var(param_max_sched_region_blocks) Init(10) Param OptimizationThe maximum number of blocks in a region to be considered for interblock scheduling.
-param=max-sched-region-insns=Common Joined UInteger Var(param_max_sched_region_insns) Init(100) Param OptimizationThe maximum number of insns in a region to be considered for interblock scheduling.
-param=max-slsr-cand-scan=Common Joined UInteger Var(param_max_slsr_candidate_scan) Init(50) IntegerRange(1, 999999) Param OptimizationMaximum length of candidate scans for straight-line strength reduction.
-param=max-speculative-devirt-maydefs=Common Joined UInteger Var(param_max_speculative_devirt_maydefs) Init(50) Param OptimizationMaximum number of may-defs visited when devirtualizing speculatively.
-param=max-ssa-name-query-depth=Common Joined UInteger Var(param_max_ssa_name_query_depth) Init(3) IntegerRange(1, 10) ParamMaximum recursion depth allowed when querying a property of an SSA name.
-param=max-store-chains-to-track=Common Joined UInteger Var(param_max_store_chains_to_track) Init(64) IntegerRange(1, 65536) ParamMaximum number of store chains to track at the same time in the store merging pass.
-param=max-stores-to-merge=Common Joined UInteger Var(param_max_stores_to_merge) Init(64) IntegerRange(2, 65536) Param OptimizationMaximum number of constant stores to merge in the store merging pass.
-param=max-stores-to-sink=Common Joined UInteger Var(param_max_stores_to_sink) Init(2) Param OptimizationMaximum number of conditional store pairs that can be sunk.
-param=max-stores-to-track=Common Joined UInteger Var(param_max_stores_to_track) Init(1024) IntegerRange(2, 1048576) ParamMaximum number of store chains to track at the same time in the store merging pass.
-param=max-tail-merge-comparisons=Common Joined UInteger Var(param_max_tail_merge_comparisons) Init(10) Param OptimizationMaximum amount of similar bbs to compare a bb with.
-param=max-tail-merge-iterations=Common Joined UInteger Var(param_max_tail_merge_iterations) Init(2) Param OptimizationMaximum amount of iterations of the pass over a function.
-param=max-tracked-strlens=Common Joined UInteger Var(param_max_tracked_strlens) Init(10000) Param OptimizationMaximum number of strings for which strlen optimization pass will track string lengths.
-param=max-tree-if-conversion-phi-args=Common Joined UInteger Var(param_max_tree_if_conversion_phi_args) Init(4) IntegerRange(2, 65536) Param OptimizationMaximum number of arguments in a PHI supported by TREE if-conversion unless the loop is marked with simd pragma.
-param=max-unroll-times=Common Joined UInteger Var(param_max_unroll_times) Init(8) Param OptimizationThe maximum number of unrollings of a single loop.
-param=max-unrolled-insns=Common Joined UInteger Var(param_max_unrolled_insns) Init(200) Param OptimizationThe maximum number of instructions to consider to unroll in a loop.
-param=max-unswitch-depth=Common Joined UInteger Var(param_max_unswitch_depth) Init(50) IntegerRange(1, 50) Param OptimizationThe maximum depth of a loop nest to be unswitched.
-param=max-unswitch-insns=Common Joined UInteger Var(param_max_unswitch_insns) Init(50) Param OptimizationThe maximum number of insns of an unswitched loop.
-param=max-variable-expansions-in-unroller=Common Joined UInteger Var(param_max_variable_expansions) Init(1) Param OptimizationIf -fvariable-expansion-in-unroller is used, the maximum number of times that an individual variable will be expanded during loop unrolling.
-param=max-vartrack-expr-depth=Common Joined UInteger Var(param_max_vartrack_expr_depth) Init(12) Param OptimizationMax. recursion depth for expanding var tracking expressions.
-param=max-vartrack-reverse-op-size=Common Joined UInteger Var(param_max_vartrack_reverse_op_size) Init(50) Param OptimizationMax. size of loc list for which reverse ops should be added.
-param=max-vartrack-size=Common Joined UInteger Var(param_max_vartrack_size) Init(50000000) Param OptimizationMax. size of var tracking hash tables.
-param=min-crossjump-insns=Common Joined UInteger Var(param_min_crossjump_insns) Init(5) IntegerRange(1, 65536) Param OptimizationThe minimum number of matching instructions to consider for crossjumping.
-param=min-inline-recursive-probability=Common Joined UInteger Var(param_min_inline_recursive_probability) Init(10) Optimization ParamInline recursively only when the probability of call being executed exceeds the parameter.
-param=min-insn-to-prefetch-ratio=Common Joined UInteger Var(param_min_insn_to_prefetch_ratio) Init(9) Param OptimizationMin. ratio of insns to prefetches to enable prefetching for a loop with an unknown trip count.
-param=min-loop-cond-split-prob=Common Joined UInteger Var(param_min_loop_cond_split_prob) Init(30) IntegerRange(0, 100) Param OptimizationThe minimum threshold for probability of semi-invariant condition statement to trigger loop split.
-param=min-nondebug-insn-uid=Common Joined UInteger Var(param_min_nondebug_insn_uid) Param IntegerRange(0, 1073741824)The minimum UID to be used for a nondebug insn.
-param=min-pagesize=Common Joined UInteger Var(param_min_pagesize) Init(4096) Param OptimizationMinimum page size for warning purposes.
-param=min-size-for-stack-sharing=Common Joined UInteger Var(param_min_size_for_stack_sharing) Init(32) Param OptimizationThe minimum size of variables taking part in stack slot sharing when not optimizing.
-param=min-spec-prob=Common Joined UInteger Var(param_min_spec_prob) Init(40) Param OptimizationThe minimum probability of reaching a source block for interblock speculative scheduling.
-param=min-vect-loop-bound=Common Joined UInteger Var(param_min_vect_loop_bound) Param OptimizationIf -ftree-vectorize is used, the minimal loop bound of a loop to be considered for vectorization.
-param=modref-max-accesses=Common Joined UInteger Var(param_modref_max_accesses) Init(16) Param OptimizationMaximum number of accesses stored in each modref reference.
-param=modref-max-adjustments=Common Joined UInteger Var(param_modref_max_adjustments) Init(8) IntegerRange(0, 254) Param OptimizationMaximum number of times a given range is adjusted during the dataflow.
-param=modref-max-bases=Common Joined UInteger Var(param_modref_max_bases) Init(32) Param OptimizationMaximum number of bases stored in each modref tree.
-param=modref-max-depth=Common Joined UInteger Var(param_modref_max_depth) Init(256) IntegerRange(1, 65536) Param OptimizationMaximum depth of DFS walk used by modref escape analysis.
-param=modref-max-escape-points=Common Joined UInteger Var(param_modref_max_escape_points) Init(256) Param OptimizationMaximum number of escape points tracked by modref per SSA-name.
-param=modref-max-refs=Common Joined UInteger Var(param_modref_max_refs) Init(16) Param OptimizationMaximum number of references stored in each modref base.
-param=modref-max-tests=Common Joined UInteger Var(param_modref_max_tests) Init(64) Param OptimizationMaximum number of tests performed by modref query.
-param=openacc-kernels=Common Joined Enum(openacc_kernels) Var(param_openacc_kernels) Init(OPENACC_KERNELS_PARLOOPS) Param--param=openacc-kernels=[decompose|parloops]	Specify mode of OpenACC 'kernels' constructs handling.
-param=openacc-privatization=Common Joined Enum(openacc_privatization) Var(param_openacc_privatization) Init(OPENACC_PRIVATIZATION_QUIET) Param--param=openacc-privatization=[quiet|noisy]	Specify mode of OpenACC privatization diagnostics.
-param=parloops-chunk-size=Common Joined UInteger Var(param_parloops_chunk_size) Param OptimizationChunk size of omp schedule for loops parallelized by parloops.
-param=parloops-min-per-thread=Common Joined UInteger Var(param_parloops_min_per_thread) Init(100) IntegerRange(2, 65536) Param OptimizationMinimum number of iterations per thread of an innermost parallelized loop.
-param=parloops-schedule=Common Joined Var(param_parloops_schedule) Enum(parloops_schedule_type) Param Optimization--param=parloops-schedule=[static|dynamic|guided|auto|runtime]	Schedule type of omp schedule for loops parallelized by parloops.
-param=partial-inlining-entry-probability=Common Joined UInteger Var(param_partial_inlining_entry_probability) Init(70) Optimization IntegerRange(0, 100) ParamMaximum probability of the entry BB of split region (in percent relative to entry BB of the function) to make partial inlining happen.
-param=phiopt-factor-max-stmts-live=Common Joined UInteger Var(param_phiopt_factor_max_stmts_live) Init(5) Optimization IntegerRange(0, 100) ParamMaximum number of statements allowed inbetween the statement and the end to considered not extending the liferange.
-param=predictable-branch-outcome=Common Joined UInteger Var(param_predictable_branch_outcome) Init(2) IntegerRange(0, 50) Param OptimizationMaximal estimated outcome of branch considered predictable.
-param=prefetch-dynamic-strides=Common Joined UInteger Var(param_prefetch_dynamic_strides) Init(1) IntegerRange(0, 1) Param OptimizationWhether software prefetch hints should be issued for non-constant strides.
-param=prefetch-latency=Common Joined UInteger Var(param_prefetch_latency) Init(200) Param OptimizationThe number of insns executed before prefetch is completed.
-param=prefetch-min-insn-to-mem-ratio=Common Joined UInteger Var(param_prefetch_min_insn_to_mem_ratio) Init(3) Param OptimizationMin. ratio of insns to mem ops to enable prefetching in a loop.
-param=prefetch-minimum-stride=Common Joined UInteger Var(param_prefetch_minimum_stride) Init(-1) Param OptimizationThe minimum constant stride beyond which we should use prefetch hints for.
-param=profile-func-internal-id=Common Joined UInteger Var(param_profile_func_internal_id) IntegerRange(0, 1) ParamUse internal function id in profile lookup.
-param=ranger-debug=Common Joined Var(param_ranger_debug) Enum(ranger_debug) Init(RANGER_DEBUG_NONE) Param Optimization--param=ranger-debug=[none|trace|gori|cache|tracegori|all] Specifies the output mode for debugging ranger.
-param=ranger-logical-depth=Common Joined UInteger Var(param_ranger_logical_depth) Init(6) IntegerRange(1, 999) Param OptimizationMaximum depth of logical expression evaluation ranger will look through whenevaluating outgoing edge ranges.
-param=ranger-recompute-depth=Common Joined UInteger Var(param_ranger_recompute_depth) Init(5) IntegerRange(1, 100) Param OptimizationMaximum depth of instruction chains to consider for recomputation in theoutgoing range calculator.
-param=relation-block-limit=Common Joined UInteger Var(param_relation_block_limit) Init(200) IntegerRange(0, 9999) Param OptimizationMaximum number of relations the oracle will register in a basic block.
-param=rpo-vn-max-loop-depth=Common Joined UInteger Var(param_rpo_vn_max_loop_depth) Init(7) IntegerRange(2, 65536) Param OptimizationMaximum depth of a loop nest to fully value-number optimistically.
-param=sccvn-max-alias-queries-per-access=Common Joined UInteger Var(param_sccvn_max_alias_queries_per_access) Init(1000) Param OptimizationMaximum number of disambiguations to perform per memory access.
-param=scev-max-expr-complexity=Common Joined UInteger Var(param_scev_max_expr_complexity) Init(10) Param OptimizationBound on the complexity of the expressions in the scalar evolutions analyzer.
-param=scev-max-expr-size=Common Joined UInteger Var(param_scev_max_expr_size) Init(100) Param OptimizationBound on size of expressions used in the scalar evolutions analyzer.
-param=sched-autopref-queue-depth=Common Joined UInteger Var(param_sched_autopref_queue_depth) Init(-1) Param OptimizationHardware autoprefetcher scheduler model control flag.  Number of lookahead cycles the model looks into, at '0' only enable instruction sorting heuristic.  Disabled by default.
-param=sched-mem-true-dep-cost=Common Joined UInteger Var(param_sched_mem_true_dep_cost) Init(1) Param OptimizationMinimal distance between possibly conflicting store and load.
-param=sched-pressure-algorithm=Common Joined UInteger Var(param_sched_pressure_algorithm) Init(1) IntegerRange(1, 2) Param OptimizationWhich -fsched-pressure algorithm to apply.
-param=sched-spec-prob-cutoff=Common Joined UInteger Var(param_sched_spec_prob_cutoff) Init(40) IntegerRange(0, 100) Param OptimizationThe minimal probability of speculation success (in percents), so that speculative insn will be scheduled.
-param=sched-state-edge-prob-cutoff=Common Joined UInteger Var(param_sched_state_edge_prob_cutoff) Init(10) IntegerRange(0, 100) Param OptimizationThe minimum probability an edge must have for the scheduler to save its state across it.
-param=selsched-insns-to-rename=Common Joined UInteger Var(param_selsched_insns_to_rename) Init(2) Param OptimizationMaximum number of instructions in the ready list that are considered eligible for renaming.
-param=selsched-max-lookahead=Common Joined UInteger Var(param_selsched_max_lookahead) Init(50) Param OptimizationThe maximum size of the lookahead window of selective scheduling.
-param=selsched-max-sched-times=Common Joined UInteger Var(param_selsched_max_sched_times) Init(2) IntegerRange(1, 65536) Param OptimizationMaximum number of times that an insn could be scheduled.
-param=simultaneous-prefetches=Common Joined UInteger Var(param_simultaneous_prefetches) Init(3) Param OptimizationThe number of prefetches that can run at the same time.
-param=sink-frequency-threshold=Common Joined UInteger Var(param_sink_frequency_threshold) Init(75) IntegerRange(0, 100) Param OptimizationTarget block's relative execution frequency (as a percentage) required to sink a statement.
-param=sms-dfa-history=Common Joined UInteger Var(param_sms_dfa_history) IntegerRange(0, 16) Param OptimizationThe number of cycles the swing modulo scheduler considers when checking conflicts using DFA.
-param=sms-loop-average-count-threshold=Common Joined UInteger Var(param_sms_loop_average_count_threshold) Param OptimizationA threshold on the average loop count considered by the swing modulo scheduler.
-param=sms-max-ii-factor=Common Joined UInteger Var(param_sms_max_ii_factor) Init(2) IntegerRange(1, 16) Param OptimizationA factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop.
-param=sms-min-sc=Common Joined UInteger Var(param_sms_min_sc) Init(2) IntegerRange(1, 2) Param OptimizationThe minimum value of stage count that swing modulo scheduler will generate.
-param=sra-max-propagations=Common Joined UInteger Var(param_sra_max_propagations) Param Optimization Init(32)Maximum number of artificial accesses to enable forward propagation that Scalar Replacement of Aggregates will keep for one local variable.
-param=sra-max-scalarization-size-Osize=Common Joined UInteger Var(param_sra_max_scalarization_size_size) Param OptimizationMaximum size, in storage units, of an aggregate which should be considered for scalarization when compiling for size.
-param=sra-max-scalarization-size-Ospeed=Common Joined UInteger Var(param_sra_max_scalarization_size_speed) Param OptimizationMaximum size, in storage units, of an aggregate which should be considered for scalarization when compiling for speed.
-param=ssa-name-def-chain-limit=Common Joined UInteger Var(param_ssa_name_def_chain_limit) Init(512) Param OptimizationThe maximum number of SSA_NAME assignments to follow in determining a value.
-param=ssp-buffer-size=Common Joined UInteger Var(param_ssp_buffer_size) Init(8) IntegerRange(1, 65536) Param OptimizationThe lower bound for a buffer to be considered for stack smashing protection.
-param=stack-clash-protection-guard-size=Common Joined UInteger Var(param_stack_clash_protection_guard_size) Init(12) IntegerRange(12, 30) Param OptimizationSize of the stack guard expressed as a power of two in bytes.
-param=stack-clash-protection-probe-interval=Common Joined UInteger Var(param_stack_clash_protection_probe_interval) Init(12) IntegerRange(10, 16) Param OptimizationInterval in which to probe the stack expressed as a power of two in bytes.
-param=store-forwarding-max-distance=Common Joined UInteger Var(param_store_forwarding_max_distance) Init(10) IntegerRange(0, 1000) Param OptimizationMaximum number of instruction distance that a small store forwarded to a larger load may stall. Value '0' disables the cost checks for the avoid-store-forwarding pass.
-param=store-merging-allow-unaligned=Common Joined UInteger Var(param_store_merging_allow_unaligned) Init(1) IntegerRange(0, 1) Param OptimizationAllow the store merging pass to introduce unaligned stores if it is legal to do so.
-param=store-merging-max-size=Common Joined UInteger Var(param_store_merging_max_size) Init(65536) IntegerRange(1, 65536) Param OptimizationMaximum size of a single store merging region in bytes.
-param=switch-conversion-max-branch-ratio=Common Joined UInteger Var(param_switch_conversion_branch_ratio) Init(8) IntegerRange(1, 65536) Param OptimizationThe maximum ratio between array size and switch branches for a switch conversion to take place.
-param=switch-lower-slow-alg-max-cases=Common Joined UInteger Var(param_switch_lower_slow_alg_max_cases) Init(1000) IntegerRange(1, 1000000000) Param OptimizationMaximum number of cases for slow switch lowering algorithms to be used.
-param=threader-debug=Common Joined Var(param_threader_debug) Enum(threader_debug) Init(THREADER_DEBUG_NONE) Param Optimization--param=threader-debug=[none|all] Enables verbose dumping of the threader solver.
-param=tm-max-aggregate-size=Common Joined UInteger Var(param_tm_max_aggregate_size) Init(9) Param OptimizationSize in bytes after which thread-local aggregates should be instrumented with the logging functions instead of save/restore pairs.
-param=tracer-dynamic-coverage-feedback=Common Joined UInteger Var(param_tracer_dynamic_coverage_feedback) Init(95) IntegerRange(0, 100) Param OptimizationThe percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is available.
-param=tracer-dynamic-coverage=Common Joined UInteger Var(param_tracer_dynamic_coverage) Init(75) IntegerRange(0, 100) Param OptimizationThe percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is not available.
-param=tracer-max-code-growth=Common Joined UInteger Var(param_tracer_max_code_growth) Init(100) Param OptimizationMaximal code growth caused by tail duplication (in percent).
-param=tracer-min-branch-probability-feedback=Common Joined UInteger Var(param_tracer_min_branch_probability_feedback) Init(80) IntegerRange(0, 100) Param OptimizationStop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is available.
-param=tracer-min-branch-probability=Common Joined UInteger Var(param_tracer_min_branch_probability) Init(50) IntegerRange(0, 100) Param OptimizationStop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is not available.
-param=tracer-min-branch-ratio=Common Joined UInteger Var(param_tracer_min_branch_ratio) Init(10) IntegerRange(0, 100) Param OptimizationStop reverse growth if the reverse probability of best edge is less than this threshold (in percent).
-param=transitive-relations-work-bound=Common Joined UInteger Var(param_transitive_relations_work_bound) Init(256) IntegerRange(0, 9999) Param OptimizationWork bound when discovering transitive relations from existing relations.
-param=tree-reassoc-width=Common Joined UInteger Var(param_tree_reassoc_width) IntegerRange(0, 256) Param OptimizationSet the maximum number of instructions executed in parallel in reassociated tree.  If 0, use the target dependent heuristic.
-param=tsan-distinguish-volatile=Common Joined UInteger Var(param_tsan_distinguish_volatile) IntegerRange(0, 1) ParamEmit special instrumentation for accesses to volatiles.
-param=tsan-instrument-func-entry-exit=Common Joined UInteger Var(param_tsan_instrument_func_entry_exit) Init(1) IntegerRange(0, 1) ParamEmit instrumentation calls to __tsan_func_entry() and __tsan_func_exit().
-param=uninit-control-dep-attempts=Common Joined UInteger Var(param_uninit_control_dep_attempts) Init(1000) IntegerRange(1, 65536) Param OptimizationMaximum number of nested calls to search for control dependencies during uninitialized variable analysis.
-param=uninit-max-chain-len=Common Joined UInteger Var(param_uninit_max_chain_len) Init(8) IntegerRange(1, 128) Param OptimizationMaximum number of predicates anded for each predicate ored in the normalizedpredicate chain.
-param=uninit-max-num-chains=Common Joined UInteger Var(param_uninit_max_num_chains) Init(8) IntegerRange(1, 128) Param OptimizationMaximum number of predicates ored in the normalized predicate chain.
-param=uninlined-function-insns=Common Joined UInteger Var(param_uninlined_function_insns) Init(2) Optimization IntegerRange(0, 1000000) ParamInstruction accounted for function prologue, epilogue and other overhead.
-param=uninlined-function-time=Common Joined UInteger Var(param_uninlined_function_time) Optimization IntegerRange(0, 1000000) ParamTime accounted for function prologue, epilogue and other overhead.
-param=uninlined-thunk-insns=Common Joined UInteger Var(param_uninlined_function_thunk_insns) Optimization Init(2) IntegerRange(0, 1000000) ParamInstruction accounted for function thunk overhead.
-param=uninlined-thunk-time=Common Joined UInteger Var(param_uninlined_function_thunk_time) Optimization Init(2) IntegerRange(0, 1000000) ParamTime accounted for function thunk overhead.
-param=unlikely-bb-count-fraction=Common Joined UInteger Var(param_unlikely_bb_count_fraction) Init(20) Param OptimizationThe denominator n of fraction 1/n of the number of profiled runs of the entire program below which the execution count of a basic block must be in order for the basic block to be considered unlikely.
-param=unroll-jam-max-unroll=Common Joined UInteger Var(param_unroll_jam_max_unroll) Init(4) Param OptimizationMaximum unroll factor for the unroll-and-jam transformation.
-param=unroll-jam-min-percent=Common Joined UInteger Var(param_unroll_jam_min_percent) Init(1) IntegerRange(0, 100) Param OptimizationMinimum percentage of memrefs that must go away for unroll-and-jam to be considered profitable.
-param=use-after-scope-direct-emission-threshold=Common Joined UInteger Var(param_use_after_scope_direct_emission_threshold) Init(256) Param OptimizationUse direct poisoning/unpoisoning instructions for variables smaller or equal to this number.
-param=use-canonical-types=Common Joined UInteger Var(param_use_canonical_types) Init(1) IntegerRange(0, 1) ParamWhether to use canonical types.
-param=vect-epilogues-nomask=Common Joined UInteger Var(param_vect_epilogues_nomask) Init(1) IntegerRange(0, 1) Param OptimizationEnable loop epilogue vectorization using smaller vector size.
-param=vect-force-slp=Common Joined UInteger Var(param_vect_force_slp) Init(1) IntegerRange(0, 1) Param OptimizationForce the use of SLP when vectorizing, fail if not possible.
-param=vect-induction-float=Common Joined UInteger Var(param_vect_induction_float) Init(1) IntegerRange(0, 1) Param OptimizationEnable loop vectorization of floating point inductions.
-param=vect-inner-loop-cost-factor=Common Joined UInteger Var(param_vect_inner_loop_cost_factor) Init(50) IntegerRange(1, 10000) Param OptimizationThe maximum factor which the loop vectorizer applies to the cost of statements in an inner loop relative to the loop being vectorized.
-param=vect-max-layout-candidates=Common Joined UInteger Var(param_vect_max_layout_candidates) Init(32) Param OptimizationMaximum number of possible vector layouts (such as permutations) to consider when optimizing to-be-vectorized code.
-param=vect-max-peeling-for-alignment=Common Joined UInteger Var(param_vect_max_peeling_for_alignment) Init(-1) IntegerRange(0, 64) Param OptimizationMaximum number of loop peels to enhance alignment of data references in a loop.
-param=vect-max-version-for-alias-checks=Common Joined UInteger Var(param_vect_max_version_for_alias_checks) Init(15) Param OptimizationBound on number of runtime checks inserted by the vectorizer's loop versioning for alias check.
-param=vect-max-version-for-alignment-checks=Common Joined UInteger Var(param_vect_max_version_for_alignment_checks) Init(6) Param OptimizationBound on number of runtime checks inserted by the vectorizer's loop versioning for alignment check.
-param=vect-partial-vector-usage=Common Joined UInteger Var(param_vect_partial_vector_usage) Init(2) IntegerRange(0, 2) Param OptimizationControls how loop vectorizer uses partial vectors.  0 means never, 1 means only for loops whose need to iterate can be removed, 2 means for all loops.  The default value is 2.
-param=vrp-block-limit=Common Joined UInteger Var(param_vrp_block_limit) Init(150000) Optimization ParamMaximum number of basic blocks before VRP switches to a fast model with less memory requirements.
-param=vrp-sparse-threshold=Common Joined UInteger Var(param_vrp_sparse_threshold) Init(3000) Optimization ParamMaximum number of basic blocks before VRP uses a sparse bitmap cache.
-param=vrp-switch-limit=Common Joined UInteger Var(param_vrp_switch_limit) Init(50) Optimization ParamMaximum number of outgoing edges in a switch before VRP will not process it.
-param=vrp-vector-threshold=Common Joined UInteger Var(param_vrp_vector_threshold) Init(250) Optimization ParamMaximum number of basic blocks for VRP to use a basic cache vector.
-param=x86-stlf-window-ninsns=Target Joined UInteger Var(x86_stlf_window_ninsns) Init(64) ParamInstructions number above which STFL stall penalty can be compensated.
-param=x86-stv-max-visits=Target Joined UInteger Var(x86_stv_max_visits) Init(10000) IntegerRange(1, 1000000) ParamThe maximum number of use and def visits when discovering a STV chain before the discovery is aborted.
-pass-exit-codesDriver Alias(pass-exit-codes)
-pedanticC ObjC C++ ObjC++ Alias(pedantic)
-pedanticCommon Alias(Wpedantic)
-pedantic-errorsCommon Alias(pedantic-errors)
-pieDriver Alias(pie)
-pipeDriver Alias(pipe)
-prefixDriver Separate Alias(B)
-prefix=Driver JoinedOrMissing Alias(B)
-preprocessC ObjC C++ ObjC++ Undocumented Alias(E)
-preprocessDriver Alias(E)
-preprocessFortran Undocumented Alias(E)
-print-file-nameDriver Separate Alias(print-file-name=)
-print-file-name=Driver JoinedOrMissing Alias(print-file-name=)
-print-libgcc-file-nameDriver Alias(print-libgcc-file-name)
-print-missing-file-dependenciesC ObjC C++ ObjC++ Alias(MG)
-print-missing-file-dependenciesD Alias(MG)
-print-missing-file-dependenciesFortran Alias(MG)
-print-multi-directoryDriver Alias(print-multi-directory)
-print-multi-libDriver Alias(print-multi-lib)
-print-multi-os-directoryDriver Alias(print-multi-os-directory)
-print-multiarchDriver Alias(print-multiarch)
-print-prog-nameDriver Separate Alias(print-prog-name=)
-print-prog-name=Driver JoinedOrMissing Alias(print-prog-name=)
-print-search-dirsDriver Alias(print-search-dirs)
-print-sysrootDriver Alias(print-sysroot)
-print-sysroot-headers-suffixDriver Alias(print-sysroot-headers-suffix)
-profileCommon Alias(p)
-save-tempsDriver Alias(save-temps)
-save-tempsModula-2 Alias(save-temps)
-sharedDriver Alias(shared)
-specsDriver Separate Alias(specs=)
-specs=Driver Joined Alias(specs=)
-staticDriver Alias(static)
-static-pieDriver Alias(static-pie)
-symbolicDriver Alias(symbolic)
-sysrootDriver Separate Alias(-sysroot=)
-sysroot=Driver JoinedOrMissing
-target-helpCommon DriverDisplay target specific command line options (including assembler and linker options).
-timeDriver Alias(time)
-trace-includesC ObjC C++ ObjC++ Alias(H)
-trace-includesFortran Alias(H)
-traditionalDriver Alias(traditional)
-traditional-cppC ObjC C++ ObjC++ Alias(traditional-cpp)
-trigraphsC ObjC C++ ObjC++ Alias(trigraphs)
-undefine-macroC ObjC C++ ObjC++ Separate Alias(U) MissingArgError(macro name missing after %qs)
-undefine-macroFortran Separate Alias(U)
-undefine-macro=C ObjC C++ ObjC++ Joined Alias(U) MissingArgError(macro name missing after %qs)
-undefine-macro=Fortran Joined Alias(U)
-user-dependenciesC ObjC C++ ObjC++ Alias(MM)
-user-dependenciesD Alias(MM)
-user-dependenciesFortran Alias(MM)
-verboseCommon C ObjC C++ ObjC++ Alias(v)
-verboseD Alias(v)
-verboseDriver Alias(v)
-verboseFortran Alias(v)
-versionCommon Driver
-write-dependenciesC ObjC C++ ObjC++ NoDriverArg Separate Alias(MD) MissingArgError(missing filename after %qs)
-write-dependenciesD NoDriverArg Separate Alias(MD)
-write-dependenciesFortran NoDriverArg Separate Alias(MD)
-write-user-dependenciesC ObjC C++ ObjC++ NoDriverArg Separate Alias(MMD) MissingArgError(missing filename after %qs)
-write-user-dependenciesD NoDriverArg Separate Alias(MMD)
-write-user-dependenciesFortran NoDriverArg Separate Alias(MMD)
AC ObjC C++ ObjC++ Joined Separate MissingArgError(assertion missing after %qs)-A<question>=<answer>	Assert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>.
AFortran Joined Separate
AUrlSuffix(gcc/Preprocessor-Options.html#index-A)
AUrlSuffix(gcc/Preprocessor-Options.html#index-A)
BDriver Joined Separate
BModula-2
BUrlSuffix(gcc/Directory-Options.html#index-B) LangUrlSuffix_D(gdc/Directory-Options.html#index-B)
BUrlSuffix(gcc/Directory-Options.html#index-B) LangUrlSuffix_D(gdc/Directory-Options.html#index-B)
CC ObjC C++ ObjC++Do not discard comments.
CFortran
CUrlSuffix(gcc/Preprocessor-Options.html#index-C) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-C)
CUrlSuffix(gcc/Preprocessor-Options.html#index-C) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-C)
CCC ObjC C++ ObjC++Do not discard comments in macro expansions.
CCFortran
CCUrlSuffix(gcc/Preprocessor-Options.html#index-CC) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-CC)
CCUrlSuffix(gcc/Preprocessor-Options.html#index-CC) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-CC)
DC ObjC C++ ObjC++ Joined Separate MissingArgError(macro name missing after %qs)-D<macro>[=<val>]	Define a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1.
DFortran Joined Separate
DModula-2
DUrlSuffix(gcc/Preprocessor-Options.html#index-D-1)
DUrlSuffix(gcc/Preprocessor-Options.html#index-D-1)
DUrlSuffix(gcc/Preprocessor-Options.html#index-D-1)
EC ObjC C++ ObjC++ Undocumented Var(flag_preprocess_only)
EDriver
EFortran Undocumented
EModula-2
EnumName(apx_features) Type(int)
EnumName(asm_dialect) Type(enum asm_dialect)Known assembler dialects (for use with the -masm= option):
EnumName(auto_init_type) Type(enum auto_init_type) UnknownError(unrecognized automatic variable initialization type %qs)
EnumName(bounds_check) Type(int) UnknownError(unknown array bounds setting %qs)
EnumName(calling_abi) Type(enum calling_abi)Known ABIs (for use with the -mabi= option):
EnumName(cf_protection_level) Type(enum cf_protection_level) UnknownError(unknown Control-Flow Protection Level %qs)
EnumName(check_action) Type(int) UnknownError(unknown checkaction setting %qs)
EnumName(cmodel) Type(enum cmodel)Known code models (for use with the -mcmodel= option):
EnumName(compressed_debug_sections) Type(int)
EnumName(cpp_bidirectional_level) Type(int) UnknownError(argument %qs to %<-Wbidi-chars%> not recognized)
EnumName(cpp_normalize_level) Type(int) UnknownError(argument %qs to %<-Wnormalized%> not recognized)
EnumName(diagnostic_color_rule) Type(int)
EnumName(diagnostic_path_format) Type(int)
EnumName(diagnostic_prefixing_rule) Type(int)
EnumName(diagnostic_text_art_charset) Type(int)
EnumName(diagnostic_url_rule) Type(int)
EnumName(diagnostics_column_unit) Type(int)
EnumName(diagnostics_escape_format) Type(int)
EnumName(diagnostics_output_format) Type(int)
EnumName(dwarf_gnat_encodings) Type(int)
EnumName(excess_precision) Type(enum excess_precision) UnknownError(unknown excess precision style %qs)
EnumName(extern_stdcpp) Type(int) UnknownError(unknown C++ standard %qs)
EnumName(fp_contract_mode) Type(enum fp_contract_mode) UnknownError(unknown floating point contraction style %qs)
EnumName(fpmath_unit) Type(enum fpmath_unit)Valid arguments to -mfpmath=:
EnumName(frust_compile_until) Type(int) UnknownError(unknown rust compile-until %qs)
EnumName(frust_crate_type) Type(int) UnknownError(unknown crate type: '%qs')
EnumName(frust_edition) Type(int) UnknownError(unknown rust edition %qs)
EnumName(frust_mangling) Type(int) UnknownError(unknown rust mangling option %qs)
EnumName(gfc_convert) Type(enum gfc_convert) UnknownError(Unrecognized option to endianness value: %qs)
EnumName(gfc_fcoarray) Type(enum gfc_fcoarray) UnknownError(Unrecognized option: %qs)
EnumName(gfc_init_local_real) Type(enum gfc_init_local_real) UnknownError(Unrecognized option to floating-point init value: %qs)
EnumName(gfc_inlineable_intrinsics) Type(int) UnknownError(%qs is not an inline-controlable intrinsic)
EnumName(hardcfr_check_noreturn_calls) Type(enum hardcfr_noret) UnknownError(unknown hardcfr noreturn checking level %qs)
EnumName(harden_sls) Type(enum harden_sls)Known choices for mitigation against straight line speculation with -mharden-sls=:
EnumName(ilsop_fn) Type(enum ilsop_fn) UnknownError(unavailable stringop for inlining %qs)
EnumName(indirect_branch) Type(enum indirect_branch)Known indirect branch choices (for use with the -mindirect-branch=/-mfunction-return= options):
EnumName(instrument_return) Type(enum instrument_return)Known choices for return instrumentation with -minstrument-return=:
EnumName(ira_algorithm) Type(enum ira_algorithm) UnknownError(unknown IRA algorithm %qs)
EnumName(ira_region) Type(enum ira_region) UnknownError(unknown IRA region %qs)
EnumName(ivar_visibility) Type(enum ivar_visibility) UnknownError(unrecognized ivar visibility value %qs)
EnumName(ix86_align_data) Type(enum ix86_align_data)Known data alignment choices (for use with the -malign-data= option):
EnumName(ix86_veclibabi) Type(enum ix86_veclibabi)Known vectorization library ABIs (for use with the -mveclibabi= option):
EnumName(lam_type) Type(enum lam_type) UnknownError(unknown lam type %qs)
EnumName(live_patching_level) Type(enum live_patching_level) UnknownError(unknown Live-Patching Level %qs)
EnumName(lto_linker_output) Type(enum lto_linker_output) UnknownError(unknown linker output %qs)
EnumName(lto_partition_model) Type(enum lto_partition_model) UnknownError(unknown LTO partitioning model %qs)
EnumName(offload_abi) Type(enum offload_abi) UnknownError(unknown offload ABI %qs)
EnumName(on_off) Type(int) UnknownError(argument %qs must be either %<on%> or %<off%>)
EnumName(openacc_kernels) Type(enum openacc_kernels)
EnumName(openacc_privatization) Type(enum openacc_privatization)
EnumName(parloops_schedule_type) Type(int)
EnumName(permitted_flt_eval_methods) Type(enum permitted_flt_eval_methods) UnknownError(unknown specification for the set of FLT_EVAL_METHOD values to permit %qs)
EnumName(pmode) Type(enum pmode)Known address mode (for use with the -maddress-mode= option):
EnumName(prefer_vector_width) Type(enum prefer_vector_width)Known preferred register vector length (to use with the -mprefer-vector-width= option):
EnumName(profile_reproducibility) Type(enum profile_reproducibility) UnknownError(unknown profile reproducibility method %qs)
EnumName(profile_update) Type(enum profile_update) UnknownError(unknown profile update method %qs)
EnumName(ranger_debug) Type(enum ranger_debug) UnknownError(unknown ranger debug mode %qs)
EnumName(reorder_blocks_algorithm) Type(enum reorder_blocks_algorithm) UnknownError(unknown basic block reordering algorithm %qs)
EnumName(sanitize_coverage) Type(int)
EnumName(sso_struct) Type(enum scalar_storage_order_kind) UnknownError(unrecognized scalar storage order value %qs)
EnumName(stack_protector_guard) Type(enum stack_protector_guard)Known stack protector guard (for use with the -mstack-protector-guard= option):
EnumName(stack_reuse_level) Type(enum stack_reuse_level) UnknownError(unknown Stack Reuse Level %qs)
EnumName(stdlib_kind) Type(int)
EnumName(stringop_alg) Type(enum stringop_alg)Valid arguments to -mstringop-strategy=:
EnumName(strong_eval_order) Type(int)
EnumName(symbol_visibility) Type(enum symbol_visibility) UnknownError(unrecognized visibility value %qs)
EnumName(target_simd_clone_device) Type(int)
EnumName(threader_debug) Type(enum threader_debug) UnknownError(unknown threader debug mode %qs)
EnumName(tls_dialect) Type(enum tls_dialect)Known TLS dialects (for use with the -mtls-dialect= option):
EnumName(tls_model) Type(enum tls_model) UnknownError(unknown TLS model %qs)
EnumName(trampoline_impl) Type(enum trampoline_impl) UnknownError(unknown trampoline implementation %qs)
EnumName(vect_cost_model) Type(enum vect_cost_model) UnknownError(unknown vectorizer cost model %qs)
EnumName(vtv_priority) Type(enum vtv_priority) UnknownError(unknown vtable verify initialization priority %qs)
EnumName(warn_aligned_new_level) Type(int) UnknownError(argument %qs to %<-Waligned-new%> not recognized)
EnumName(warn_leading_whitespace_kind) Type(int) UnknownError(argument %qs to %<-Wleading-whitespace=%> not recognized)
EnumName(warn_trailing_whitespace_kind) Type(int) UnknownError(argument %qs to %<-Wtrailing-whitespace=%> not recognized)
EnumName(zero_init_padding_bits_kind) Type(enum zero_init_padding_bits_kind) UnknownError(unrecognized zero init padding bits kind %qs)
EnumValueEnum(apx_features) String(all) Value(apx_all) Set(1)
EnumValueEnum(apx_features) String(ccmp) Value(apx_ccmp) Set(7)
EnumValueEnum(apx_features) String(egpr) Value(apx_egpr) Set(2)
EnumValueEnum(apx_features) String(ndd) Value(apx_ndd) Set(4)
EnumValueEnum(apx_features) String(nf) Value(apx_nf) Set(6)
EnumValueEnum(apx_features) String(none) Value(apx_none) Set(1)
EnumValueEnum(apx_features) String(ppx) Value(apx_ppx) Set(5)
EnumValueEnum(apx_features) String(push2pop2) Value(apx_push2pop2) Set(3)
EnumValueEnum(apx_features) String(zu) Value(apx_zu) Set(8)
EnumValueEnum(asm_dialect) String(att) Value(ASM_ATT)
EnumValueEnum(asm_dialect) String(intel) Value(ASM_INTEL)
EnumValueEnum(auto_init_type) String(pattern) Value(AUTO_INIT_PATTERN)
EnumValueEnum(auto_init_type) String(uninitialized) Value(AUTO_INIT_UNINITIALIZED)
EnumValueEnum(auto_init_type) String(zero) Value(AUTO_INIT_ZERO)
EnumValueEnum(bounds_check) String(off) Value(0)
EnumValueEnum(bounds_check) String(on) Value(2)
EnumValueEnum(bounds_check) String(safeonly) Value(1)
EnumValueEnum(calling_abi) String(ms) Value(MS_ABI)
EnumValueEnum(calling_abi) String(sysv) Value(SYSV_ABI)
EnumValueEnum(cf_protection_level) String(branch) Value(CF_BRANCH) Set(2)
EnumValueEnum(cf_protection_level) String(check) Value(CF_CHECK) Set(4)
EnumValueEnum(cf_protection_level) String(full) Value(CF_FULL) Set(1)
EnumValueEnum(cf_protection_level) String(none) Value(CF_NONE) Set(1)
EnumValueEnum(cf_protection_level) String(return) Value(CF_RETURN) Set(3)
EnumValueEnum(check_action) String(context) Value(2)
EnumValueEnum(check_action) String(halt) Value(1)
EnumValueEnum(check_action) String(throw) Value(0)
EnumValueEnum(cmodel) String(32) Value(CM_32)
EnumValueEnum(cmodel) String(kernel) Value(CM_KERNEL)
EnumValueEnum(cmodel) String(large) Value(CM_LARGE)
EnumValueEnum(cmodel) String(medium) Value(CM_MEDIUM)
EnumValueEnum(cmodel) String(small) Value(CM_SMALL)
EnumValueEnum(compressed_debug_sections) String(none) Value(0)
EnumValueEnum(compressed_debug_sections) String(zlib) Value(1)
EnumValueEnum(compressed_debug_sections) String(zlib-gnu) Value(3)
EnumValueEnum(compressed_debug_sections) String(zstd) Value(2)
EnumValueEnum(cpp_bidirectional_level) String(any) Value(bidirectional_any) Set(1)
EnumValueEnum(cpp_bidirectional_level) String(none) Value(bidirectional_none) Set(1)
EnumValueEnum(cpp_bidirectional_level) String(ucn) Value(bidirectional_ucn) Set(2)
EnumValueEnum(cpp_bidirectional_level) String(unpaired) Value(bidirectional_unpaired) Set(1)
EnumValueEnum(cpp_normalize_level) String(id) Value(normalized_identifier_C)
EnumValueEnum(cpp_normalize_level) String(nfc) Value(normalized_C)
EnumValueEnum(cpp_normalize_level) String(nfkc) Value(normalized_KC)
EnumValueEnum(cpp_normalize_level) String(none) Value(normalized_none)
EnumValueEnum(diagnostic_color_rule) String(always) Value(DIAGNOSTICS_COLOR_YES)
EnumValueEnum(diagnostic_color_rule) String(auto) Value(DIAGNOSTICS_COLOR_AUTO)
EnumValueEnum(diagnostic_color_rule) String(never) Value(DIAGNOSTICS_COLOR_NO)
EnumValueEnum(diagnostic_path_format) String(inline-events) Value(DPF_INLINE_EVENTS)
EnumValueEnum(diagnostic_path_format) String(none) Value(DPF_NONE)
EnumValueEnum(diagnostic_path_format) String(separate-events) Value(DPF_SEPARATE_EVENTS)
EnumValueEnum(diagnostic_prefixing_rule) String(every-line) Value(DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE)
EnumValueEnum(diagnostic_prefixing_rule) String(once) Value(DIAGNOSTICS_SHOW_PREFIX_ONCE)
EnumValueEnum(diagnostic_text_art_charset) String(ascii) Value(DIAGNOSTICS_TEXT_ART_CHARSET_ASCII)
EnumValueEnum(diagnostic_text_art_charset) String(emoji) Value(DIAGNOSTICS_TEXT_ART_CHARSET_EMOJI)
EnumValueEnum(diagnostic_text_art_charset) String(none) Value(DIAGNOSTICS_TEXT_ART_CHARSET_NONE)
EnumValueEnum(diagnostic_text_art_charset) String(unicode) Value(DIAGNOSTICS_TEXT_ART_CHARSET_UNICODE)
EnumValueEnum(diagnostic_url_rule) String(always) Value(DIAGNOSTICS_URL_YES)
EnumValueEnum(diagnostic_url_rule) String(auto) Value(DIAGNOSTICS_URL_AUTO)
EnumValueEnum(diagnostic_url_rule) String(never) Value(DIAGNOSTICS_URL_NO)
EnumValueEnum(diagnostics_column_unit) String(byte) Value(DIAGNOSTICS_COLUMN_UNIT_BYTE)
EnumValueEnum(diagnostics_column_unit) String(display) Value(DIAGNOSTICS_COLUMN_UNIT_DISPLAY)
EnumValueEnum(diagnostics_escape_format) String(bytes) Value(DIAGNOSTICS_ESCAPE_FORMAT_BYTES)
EnumValueEnum(diagnostics_escape_format) String(unicode) Value(DIAGNOSTICS_ESCAPE_FORMAT_UNICODE)
EnumValueEnum(diagnostics_output_format) String(json) Value(DIAGNOSTICS_OUTPUT_FORMAT_JSON_STDERR)
EnumValueEnum(diagnostics_output_format) String(json-file) Value(DIAGNOSTICS_OUTPUT_FORMAT_JSON_FILE)
EnumValueEnum(diagnostics_output_format) String(json-stderr) Value(DIAGNOSTICS_OUTPUT_FORMAT_JSON_STDERR)
EnumValueEnum(diagnostics_output_format) String(sarif-file) Value(DIAGNOSTICS_OUTPUT_FORMAT_SARIF_FILE)
EnumValueEnum(diagnostics_output_format) String(sarif-stderr) Value(DIAGNOSTICS_OUTPUT_FORMAT_SARIF_STDERR)
EnumValueEnum(diagnostics_output_format) String(text) Value(DIAGNOSTICS_OUTPUT_FORMAT_TEXT)
EnumValueEnum(dwarf_gnat_encodings) String(all) Value(DWARF_GNAT_ENCODINGS_ALL)
EnumValueEnum(dwarf_gnat_encodings) String(gdb) Value(DWARF_GNAT_ENCODINGS_GDB)
EnumValueEnum(dwarf_gnat_encodings) String(minimal) Value(DWARF_GNAT_ENCODINGS_MINIMAL)
EnumValueEnum(excess_precision) String(16) Value(EXCESS_PRECISION_FLOAT16)
EnumValueEnum(excess_precision) String(fast) Value(EXCESS_PRECISION_FAST)
EnumValueEnum(excess_precision) String(standard) Value(EXCESS_PRECISION_STANDARD)
EnumValueEnum(extern_stdcpp) String(c++03) Value(199711)
EnumValueEnum(extern_stdcpp) String(c++11) Value(201103)
EnumValueEnum(extern_stdcpp) String(c++14) Value(201402)
EnumValueEnum(extern_stdcpp) String(c++17) Value(201703)
EnumValueEnum(extern_stdcpp) String(c++20) Value(202002)
EnumValueEnum(extern_stdcpp) String(c++98) Value(199711)
EnumValueEnum(fp_contract_mode) String(fast) Value(FP_CONTRACT_FAST)
EnumValueEnum(fp_contract_mode) String(off) Value(FP_CONTRACT_OFF)
EnumValueEnum(fp_contract_mode) String(on) Value(FP_CONTRACT_ON)
EnumValueEnum(fpmath_unit) String(387) Value(FPMATH_387)
EnumValueEnum(fpmath_unit) String(387+sse) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})
EnumValueEnum(fpmath_unit) String(387,sse) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})
EnumValueEnum(fpmath_unit) String(both) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})
EnumValueEnum(fpmath_unit) String(sse) Value(FPMATH_SSE)
EnumValueEnum(fpmath_unit) String(sse+387) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})
EnumValueEnum(fpmath_unit) String(sse,387) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_387)})
EnumValueEnum(frust_compile_until) String(ast) Value(0)
EnumValueEnum(frust_compile_until) String(astvalidation) Value(3)
EnumValueEnum(frust_compile_until) String(attributecheck) Value(1)
EnumValueEnum(frust_compile_until) String(borrowcheck) Value(11)
EnumValueEnum(frust_compile_until) String(compilation) Value(12)
EnumValueEnum(frust_compile_until) String(const) Value(10)
EnumValueEnum(frust_compile_until) String(end) Value(13)
EnumValueEnum(frust_compile_until) String(expansion) Value(2)
EnumValueEnum(frust_compile_until) String(featuregating) Value(4)
EnumValueEnum(frust_compile_until) String(lowering) Value(6)
EnumValueEnum(frust_compile_until) String(nameresolution) Value(5)
EnumValueEnum(frust_compile_until) String(privacy) Value(8)
EnumValueEnum(frust_compile_until) String(typecheck) Value(7)
EnumValueEnum(frust_compile_until) String(unsafety) Value(9)
EnumValueEnum(frust_crate_type) String(bin) Value(0)
EnumValueEnum(frust_crate_type) String(cdylib) Value(4)
EnumValueEnum(frust_crate_type) String(dylib) Value(3)
EnumValueEnum(frust_crate_type) String(lib) Value(1)
EnumValueEnum(frust_crate_type) String(proc-macro) Value(6)
EnumValueEnum(frust_crate_type) String(rlib) Value(2)
EnumValueEnum(frust_crate_type) String(staticlib) Value(5)
EnumValueEnum(frust_edition) String(2015) Value(0)
EnumValueEnum(frust_edition) String(2018) Value(1)
EnumValueEnum(frust_edition) String(2021) Value(2)
EnumValueEnum(frust_mangling) String(legacy) Value(0)
EnumValueEnum(frust_mangling) String(v0) Value(1)
EnumValueEnum(gfc_convert) String(big-endian) Value(GFC_FLAG_CONVERT_BIG) Set(1)
EnumValueEnum(gfc_convert) String(little-endian) Value(GFC_FLAG_CONVERT_LITTLE) Set(1)
EnumValueEnum(gfc_convert) String(native) Value(GFC_FLAG_CONVERT_NATIVE) Set(1)
EnumValueEnum(gfc_convert) String(r16_ibm) Value(GFC_FLAG_CONVERT_R16_IBM) Set(2)
EnumValueEnum(gfc_convert) String(r16_ieee) Value(GFC_FLAG_CONVERT_R16_IEEE) Set(2)
EnumValueEnum(gfc_convert) String(swap) Value(GFC_FLAG_CONVERT_SWAP) Set(1)
EnumValueEnum(gfc_fcoarray) String(lib) Value(GFC_FCOARRAY_LIB)
EnumValueEnum(gfc_fcoarray) String(none) Value(GFC_FCOARRAY_NONE)
EnumValueEnum(gfc_fcoarray) String(single) Value(GFC_FCOARRAY_SINGLE)
EnumValueEnum(gfc_init_local_real) String(-inf) Value(GFC_INIT_REAL_NEG_INF)
EnumValueEnum(gfc_init_local_real) String(inf) Value(GFC_INIT_REAL_INF)
EnumValueEnum(gfc_init_local_real) String(nan) Value(GFC_INIT_REAL_NAN)
EnumValueEnum(gfc_init_local_real) String(snan) Value(GFC_INIT_REAL_SNAN)
EnumValueEnum(gfc_init_local_real) String(zero) Value(GFC_INIT_REAL_ZERO)
EnumValueEnum(gfc_inlineable_intrinsics) String(maxloc) Value(GFC_FLAG_INLINE_INTRINSIC_MAXLOC) Set(1)
EnumValueEnum(gfc_inlineable_intrinsics) String(minloc) Value(GFC_FLAG_INLINE_INTRINSIC_MINLOC) Set(2)
EnumValueEnum(hardcfr_check_noreturn_calls) String(always) Value(HCFRNR_ALWAYS)
EnumValueEnum(hardcfr_check_noreturn_calls) String(never) Value(HCFRNR_NEVER)
EnumValueEnum(hardcfr_check_noreturn_calls) String(no-xthrow) Value(HCFRNR_NO_XTHROW)
EnumValueEnum(hardcfr_check_noreturn_calls) String(nothrow) Value(HCFRNR_NOTHROW)
EnumValueEnum(harden_sls) String(all) Value(harden_sls_all)
EnumValueEnum(harden_sls) String(indirect-jmp) Value(harden_sls_indirect_jmp)
EnumValueEnum(harden_sls) String(none) Value(harden_sls_none)
EnumValueEnum(harden_sls) String(return) Value(harden_sls_return)
EnumValueEnum(ilsop_fn) String(memcmp) Value(ILSOP_MEMCMP) Set(1)
EnumValueEnum(ilsop_fn) String(memcpy) Value(ILSOP_MEMCPY) Set(2)
EnumValueEnum(ilsop_fn) String(memmove) Value(ILSOP_MEMMOVE) Set(3)
EnumValueEnum(ilsop_fn) String(memset) Value(ILSOP_MEMSET) Set(4)
EnumValueEnum(indirect_branch) String(keep) Value(indirect_branch_keep)
EnumValueEnum(indirect_branch) String(thunk) Value(indirect_branch_thunk)
EnumValueEnum(indirect_branch) String(thunk-extern) Value(indirect_branch_thunk_extern)
EnumValueEnum(indirect_branch) String(thunk-inline) Value(indirect_branch_thunk_inline)
EnumValueEnum(instrument_return) String(call) Value(instrument_return_call)
EnumValueEnum(instrument_return) String(none) Value(instrument_return_none)
EnumValueEnum(instrument_return) String(nop5) Value(instrument_return_nop5)
EnumValueEnum(ira_algorithm) String(CB) Value(IRA_ALGORITHM_CB)
EnumValueEnum(ira_algorithm) String(priority) Value(IRA_ALGORITHM_PRIORITY)
EnumValueEnum(ira_region) String(all) Value(IRA_REGION_ALL)
EnumValueEnum(ira_region) String(mixed) Value(IRA_REGION_MIXED)
EnumValueEnum(ira_region) String(one) Value(IRA_REGION_ONE)
EnumValueEnum(ivar_visibility) String(package) Value(IVAR_VISIBILITY_PACKAGE)
EnumValueEnum(ivar_visibility) String(private) Value(IVAR_VISIBILITY_PRIVATE)
EnumValueEnum(ivar_visibility) String(protected) Value(IVAR_VISIBILITY_PROTECTED)
EnumValueEnum(ivar_visibility) String(public) Value(IVAR_VISIBILITY_PUBLIC)
EnumValueEnum(ix86_align_data) String(abi) Value(ix86_align_data_type_abi)
EnumValueEnum(ix86_align_data) String(cacheline) Value(ix86_align_data_type_cacheline)
EnumValueEnum(ix86_align_data) String(compat) Value(ix86_align_data_type_compat)
EnumValueEnum(ix86_veclibabi) String(acml) Value(ix86_veclibabi_type_acml)
EnumValueEnum(ix86_veclibabi) String(aocl) Value(ix86_veclibabi_type_aocl)
EnumValueEnum(ix86_veclibabi) String(svml) Value(ix86_veclibabi_type_svml)
EnumValueEnum(lam_type) String(none) Value(lam_none)
EnumValueEnum(lam_type) String(u48) Value(lam_u48)
EnumValueEnum(lam_type) String(u57) Value(lam_u57)
EnumValueEnum(live_patching_level) String(inline-clone) Value(LIVE_PATCHING_INLINE_CLONE)
EnumValueEnum(live_patching_level) String(inline-only-static) Value(LIVE_PATCHING_INLINE_ONLY_STATIC)
EnumValueEnum(lto_linker_output) String(dyn) Value(LTO_LINKER_OUTPUT_DYN)
EnumValueEnum(lto_linker_output) String(exec) Value(LTO_LINKER_OUTPUT_EXEC)
EnumValueEnum(lto_linker_output) String(nolto-rel) Value(LTO_LINKER_OUTPUT_NOLTOREL)
EnumValueEnum(lto_linker_output) String(pie) Value(LTO_LINKER_OUTPUT_PIE)
EnumValueEnum(lto_linker_output) String(rel) Value(LTO_LINKER_OUTPUT_REL)
EnumValueEnum(lto_linker_output) String(unknown) Value(LTO_LINKER_OUTPUT_UNKNOWN)
EnumValueEnum(lto_partition_model) String(1to1) Value(LTO_PARTITION_1TO1)
EnumValueEnum(lto_partition_model) String(balanced) Value(LTO_PARTITION_BALANCED)
EnumValueEnum(lto_partition_model) String(cache) Value(LTO_PARTITION_CACHE)
EnumValueEnum(lto_partition_model) String(max) Value(LTO_PARTITION_MAX)
EnumValueEnum(lto_partition_model) String(none) Value(LTO_PARTITION_NONE)
EnumValueEnum(lto_partition_model) String(one) Value(LTO_PARTITION_ONE)
EnumValueEnum(offload_abi) String(ilp32) Value(OFFLOAD_ABI_ILP32)
EnumValueEnum(offload_abi) String(lp64) Value(OFFLOAD_ABI_LP64)
EnumValueEnum(on_off) String(off) Value(0)
EnumValueEnum(on_off) String(on) Value(1)
EnumValueEnum(openacc_kernels) String(decompose) Value(OPENACC_KERNELS_DECOMPOSE)
EnumValueEnum(openacc_kernels) String(parloops) Value(OPENACC_KERNELS_PARLOOPS)
EnumValueEnum(openacc_privatization) String(noisy) Value(OPENACC_PRIVATIZATION_NOISY)
EnumValueEnum(openacc_privatization) String(quiet) Value(OPENACC_PRIVATIZATION_QUIET)
EnumValueEnum(parloops_schedule_type) String(auto) Value(PARLOOPS_SCHEDULE_AUTO)
EnumValueEnum(parloops_schedule_type) String(dynamic) Value(PARLOOPS_SCHEDULE_DYNAMIC)
EnumValueEnum(parloops_schedule_type) String(guided) Value(PARLOOPS_SCHEDULE_GUIDED)
EnumValueEnum(parloops_schedule_type) String(runtime) Value(PARLOOPS_SCHEDULE_RUNTIME)
EnumValueEnum(parloops_schedule_type) String(static) Value(PARLOOPS_SCHEDULE_STATIC)
EnumValueEnum(permitted_flt_eval_methods) String(c11) Value(PERMITTED_FLT_EVAL_METHODS_C11)
EnumValueEnum(permitted_flt_eval_methods) String(ts-18661-3) Value(PERMITTED_FLT_EVAL_METHODS_TS_18661)
EnumValueEnum(pmode) String(long) Value(PMODE_DI)
EnumValueEnum(pmode) String(short) Value(PMODE_SI)
EnumValueEnum(prefer_vector_width) String(128) Value(PVW_AVX128)
EnumValueEnum(prefer_vector_width) String(256) Value(PVW_AVX256)
EnumValueEnum(prefer_vector_width) String(512) Value(PVW_AVX512)
EnumValueEnum(prefer_vector_width) String(none) Value(PVW_NONE)
EnumValueEnum(profile_reproducibility) String(multithreaded) Value(PROFILE_REPRODUCIBILITY_MULTITHREADED)
EnumValueEnum(profile_reproducibility) String(parallel-runs) Value(PROFILE_REPRODUCIBILITY_PARALLEL_RUNS)
EnumValueEnum(profile_reproducibility) String(serial) Value(PROFILE_REPRODUCIBILITY_SERIAL)
EnumValueEnum(profile_update) String(atomic) Value(PROFILE_UPDATE_ATOMIC)
EnumValueEnum(profile_update) String(prefer-atomic) Value(PROFILE_UPDATE_PREFER_ATOMIC)
EnumValueEnum(profile_update) String(single) Value(PROFILE_UPDATE_SINGLE)
EnumValueEnum(ranger_debug) String(all) Value(RANGER_DEBUG_ALL)
EnumValueEnum(ranger_debug) String(cache) Value(RANGER_DEBUG_TRACE_CACHE)
EnumValueEnum(ranger_debug) String(gori) Value(RANGER_DEBUG_GORI)
EnumValueEnum(ranger_debug) String(none) Value(RANGER_DEBUG_NONE)
EnumValueEnum(ranger_debug) String(trace) Value(RANGER_DEBUG_TRACE)
EnumValueEnum(ranger_debug) String(tracegori) Value(RANGER_DEBUG_TRACE_GORI)
EnumValueEnum(reorder_blocks_algorithm) String(simple) Value(REORDER_BLOCKS_ALGORITHM_SIMPLE)
EnumValueEnum(reorder_blocks_algorithm) String(stc) Value(REORDER_BLOCKS_ALGORITHM_STC)
EnumValueEnum(sanitize_coverage) String(trace-cmp) Value(SANITIZE_COV_TRACE_CMP)
EnumValueEnum(sanitize_coverage) String(trace-pc) Value(SANITIZE_COV_TRACE_PC)
EnumValueEnum(sso_struct) String(big-endian) Value(SSO_BIG_ENDIAN)
EnumValueEnum(sso_struct) String(little-endian) Value(SSO_LITTLE_ENDIAN)
EnumValueEnum(sso_struct) String(native) Value(SSO_NATIVE)
EnumValueEnum(stack_protector_guard) String(global) Value(SSP_GLOBAL)
EnumValueEnum(stack_protector_guard) String(tls) Value(SSP_TLS)
EnumValueEnum(stack_reuse_level) String(all) Value(SR_ALL)
EnumValueEnum(stack_reuse_level) String(named_vars) Value(SR_NAMED_VARS)
EnumValueEnum(stack_reuse_level) String(none) Value(SR_NONE)
EnumValueEnum(stdlib_kind) String(libc++) Value(2)
EnumValueEnum(stdlib_kind) String(libstdc++) Value(1)
EnumValueEnum(stringop_alg) String(byte_loop) Value(loop_1_byte)
EnumValueEnum(stringop_alg) String(libcall) Value(libcall)
EnumValueEnum(stringop_alg) String(loop) Value(loop)
EnumValueEnum(stringop_alg) String(rep_4byte) Value(rep_prefix_4_byte)
EnumValueEnum(stringop_alg) String(rep_8byte) Value(rep_prefix_8_byte)
EnumValueEnum(stringop_alg) String(rep_byte) Value(rep_prefix_1_byte)
EnumValueEnum(stringop_alg) String(unrolled_loop) Value(unrolled_loop)
EnumValueEnum(stringop_alg) String(vector_loop) Value(vector_loop)
EnumValueEnum(strong_eval_order) String(all) Value(2)
EnumValueEnum(strong_eval_order) String(none) Value(0)
EnumValueEnum(strong_eval_order) String(some) Value(1)
EnumValueEnum(symbol_visibility) String(default) Value(VISIBILITY_DEFAULT)
EnumValueEnum(symbol_visibility) String(hidden) Value(VISIBILITY_HIDDEN)
EnumValueEnum(symbol_visibility) String(internal) Value(VISIBILITY_INTERNAL)
EnumValueEnum(symbol_visibility) String(protected) Value(VISIBILITY_PROTECTED)
EnumValueEnum(target_simd_clone_device) String(any) Value(OMP_TARGET_SIMD_CLONE_ANY)
EnumValueEnum(target_simd_clone_device) String(host) Value(OMP_TARGET_SIMD_CLONE_HOST)
EnumValueEnum(target_simd_clone_device) String(nohost) Value(OMP_TARGET_SIMD_CLONE_NOHOST)
EnumValueEnum(target_simd_clone_device) String(none) Value(OMP_TARGET_SIMD_CLONE_NONE)
EnumValueEnum(threader_debug) String(all) Value(THREADER_DEBUG_ALL)
EnumValueEnum(threader_debug) String(none) Value(THREADER_DEBUG_NONE)
EnumValueEnum(tls_dialect) String(gnu) Value(TLS_DIALECT_GNU)
EnumValueEnum(tls_dialect) String(gnu2) Value(TLS_DIALECT_GNU2)
EnumValueEnum(tls_model) String(global-dynamic) Value(TLS_MODEL_GLOBAL_DYNAMIC)
EnumValueEnum(tls_model) String(initial-exec) Value(TLS_MODEL_INITIAL_EXEC)
EnumValueEnum(tls_model) String(local-dynamic) Value(TLS_MODEL_LOCAL_DYNAMIC)
EnumValueEnum(tls_model) String(local-exec) Value(TLS_MODEL_LOCAL_EXEC)
EnumValueEnum(trampoline_impl) String(heap) Value(TRAMPOLINE_IMPL_HEAP)
EnumValueEnum(trampoline_impl) String(stack) Value(TRAMPOLINE_IMPL_STACK)
EnumValueEnum(vect_cost_model) String(cheap) Value(VECT_COST_MODEL_CHEAP)
EnumValueEnum(vect_cost_model) String(dynamic) Value(VECT_COST_MODEL_DYNAMIC)
EnumValueEnum(vect_cost_model) String(unlimited) Value(VECT_COST_MODEL_UNLIMITED)
EnumValueEnum(vect_cost_model) String(very-cheap) Value(VECT_COST_MODEL_VERY_CHEAP)
EnumValueEnum(vtv_priority) String(none) Value(VTV_NO_PRIORITY)
EnumValueEnum(vtv_priority) String(preinit) Value(VTV_PREINIT_PRIORITY)
EnumValueEnum(vtv_priority) String(std) Value(VTV_STANDARD_PRIORITY)
EnumValueEnum(warn_aligned_new_level) String(all) Value(2)
EnumValueEnum(warn_aligned_new_level) String(global) Value(1)
EnumValueEnum(warn_aligned_new_level) String(none) Value(0)
EnumValueEnum(warn_leading_whitespace_kind) String(blanks) Value(3)
EnumValueEnum(warn_leading_whitespace_kind) String(none) Value(0)
EnumValueEnum(warn_leading_whitespace_kind) String(spaces) Value(1)
EnumValueEnum(warn_leading_whitespace_kind) String(tabs) Value(2)
EnumValueEnum(warn_trailing_whitespace_kind) String(any) Value(2)
EnumValueEnum(warn_trailing_whitespace_kind) String(blanks) Value(1)
EnumValueEnum(warn_trailing_whitespace_kind) String(none) Value(0)
EnumValueEnum(zero_init_padding_bits_kind) String(all) Value(ZERO_INIT_PADDING_BITS_ALL)
EnumValueEnum(zero_init_padding_bits_kind) String(standard) Value(ZERO_INIT_PADDING_BITS_STANDARD)
EnumValueEnum(zero_init_padding_bits_kind) String(unions) Value(ZERO_INIT_PADDING_BITS_UNIONS)
FDriver C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-F <dir>	Add <dir> to the end of the main framework include path.
FUrlSuffix(gcc/Darwin-Options.html#index-F)
HC ObjC C++ ObjC++Print the name of header files as they are used.
HD
HFortran
HUrlSuffix(gcc/Preprocessor-Options.html#index-H) LangUrlSuffix_D(gdc/Code-Generation.html#index-H) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-H)
HUrlSuffix(gcc/Preprocessor-Options.html#index-H) LangUrlSuffix_D(gdc/Code-Generation.html#index-H) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-H)
HUrlSuffix(gcc/Preprocessor-Options.html#index-H) LangUrlSuffix_D(gdc/Code-Generation.html#index-H) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-H)
HdD Joined Separate-Hd <dir>	Write D interface files to directory <dir>.
HdLangUrlSuffix_D(gdc/Code-Generation.html#index-Hd)
HeaderIncludeconfig/i386/i386-opts.h
HfD Joined Separate-Hf <file>	Write D interface to <file>.
HfLangUrlSuffix_D(gdc/Code-Generation.html#index-Hf)
IAda AdaWhy AdaSCIL Joined Separate
IC ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-I <dir>	Add <dir> to the end of the main include path.
ID Joined Separate
IFortran Joined Separate
IGo Joined Separate
IModula-2 Joined Separate
IRust Joined Separate
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
IUrlSuffix(gcc/Directory-Options.html#index-I) LangUrlSuffix_D(gdc/Directory-Options.html#index-I)
JD Joined Separate
JFortran Joined Separate-J<directory>	Put MODULE files in 'directory'.
JLangUrlSuffix_D(gdc/Directory-Options.html#index-J)
JLangUrlSuffix_D(gdc/Directory-Options.html#index-J)
LDriver Joined Separate
LGo Joined Separate
LModula-2 Joined Separate
LRust Joined Separate
LUrlSuffix(gcc/Directory-Options.html#index-L) LangUrlSuffix_D(gdc/Directory-Options.html#index-L)
LUrlSuffix(gcc/Directory-Options.html#index-L) LangUrlSuffix_D(gdc/Directory-Options.html#index-L)
LUrlSuffix(gcc/Directory-Options.html#index-L) LangUrlSuffix_D(gdc/Directory-Options.html#index-L)
LUrlSuffix(gcc/Directory-Options.html#index-L) LangUrlSuffix_D(gdc/Directory-Options.html#index-L)
LanguageAda
LanguageAdaSCIL
LanguageAdaWhy
LanguageC
LanguageC++
LanguageD
LanguageFortran
LanguageGo
LanguageLTO
LanguageLTODump
LanguageModula-2
LanguageObjC
LanguageObjC++
LanguageRust
MC ObjC C++ ObjC++Generate make dependencies.
MD
MFortran
MModula-2
MUrlSuffix(gcc/Preprocessor-Options.html#index-M) LangUrlSuffix_D(gdc/Code-Generation.html#index-M)
MUrlSuffix(gcc/Preprocessor-Options.html#index-M) LangUrlSuffix_D(gdc/Code-Generation.html#index-M)
MUrlSuffix(gcc/Preprocessor-Options.html#index-M) LangUrlSuffix_D(gdc/Code-Generation.html#index-M)
MUrlSuffix(gcc/Preprocessor-Options.html#index-M) LangUrlSuffix_D(gdc/Code-Generation.html#index-M)
MDC ObjC C++ ObjC++ NoDriverArg Separate MissingArgError(missing filename after %qs)Generate make dependencies and compile.
MDD Separate NoDriverArg
MDFortran Separate NoDriverArg
MDModula-2
MDUrlSuffix(gcc/Preprocessor-Options.html#index-MD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MD)
MDUrlSuffix(gcc/Preprocessor-Options.html#index-MD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MD)
MDUrlSuffix(gcc/Preprocessor-Options.html#index-MD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MD)
MDUrlSuffix(gcc/Preprocessor-Options.html#index-MD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MD)
MFC ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)-MF <file>	Write dependency output to the given file.
MFD Joined Separate
MFFortran Joined Separate
MFModula-2
MFUrlSuffix(gcc/Preprocessor-Options.html#index-MF) LangUrlSuffix_D(gdc/Code-Generation.html#index-MF)
MFUrlSuffix(gcc/Preprocessor-Options.html#index-MF) LangUrlSuffix_D(gdc/Code-Generation.html#index-MF)
MFUrlSuffix(gcc/Preprocessor-Options.html#index-MF) LangUrlSuffix_D(gdc/Code-Generation.html#index-MF)
MFUrlSuffix(gcc/Preprocessor-Options.html#index-MF) LangUrlSuffix_D(gdc/Code-Generation.html#index-MF)
MGC ObjC C++ ObjC++Treat missing header files as generated files.
MGD
MGFortran
MGModula-2
MGUrlSuffix(gcc/Preprocessor-Options.html#index-MG) LangUrlSuffix_D(gdc/Code-Generation.html#index-MG)
MGUrlSuffix(gcc/Preprocessor-Options.html#index-MG) LangUrlSuffix_D(gdc/Code-Generation.html#index-MG)
MGUrlSuffix(gcc/Preprocessor-Options.html#index-MG) LangUrlSuffix_D(gdc/Code-Generation.html#index-MG)
MGUrlSuffix(gcc/Preprocessor-Options.html#index-MG) LangUrlSuffix_D(gdc/Code-Generation.html#index-MG)
MMC ObjC C++ ObjC++Like -M but ignore system header files.
MMD
MMFortran
MMModula-2
MMUrlSuffix(gcc/Preprocessor-Options.html#index-MM) LangUrlSuffix_D(gdc/Code-Generation.html#index-MM)
MMUrlSuffix(gcc/Preprocessor-Options.html#index-MM) LangUrlSuffix_D(gdc/Code-Generation.html#index-MM)
MMUrlSuffix(gcc/Preprocessor-Options.html#index-MM) LangUrlSuffix_D(gdc/Code-Generation.html#index-MM)
MMUrlSuffix(gcc/Preprocessor-Options.html#index-MM) LangUrlSuffix_D(gdc/Code-Generation.html#index-MM)
MMDC ObjC C++ ObjC++ NoDriverArg Separate MissingArgError(missing filename after %qs)Like -MD but ignore system header files.
MMDD Separate NoDriverArg
MMDFortran Separate NoDriverArg
MMDModula-2
MMDUrlSuffix(gcc/Preprocessor-Options.html#index-MMD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MMD)
MMDUrlSuffix(gcc/Preprocessor-Options.html#index-MMD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MMD)
MMDUrlSuffix(gcc/Preprocessor-Options.html#index-MMD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MMD)
MMDUrlSuffix(gcc/Preprocessor-Options.html#index-MMD) LangUrlSuffix_D(gdc/Code-Generation.html#index-MMD)
MPC ObjC C++ ObjC++Generate phony targets for all headers.
MPD
MPFortran
MPModula-2
MPUrlSuffix(gcc/Preprocessor-Options.html#index-MP) LangUrlSuffix_D(gdc/Code-Generation.html#index-MP)
MPUrlSuffix(gcc/Preprocessor-Options.html#index-MP) LangUrlSuffix_D(gdc/Code-Generation.html#index-MP)
MPUrlSuffix(gcc/Preprocessor-Options.html#index-MP) LangUrlSuffix_D(gdc/Code-Generation.html#index-MP)
MPUrlSuffix(gcc/Preprocessor-Options.html#index-MP) LangUrlSuffix_D(gdc/Code-Generation.html#index-MP)
MQC ObjC C++ ObjC++ Joined Separate MissingArgError(missing makefile target after %qs)-MQ <target>	Add a target that may require quoting.
MQD Joined Separate
MQFortran Joined Separate
MQModula-2
MQUrlSuffix(gcc/Preprocessor-Options.html#index-MQ) LangUrlSuffix_D(gdc/Code-Generation.html#index-MQ)
MQUrlSuffix(gcc/Preprocessor-Options.html#index-MQ) LangUrlSuffix_D(gdc/Code-Generation.html#index-MQ)
MQUrlSuffix(gcc/Preprocessor-Options.html#index-MQ) LangUrlSuffix_D(gdc/Code-Generation.html#index-MQ)
MQUrlSuffix(gcc/Preprocessor-Options.html#index-MQ) LangUrlSuffix_D(gdc/Code-Generation.html#index-MQ)
MTC ObjC C++ ObjC++ Joined Separate MissingArgError(missing makefile target after %qs)-MT <target>	Add a target that does not require quoting.
MTD Joined Separate
MTFortran Joined Separate
MTModula-2
MTUrlSuffix(gcc/Preprocessor-Options.html#index-MT) LangUrlSuffix_D(gdc/Code-Generation.html#index-MT)
MTUrlSuffix(gcc/Preprocessor-Options.html#index-MT) LangUrlSuffix_D(gdc/Code-Generation.html#index-MT)
MTUrlSuffix(gcc/Preprocessor-Options.html#index-MT) LangUrlSuffix_D(gdc/Code-Generation.html#index-MT)
MTUrlSuffix(gcc/Preprocessor-Options.html#index-MT) LangUrlSuffix_D(gdc/Code-Generation.html#index-MT)
MmodulesC++Generate C++ Module dependency information.
MmodulesModula-2
Mno-modulesC++
Mno-modulesModula-2
Mno-modulesUrlSuffix(gcc/Preprocessor-Options.html#index-Mno-modules)
Mno-modulesUrlSuffix(gcc/Preprocessor-Options.html#index-Mno-modules)
NDriver
OCommon JoinedOrMissing Optimization-O<number>	Set optimization level to <number>.
OUrlSuffix(gcc/Optimize-Options.html#index-O)
OfastCommon OptimizationOptimize for speed disregarding exact standards compliance.
OfastUrlSuffix(gcc/Optimize-Options.html#index-Ofast)
OgCommon OptimizationOptimize for debugging experience rather than speed or size.
OgUrlSuffix(gcc/Optimize-Options.html#index-Og)
OsCommon OptimizationOptimize for space rather than speed.
OsUrlSuffix(gcc/Optimize-Options.html#index-Os)
OzCommon OptimizationOptimize for space aggressively rather than speed.
OzUrlSuffix(gcc/Optimize-Options.html#index-Oz)
PC ObjC C++ ObjC++Do not generate #line directives.
PFortran
PModula-2
PUrlSuffix(gcc/Preprocessor-Options.html#index-P) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-P)
PUrlSuffix(gcc/Preprocessor-Options.html#index-P) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-P)
PUrlSuffix(gcc/Preprocessor-Options.html#index-P) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-P)
QDriver
QUrlSuffix(gcc/Developer-Options.html#index-Q)
QnDriver Negative(Qy)
QnUrlSuffix(gcc/System-V-Options.html#index-Qn)
QyDriver Negative(Qn)
QyUrlSuffix(gcc/System-V-Options.html#index-Qy)
RDriver Joined Separate
SDriver
SourceIncludecpplib.h
SourceIncludecpplib.h
SourceIncludediagnostic-color.h
SourceIncludediagnostic-url.h
SourceIncludediagnostic.h
SourceIncludepretty-print.h
TDriver Joined Separate
TUrlSuffix(gcc/Link-Options.html#index-T)
TargetSaveHOST_WIDE_INT x_ix86_isa_flags2_explicit
TargetSaveHOST_WIDE_INT x_ix86_isa_flags_explicit
TargetSaveHOST_WIDE_INT x_ix86_no_avx10_1_explicit
TargetSaveHOST_WIDE_INT x_ix86_no_avx512_explicit
TargetSaveconst char *x_ix86_arch_string
TargetSaveconst char *x_ix86_recip_name
TargetSaveconst char *x_ix86_tune_ctrl_string
TargetSaveconst char *x_ix86_tune_memcpy_strategy
TargetSaveconst char *x_ix86_tune_memset_strategy
TargetSaveconst char *x_ix86_tune_string
TargetSaveenum asm_dialect x_ix86_asm_dialect
TargetSaveenum stack_protector_guard x_ix86_stack_protector_guard
TargetSaveenum stringop_alg x_ix86_stringop_alg
TargetSaveenum tls_dialect x_ix86_tls_dialect
TargetSaveint x_ix86_branch_cost
TargetSaveint x_ix86_dump_tunes
TargetSaveint x_ix86_force_align_arg_pointer
TargetSaveint x_ix86_force_drap
TargetSaveint x_ix86_section_threshold
TargetSaveint x_ix86_sse2avx
TargetSaveint x_ix86_tune_no_default
TargetSaveint x_recip_mask_explicit
TargetSaveunsigned char arch
TargetSaveunsigned char arch_specified
TargetSaveunsigned char branch_cost
TargetSaveunsigned char prefetch_sse
TargetSaveunsigned char schedule
TargetSaveunsigned char tune
TargetSaveunsigned char tune_defaulted
TargetVariableHOST_WIDE_INT ix86_stack_protector_guard_offset = 0
TargetVariableaddr_space_t ix86_stack_protector_guard_reg = ADDR_SPACE_GENERIC
TargetVariablebool ix86_unsafe_math_optimizations = false
TargetVariableenum calling_abi ix86_abi = SYSV_ABI
TargetVariableenum cmodel ix86_cmodel = CM_32
TargetVariableenum excess_precision ix86_excess_precision = EXCESS_PRECISION_DEFAULT
TargetVariableenum ix86_veclibabi ix86_veclibabi_type = ix86_veclibabi_type_none
TargetVariableenum pmode ix86_pmode = PMODE_SI
TargetVariableint ix86_incoming_stack_boundary_arg
TargetVariableint ix86_preferred_stack_boundary_arg
TargetVariableint ix86_regparm
TargetVariableint recip_mask = RECIP_MASK_DEFAULT
TbssDriver Separate
Tbss=Driver Joined
TdataDriver Separate
Tdata=Driver Joined
TtextDriver Separate
Ttext=Driver Joined
UC ObjC C++ ObjC++ Joined Separate MissingArgError(macro name missing after %qs)-U<macro>	Undefine <macro>.
UFortran Joined Separate
UUrlSuffix(gcc/Preprocessor-Options.html#index-U)
UUrlSuffix(gcc/Preprocessor-Options.html#index-U)
VariableHOST_WIDE_INT ix86_isa_flags = TARGET_64BIT_DEFAULT | TARGET_SUBTARGET_ISA_DEFAULT
VariableHOST_WIDE_INT ix86_isa_flags2 = 0
VariableHOST_WIDE_INT ix86_isa_flags2_explicit
VariableHOST_WIDE_INT ix86_isa_flags_explicit
Variablebool dump_base_name_prefixed = false
Variablebool exit_after_options
Variablebool flag_dump_all_passed
Variablebool flag_opts_finished
Variablebool flag_stack_usage_info = false
Variablebool flag_warn_unused_result = false
Variablebool in_lto_p = false
Variablechar *help_enum_printed
Variablechar *help_printed
Variableconst char *aux_base_name
Variableconst char *main_input_basename
Variableconst char *main_input_filename
Variableenum ctf_debug_info_levels ctf_debug_info_level = CTFINFO_LEVEL_NONE
Variableenum debug_info_levels debug_info_level = DINFO_LEVEL_NONE
Variableenum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS] = { DINFO_STRUCT_FILE_ANY, DINFO_STRUCT_FILE_ANY, DINFO_STRUCT_FILE_ANY }
Variableenum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS] = { DINFO_STRUCT_FILE_ANY, DINFO_STRUCT_FILE_ANY, DINFO_STRUCT_FILE_ANY }
Variableenum dwarf_gnat_encodings gnat_encodings = DWARF_GNAT_ENCODINGS_DEFAULT
Variableenum incremental_link flag_incremental_link = INCREMENTAL_LINK_NONE
Variableenum stack_check_type flag_stack_check = NO_STACK_CHECK
Variableint flag_complex_method = 1
Variableint flag_debug_asm
Variableint flag_default_complex_method = 1
Variableint flag_dump_rtl_in_asm
Variableint flag_gen_aux_info = 0
Variableint flag_generate_lto
Variableint flag_generate_offload = 0
Variableint flag_print_asm_name
Variableint flag_shlib
Variableint ix86_no_avx10_1_explicit = 0
Variableint ix86_no_avx512_explicit = 0
Variableint ix86_target_flags
Variableint main_input_baselength
Variableint optimize
Variableint optimize_debug
Variableint optimize_fast
Variableint optimize_size
Variableint recip_mask_explicit
Variableint rtl_dump_and_exit
Variableint target_flags
Variableuint32_t write_symbols = NO_DEBUG
Variableunsigned int flag_sanitize
Variableunsigned int flag_sanitize_recover = (SANITIZE_UNDEFINED | SANITIZE_UNDEFINED_NONDEFAULT | SANITIZE_KERNEL_ADDRESS | SANITIZE_KERNEL_HWADDRESS) & ~(SANITIZE_UNREACHABLE | SANITIZE_RETURN)
Variableunsigned int flag_sanitize_trap
Variableunsigned int flag_zero_call_used_regs
Variableunsigned int help_columns
Variableunsigned int initial_max_fld_align = TARGET_DEFAULT_PACK_STRUCT
Variablevoid *flag_ignored_attributes
Variablevoid *flag_instrument_functions_exclude_files
Variablevoid *flag_instrument_functions_exclude_functions
WCommon RejectNegative Warning Alias(Wextra)This switch is deprecated; use -Wextra instead.
WNSObject-attributeC ObjC C++ ObjC++ LTO Var(warn_nsobject_attribute) Warning Init(1)Warn if the NSObject attribute is applied to a non-typedef.
Wa,Driver JoinedOrMissing RejectNegative
WabiC ObjC C++ ObjC++ LTO Var(warn_abi) WarningWarn about things that will change when compiling with an ABI-compliant compiler.
WabiUrlSuffix(gcc/Warning-Options.html#index-Wabi)
Wabi-tagC++ ObjC++ Var(warn_abi_tag) WarningWarn if a subobject has an abi_tag attribute that the complete object type does not have.
Wabi-tagUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wabi-tag)
Wabi=C ObjC C++ ObjC++ LTO Joined RejectNegative UInteger WarningWarn about things that change between the current -fabi-version and the specified version.
Wabi=UrlSuffix(gcc/Warning-Options.html#index-Wabi)
Wabsolute-valueC ObjC Var(warn_absolute_value) Warning EnabledBy(Wextra)Warn on suspicious calls of standard functions computing absolute values.
Wabsolute-valueUrlSuffix(gcc/Warning-Options.html#index-Wabsolute-value)
WaddressC ObjC C++ ObjC++ Var(warn_address) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about suspicious uses of memory addresses.
WaddressD Warning Var(warn_address) LangEnabledBy(D, Wextra)
WaddressUrlSuffix(gcc/Warning-Options.html#index-Waddress)
WaddressUrlSuffix(gcc/Warning-Options.html#index-Waddress)
Waddress-of-packed-memberC ObjC C++ ObjC++ Var(warn_address_of_packed_member) Init(1) WarningWarn when the address of packed member of struct or union is taken.
Waddress-of-packed-memberUrlSuffix(gcc/Warning-Options.html#index-Waddress-of-packed-member)
Waggregate-returnCommon Var(warn_aggregate_return) WarningWarn about returning structures, unions or arrays.
Waggregate-returnUrlSuffix(gcc/Warning-Options.html#index-Waggregate-return)
Waggressive-loop-optimizationsCommon Var(warn_aggressive_loop_optimizations) Init(1) WarningWarn if a loop with constant number of iterations triggers undefined behavior.
Waggressive-loop-optimizationsUrlSuffix(gcc/Warning-Options.html#index-Waggressive-loop-optimizations)
WaliasingFortran Warning Var(warn_aliasing) LangEnabledBy(Fortran,Wall)Warn about possible aliasing of dummy arguments.
WaliasingLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Waliasing)
Walign-commonsFortran Warning Var(warn_align_commons) Init(1)Warn about alignment of COMMON blocks.
Walign-commonsLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Walign-commons)
Waligned-newC++ ObjC++ Alias(Waligned-new=,global,none)Warn about 'new' of type with extended alignment without -faligned-new.
Waligned-newUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Waligned-new)
Waligned-new=C++ ObjC++ Var(warn_aligned_new) Enum(warn_aligned_new_level) Joined RejectNegative Warning LangEnabledBy(C++ ObjC++,Wall,1,0)-Waligned-new=[none|global|all]	Warn even if 'new' uses a class member allocation function.
Waligned-new=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Waligned-new)
WallAda AdaWhy AdaSCILEnable most warning messages.
WallC ObjC C++ ObjC++ WarningEnable most warning messages.
WallD
WallFortran
WallGo
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallLangUrlSuffix_D(gdc/Warnings.html#index-Wall) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wall)
WallModula-2
WallRust
Walloc-sizeC ObjC C++ ObjC++ Var(warn_alloc_size) Warning LangEnabledBy(C ObjC C++ ObjC++, Wextra)Warn when allocating insufficient storage for the target type of the assigned pointer.
Walloc-sizeUrlSuffix(gcc/Warning-Options.html#index-Walloc-size)
Walloc-size-larger-than=C ObjC C++ LTO ObjC++ Var(warn_alloc_size_limit) Joined Host_Wide_Int ByteSize Warning Init(HOST_WIDE_INT_MAX)-Walloc-size-larger-than=<bytes>	Warn for calls to allocation functions thatattempt to allocate objects larger than the specified number of bytes.
Walloc-size-larger-than=UrlSuffix(gcc/Warning-Options.html#index-Walloc-size-larger-than_003d)
Walloc-zeroC ObjC C++ ObjC++ Var(warn_alloc_zero) WarningWarn for calls to allocation functions that specify zero bytes.
Walloc-zeroUrlSuffix(gcc/Warning-Options.html#index-Walloc-zero)
WallocaC ObjC C++ ObjC++ Var(warn_alloca) WarningWarn on any use of alloca.
WallocaD
WallocaUrlSuffix(gcc/Warning-Options.html#index-Walloca) LangUrlSuffix_D(gdc/Warnings.html#index-Walloca)
WallocaUrlSuffix(gcc/Warning-Options.html#index-Walloca) LangUrlSuffix_D(gdc/Warnings.html#index-Walloca)
Walloca-larger-than=C ObjC C++ LTO ObjC++ Var(warn_alloca_limit) Warning Joined Host_Wide_Int ByteSize Init(HOST_WIDE_INT_MAX)-Walloca-larger-than=<number>	Warn on unbounded uses ofalloca, and on bounded uses of alloca whose bound can be larger than<number> bytes.
Walloca-larger-than=D
Walloca-larger-than=UrlSuffix(gcc/Warning-Options.html#index-Walloca-larger-than_003d) LangUrlSuffix_D(gdc/Warnings.html#index-Walloca-larger-than)
Walloca-larger-than=UrlSuffix(gcc/Warning-Options.html#index-Walloca-larger-than_003d) LangUrlSuffix_D(gdc/Warnings.html#index-Walloca-larger-than)
WampersandFortran Warning Var(warn_ampersand) LangEnabledBy(Fortran,Wall || Wpedantic)Warn about missing ampersand in continued character constants.
WampersandLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wampersand)
Wanalyzer-allocation-sizeCommon Var(warn_analyzer_allocation_size) Init(1) WarningWarn about code paths in which a pointer to a buffer is assigned to an incompatible type.
Wanalyzer-allocation-sizeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-allocation-size)
Wanalyzer-deref-before-checkCommon Var(warn_analyzer_deref_before_check) Init(1) WarningWarn about code paths in which a pointer is checked for NULL after it has already been dereferenced.
Wanalyzer-deref-before-checkUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-deref-before-check)
Wanalyzer-double-fcloseCommon Var(warn_analyzer_double_fclose) Init(1) WarningWarn about code paths in which a stdio FILE can be closed more than once.
Wanalyzer-double-fcloseUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-double-fclose)
Wanalyzer-double-freeCommon Var(warn_analyzer_double_free) Init(1) WarningWarn about code paths in which a pointer can be freed more than once.
Wanalyzer-double-freeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-double-free)
Wanalyzer-exposure-through-output-fileCommon Var(warn_analyzer_exposure_through_output_file) Init(1) WarningWarn about code paths in which sensitive data is written to a file.
Wanalyzer-exposure-through-output-fileUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-exposure-through-output-file)
Wanalyzer-exposure-through-uninit-copyCommon Var(warn_analyzer_exposure_through_uninit_copy) Init(1) WarningWarn about code paths in which sensitive data is copied across a security boundary.
Wanalyzer-exposure-through-uninit-copyUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-exposure-through-uninit-copy)
Wanalyzer-fd-access-mode-mismatchCommon Var(warn_analyzer_fd_mode_mismatch) Init(1) WarningWarn about code paths in which read on a write-only file descriptor is attempted, or vice versa.
Wanalyzer-fd-access-mode-mismatchUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-access-mode-mismatch)
Wanalyzer-fd-double-closeCommon Var(warn_analyzer_fd_double_close) Init(1) WarningWarn about code paths in which a file descriptor can be closed more than once.
Wanalyzer-fd-double-closeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-double-close)
Wanalyzer-fd-leakCommon Var(warn_analyzer_fd_leak) Init(1) WarningWarn about code paths in which a file descriptor is not closed.
Wanalyzer-fd-leakUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-leak)
Wanalyzer-fd-phase-mismatchCommon Var(warn_analyzer_fd_phase_mismatch) Init(1) WarningWarn about code paths in which an operation is attempted in the wrong phase of a file descriptor's lifetime.
Wanalyzer-fd-phase-mismatchUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-phase-mismatch)
Wanalyzer-fd-type-mismatchCommon Var(warn_analyzer_fd_type_mismatch) Init(1) WarningWarn about code paths in which an operation is attempted on the wrong type of file descriptor.
Wanalyzer-fd-type-mismatchUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-type-mismatch)
Wanalyzer-fd-use-after-closeCommon Var(warn_analyzer_fd_use_after_close) Init(1) WarningWarn about code paths in which a read or write is performed on a closed file descriptor.
Wanalyzer-fd-use-after-closeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-use-after-close)
Wanalyzer-fd-use-without-checkCommon Var(warn_analyzer_fd_use_without_check) Init(1) WarningWarn about code paths in which a file descriptor is used without being checked for validity.
Wanalyzer-fd-use-without-checkUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-fd-use-without-check)
Wanalyzer-file-leakCommon Var(warn_analyzer_file_leak) Init(1) WarningWarn about code paths in which a stdio FILE is not closed.
Wanalyzer-file-leakUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-file-leak)
Wanalyzer-free-of-non-heapCommon Var(warn_analyzer_free_of_non_heap) Init(1) WarningWarn about code paths in which a non-heap pointer is freed.
Wanalyzer-free-of-non-heapUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-free-of-non-heap)
Wanalyzer-imprecise-fp-arithmeticCommon Var(warn_analyzer_imprecise_fp_arithmetic) Init(1) WarningWarn about code paths in which floating-point arithmetic is used in locations where precise computation is needed.
Wanalyzer-imprecise-fp-arithmeticUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-imprecise-fp-arithmetic)
Wanalyzer-infinite-loopCommon Var(warn_analyzer_infinite_loop) Init(1) WarningWarn about code paths which appear to lead to an infinite loop.
Wanalyzer-infinite-loopUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-infinite-loop)
Wanalyzer-infinite-recursionCommon Var(warn_analyzer_infinite_recursion) Init(1) WarningWarn about code paths which appear to lead to infinite recursion.
Wanalyzer-infinite-recursionUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-infinite-recursion)
Wanalyzer-jump-through-nullCommon Var(warn_analyzer_jump_through_null) Init(1) WarningWarn about code paths in which a NULL function pointer is called.
Wanalyzer-jump-through-nullUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-jump-through-null)
Wanalyzer-malloc-leakCommon Var(warn_analyzer_malloc_leak) Init(1) WarningWarn about code paths in which a heap-allocated pointer leaks.
Wanalyzer-malloc-leakUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-malloc-leak)
Wanalyzer-mismatching-deallocationCommon Var(warn_analyzer_mismatching_deallocation) Init(1) WarningWarn about code paths in which the wrong deallocation function is called.
Wanalyzer-mismatching-deallocationUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-mismatching-deallocation)
Wanalyzer-null-argumentCommon Var(warn_analyzer_null_argument) Init(1) WarningWarn about code paths in which NULL is passed to a must-not-be-NULL function argument.
Wanalyzer-null-argumentUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-null-argument)
Wanalyzer-null-dereferenceCommon Var(warn_analyzer_null_dereference) Init(1) WarningWarn about code paths in which a NULL pointer is dereferenced.
Wanalyzer-null-dereferenceUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-null-dereference)
Wanalyzer-out-of-boundsCommon Var(warn_analyzer_out_of_bounds) Init(1) WarningWarn about code paths in which a write or read to a buffer is out-of-bounds.
Wanalyzer-out-of-boundsUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-out-of-bounds)
Wanalyzer-overlapping-buffersCommon Var(warn_analyzer_overlapping_buffers) Init(1) WarningWarn about code paths in which undefined behavior would occur due to overlapping buffers.
Wanalyzer-overlapping-buffersUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-overlapping-buffers)
Wanalyzer-possible-null-argumentCommon Var(warn_analyzer_possible_null_argument) Init(1) WarningWarn about code paths in which a possibly-NULL value is passed to a must-not-be-NULL function argument.
Wanalyzer-possible-null-argumentUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-possible-null-argument)
Wanalyzer-possible-null-dereferenceCommon Var(warn_analyzer_possible_null_dereference) Init(1) WarningWarn about code paths in which a possibly-NULL pointer is dereferenced.
Wanalyzer-possible-null-dereferenceUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-possible-null-dereference)
Wanalyzer-putenv-of-auto-varCommon Var(warn_analyzer_putenv_of_auto_var) Init(1) WarningWarn about code paths in which an on-stack buffer is passed to putenv.
Wanalyzer-putenv-of-auto-varUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-putenv-of-auto-var)
Wanalyzer-shift-count-negativeCommon Var(warn_analyzer_shift_count_negative) Init(1) WarningWarn about code paths in which a shift with negative count is attempted.
Wanalyzer-shift-count-negativeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-shift-count-negative)
Wanalyzer-shift-count-overflowCommon Var(warn_analyzer_shift_count_overflow) Init(1) WarningWarn about code paths in which a shift with count >= width of type is attempted.
Wanalyzer-shift-count-overflowUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-shift-count-overflow)
Wanalyzer-stale-setjmp-bufferCommon Var(warn_analyzer_stale_setjmp_buffer) Init(1) WarningWarn about code paths in which a longjmp rewinds to a jmp_buf saved in a stack frame that has returned.
Wanalyzer-stale-setjmp-bufferUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-stale-setjmp-buffer)
Wanalyzer-symbol-too-complexCommon Var(warn_analyzer_symbol_too_complex) Init(0) WarningWarn if expressions are too complicated for the analyzer to fully track.
Wanalyzer-symbol-too-complexUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-symbol-too-complex)
Wanalyzer-tainted-allocation-sizeCommon Var(warn_analyzer_tainted_allocation_size) Init(1) WarningWarn about code paths in which an unsanitized value is used as an allocation size.
Wanalyzer-tainted-allocation-sizeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-allocation-size)
Wanalyzer-tainted-array-indexCommon Var(warn_analyzer_tainted_array_index) Init(1) WarningWarn about code paths in which an unsanitized value is used as an array index.
Wanalyzer-tainted-array-indexUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-array-index)
Wanalyzer-tainted-assertionCommon Var(warn_analyzer_tainted_assertion) Init(1) WarningWarn about code paths in which an 'assert()' is made involving an unsanitized value.
Wanalyzer-tainted-assertionUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-assertion)
Wanalyzer-tainted-divisorCommon Var(warn_analyzer_tainted_divisor) Init(1) WarningWarn about code paths in which an unsanitized value is used as a divisor.
Wanalyzer-tainted-divisorUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-divisor)
Wanalyzer-tainted-offsetCommon Var(warn_analyzer_tainted_offset) Init(1) WarningWarn about code paths in which an unsanitized value is used as a pointer offset.
Wanalyzer-tainted-offsetUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-offset)
Wanalyzer-tainted-sizeCommon Var(warn_analyzer_tainted_size) Init(1) WarningWarn about code paths in which an unsanitized value is used as a size.
Wanalyzer-tainted-sizeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-tainted-size)
Wanalyzer-too-complexCommon Var(warn_analyzer_too_complex) Init(0) WarningWarn if the code is too complicated for the analyzer to fully explore.
Wanalyzer-too-complexUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-too-complex)
Wanalyzer-undefined-behavior-ptrdiffCommon Var(warn_analyzer_undefined_behavior_ptrdiff) Init(1) WarningWarn about code paths in which pointer subtraction involves undefined behavior.
Wanalyzer-undefined-behavior-ptrdiffUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-undefined-behavior-ptrdiff)
Wanalyzer-undefined-behavior-strtokCommon Var(warn_analyzer_undefined_behavior_strtok) Init(1) WarningWarn about code paths in which a call is made to strtok with undefined behavior.
Wanalyzer-undefined-behavior-strtokUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-undefined-behavior-strtok)
Wanalyzer-unsafe-call-within-signal-handlerCommon Var(warn_analyzer_unsafe_call_within_signal_handler) Init(1) WarningWarn about code paths in which an async-signal-unsafe function is called from a signal handler.
Wanalyzer-unsafe-call-within-signal-handlerUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-unsafe-call-within-signal-handler)
Wanalyzer-use-after-freeCommon Var(warn_analyzer_use_after_free) Init(1) WarningWarn about code paths in which a freed value is used.
Wanalyzer-use-after-freeUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-use-after-free)
Wanalyzer-use-of-pointer-in-stale-stack-frameCommon Var(warn_analyzer_use_of_pointer_in_stale_stack_frame) Init(1) WarningWarn about code paths in which a pointer to a stale stack frame is used.
Wanalyzer-use-of-pointer-in-stale-stack-frameUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-use-of-pointer-in-stale-stack-frame)
Wanalyzer-use-of-uninitialized-valueCommon Var(warn_analyzer_use_of_uninitialized_value) Init(1) WarningWarn about code paths in which an uninitialized value is used.
Wanalyzer-use-of-uninitialized-valueUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-use-of-uninitialized-value)
Wanalyzer-va-arg-type-mismatchCommon Var(warn_analyzer_va_arg_type_mismatch) Init(1) WarningWarn about code paths in which va_arg uses the wrong type.
Wanalyzer-va-arg-type-mismatchUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-va-arg-type-mismatch)
Wanalyzer-va-list-exhaustedCommon Var(warn_analyzer_va_list_exhausted) Init(1) WarningWarn about code paths in which va_arg is used too many times on a va_list.
Wanalyzer-va-list-exhaustedUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-va-list-exhausted)
Wanalyzer-va-list-leakCommon Var(warn_analyzer_va_list_leak) Init(1) WarningWarn about code paths in which va_start or va_copy is used without a corresponding va_end.
Wanalyzer-va-list-leakUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-va-list-leak)
Wanalyzer-va-list-use-after-va-endCommon Var(warn_analyzer_va_list_use_after_va_end) Init(1) WarningWarn about code paths in which a va_list is used after va_end.
Wanalyzer-va-list-use-after-va-endUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-va-list-use-after-va-end)
Wanalyzer-write-to-constCommon Var(warn_analyzer_write_to_const) Init(1) WarningWarn about code paths which attempt to write to a const object.
Wanalyzer-write-to-constUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-write-to-const)
Wanalyzer-write-to-string-literalCommon Var(warn_analyzer_write_to_string_literal) Init(1) WarningWarn about code paths which attempt to write to a string literal.
Wanalyzer-write-to-string-literalUrlSuffix(gcc/Static-Analyzer-Options.html#index-Wanalyzer-write-to-string-literal)
Wargument-mismatchFortran WarnRemovedDoes nothing. Preserved for backward compatibility.
Warith-conversionC ObjC C++ ObjC++ Var(warn_arith_conv) WarningWarn if conversion of the result of arithmetic might change the value even though converting the operands cannot.
Warith-conversionUrlSuffix(gcc/Warning-Options.html#index-Warith-conversion)
Warray-boundsCommon Alias(Warray-bounds=, 1, 0) Warning
Warray-boundsUrlSuffix(gcc/Warning-Options.html#index-Warray-bounds)
Warray-bounds=Common Joined RejectNegative UInteger Var(warn_array_bounds) Warning IntegerRange(0, 2)Warn if an array is accessed out of bounds.
Warray-bounds=LangEnabledBy(C ObjC C++ LTO ObjC++,Wall,1,0)
Warray-bounds=UrlSuffix(gcc/Warning-Options.html#index-Warray-bounds)
Warray-bounds=UrlSuffix(gcc/Warning-Options.html#index-Warray-bounds)
Warray-compareC ObjC C++ ObjC++ Var(warn_array_compare) Warning LangEnabledBy(C ObjC C++ ObjC++, Wall)Warn about comparisons between two operands of array type.
Warray-compareUrlSuffix(gcc/Warning-Options.html#index-Warray-compare)
Warray-parameterC ObjC C++ ObjC++ Warning Alias(Warray-parameter=, 2, 0)Warn about mismatched declarations of array parameters and unsafe accesses to them.
Warray-parameterUrlSuffix(gcc/Warning-Options.html#index-Warray-parameter)
Warray-parameter=C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_array_parameter) IntegerRange(0, 2) LangEnabledBy(C ObjC C++ ObjC++,Wall, 2, 0) WarningWarn about mismatched declarations of array parameters and unsafe accesses to them.
Warray-parameter=UrlSuffix(gcc/Warning-Options.html#index-Warray-parameter)
Warray-temporariesFortran Warning Var(warn_array_temporaries)Warn about creation of array temporaries.
Warray-temporariesLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Warray-temporaries)
Wassign-interceptObjC ObjC++ Var(warn_assign_intercept) WarningWarn whenever an Objective-C assignment is being intercepted by the garbage collector.
Wassign-interceptUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wassign-intercept)
Wattribute-aliasCommon Alias(Wattribute_alias=, 1, 0) WarningWarn about type safety and similar errors and mismatches in declarations with alias attributes.
Wattribute-aliasUrlSuffix(gcc/Warning-Options.html#index-Wattribute-alias)
Wattribute-alias=Common Joined RejectNegative UInteger Var(warn_attribute_alias) Init(1) Warning IntegerRange(0, 2)Warn about type safety and similar errors and mismatches in declarations with alias attributes.
Wattribute-alias=UrlSuffix(gcc/Warning-Options.html#index-Wattribute-alias)
Wattribute-warningCommon Var(warn_attribute_warning) Init(1) WarningWarn about uses of __attribute__((warning)) declarations.
Wattribute-warningUrlSuffix(gcc/Warning-Options.html#index-Wattribute-warning)
WattributesCommon Var(warn_attributes) Init(1) WarningWarn about inappropriate attribute usage.
WattributesUrlSuffix(gcc/Warning-Options.html#index-Wattributes)
Wattributes=Common JoinedDo not warn about specified attributes.
Wattributes=UrlSuffix(gcc/Warning-Options.html#index-Wattributes)
Wbad-function-castC ObjC Var(warn_bad_function_cast) WarningWarn about casting functions to incompatible types.
Wbad-function-castUrlSuffix(gcc/Warning-Options.html#index-Wbad-function-cast)
Wbidi-charsC ObjC C++ ObjC++ Warning Alias(Wbidi-chars=,any,none)
Wbidi-charsUrlSuffix(gcc/Warning-Options.html#index-Wbidi-chars)
Wbidi-chars=C ObjC C++ ObjC++ RejectNegative Joined Warning CPP(cpp_warn_bidirectional) CppReason(CPP_W_BIDIRECTIONAL) Var(warn_bidirectional) Init(bidirectional_unpaired) Enum(cpp_bidirectional_level) EnumSet-Wbidi-chars=[none|unpaired|any|ucn] Warn about UTF-8 bidirectional control characters.
Wbidi-chars=UrlSuffix(gcc/Warning-Options.html#index-Wbidi-chars)
Wbool-compareC ObjC C++ ObjC++ Var(warn_bool_compare) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about boolean expression compared with an integer value different from true/false.
Wbool-compareUrlSuffix(gcc/Warning-Options.html#index-Wbool-compare)
Wbool-operationC ObjC C++ ObjC++ Var(warn_bool_op) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about certain operations on boolean expressions.
Wbool-operationUrlSuffix(gcc/Warning-Options.html#index-Wbool-operation)
Wbuiltin-declaration-mismatchC ObjC C++ ObjC++ Var(warn_builtin_declaration_mismatch) Init(1) WarningWarn when a built-in function is declared with the wrong signature.
Wbuiltin-declaration-mismatchD
Wbuiltin-declaration-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wbuiltin-declaration-mismatch) LangUrlSuffix_D(gdc/Warnings.html#index-Wbuiltin-declaration-mismatch)
Wbuiltin-declaration-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wbuiltin-declaration-mismatch) LangUrlSuffix_D(gdc/Warnings.html#index-Wbuiltin-declaration-mismatch)
Wbuiltin-macro-redefinedC ObjC C++ ObjC++ CPP(warn_builtin_macro_redefined) CppReason(CPP_W_BUILTIN_MACRO_REDEFINED) Var(cpp_warn_builtin_macro_redefined) Init(1) WarningWarn when a built-in preprocessor macro is undefined or redefined.
Wbuiltin-macro-redefinedUrlSuffix(gcc/Warning-Options.html#index-Wbuiltin-macro-redefined)
Wc++-compatC ObjC Var(warn_cxx_compat) CPP(warn_cxx_operator_names) CppReason(CPP_W_CXX_OPERATOR_NAMES) Init(0) WarningWarn about C constructs that are not in the common subset of C and C++.
Wc++-compatUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b-compat)
Wc++0x-compatC++ ObjC++ Warning Alias(Wc++11-compat) Undocumented
Wc++11-compatC++ ObjC++ Var(warn_cxx11_compat) Warning LangEnabledBy(C++ ObjC++,Wall) Init(0) CPP(cpp_warn_cxx11_compat) CppReason(CPP_W_CXX11_COMPAT)Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011.
Wc++11-compatUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b11-compat)
Wc++11-extensionsC++ ObjC++ Var(warn_cxx11_extensions) Warning Init(1)Warn about C++11 constructs in code compiled with an older standard.
Wc++11-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b11-extensions)
Wc++14-compatC++ ObjC++ Var(warn_cxx14_compat) Warning LangEnabledBy(C++ ObjC++,Wall)Warn about C++ constructs whose meaning differs between ISO C++ 2011 and ISO C++ 2014.
Wc++14-compatUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b14-compat)
Wc++14-extensionsC++ ObjC++ Var(warn_cxx14_extensions) Warning Init(1) CppReason(CPP_W_CXX14_EXTENSIONS)Warn about C++14 constructs in code compiled with an older standard.
Wc++14-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b14-extensions)
Wc++17-compatC++ ObjC++ Var(warn_cxx17_compat) Warning LangEnabledBy(C++ ObjC++,Wall)Warn about C++ constructs whose meaning differs between ISO C++ 2014 and ISO C++ 2017.
Wc++17-compatUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b17-compat)
Wc++17-extensionsC++ ObjC++ Var(warn_cxx17_extensions) Warning Init(1) CppReason(CPP_W_CXX17_EXTENSIONS)Warn about C++17 constructs in code compiled with an older standard.
Wc++17-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b17-extensions)
Wc++1z-compatC++ ObjC++ Warning Alias(Wc++17-compat) Undocumented
Wc++20-compatC++ ObjC++ Var(warn_cxx20_compat) Warning LangEnabledBy(C++ ObjC++,Wall) Init(0) CPP(cpp_warn_cxx20_compat) CppReason(CPP_W_CXX20_COMPAT)Warn about C++ constructs whose meaning differs between ISO C++ 2017 and ISO C++ 2020.
Wc++20-compatUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b20-compat)
Wc++20-extensionsC++ ObjC++ Var(warn_cxx20_extensions) Warning Init(1) CppReason(CPP_W_CXX20_EXTENSIONS)Warn about C++20 constructs in code compiled with an older standard.
Wc++20-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b20-extensions)
Wc++23-extensionsC++ ObjC++ Var(warn_cxx23_extensions) Warning Init(1) CppReason(CPP_W_CXX23_EXTENSIONS)Warn about C++23 constructs in code compiled with an older standard.
Wc++23-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b23-extensions)
Wc++26-extensionsC++ ObjC++ Var(warn_cxx26_extensions) Warning Init(1) CppReason(CPP_W_CXX26_EXTENSIONS)Warn about C++26 constructs in code compiled with an older standard.
Wc++26-extensionsUrlSuffix(gcc/Warning-Options.html#index-Wc_002b_002b26-extensions)
Wc++2a-compatC++ ObjC++ Warning Alias(Wc++20-compat) Undocumented
Wc-binding-typeFortran Var(warn_c_binding_type) Warning LangEnabledBy(Fortran,Wall)Warn if the type of a variable might be not interoperable with C.
Wc-binding-typeLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wc-binding-type)
Wc11-c23-compatC ObjC CPP(cpp_warn_c11_c23_compat) CppReason(CPP_W_C11_C23_COMPAT) Var(warn_c11_c23_compat) Init(-1) WarningWarn about features not present in ISO C11, but present in ISO C23.
Wc11-c23-compatUrlSuffix(gcc/Warning-Options.html#index-Wc11-c23-compat)
Wc11-c2x-compatC ObjC Alias(Wc11-c23-compat)Deprecated in favor of -Wc11-c23-compat.
Wc23-c2y-compatC ObjC CPP(cpp_warn_c23_c2y_compat) CppReason(CPP_W_C23_C2Y_COMPAT) Var(warn_c23_c2y_compat) Init(-1) WarningWarn about features not present in ISO C23, but present in ISO C2Y.
Wc23-c2y-compatUrlSuffix(gcc/Warning-Options.html#index-Wc23-c2y-compat)
Wc90-c99-compatC ObjC CPP(cpp_warn_c90_c99_compat) CppReason(CPP_W_C90_C99_COMPAT) Var(warn_c90_c99_compat) Init(-1) WarningWarn about features not present in ISO C90, but present in ISO C99.
Wc90-c99-compatUrlSuffix(gcc/Warning-Options.html#index-Wc90-c99-compat)
Wc99-c11-compatC ObjC Var(warn_c99_c11_compat) Init(-1) WarningWarn about features not present in ISO C99, but present in ISO C11.
Wc99-c11-compatUrlSuffix(gcc/Warning-Options.html#index-Wc99-c11-compat)
Wcalloc-transposed-argsC ObjC C++ ObjC++ Var(warn_calloc_transposed_args) Warning LangEnabledBy(C ObjC C++ ObjC++,Wextra)Warn about suspicious calls to calloc-like functions where sizeof expression is the earlier size argument and not the latter.
Wcalloc-transposed-argsUrlSuffix(gcc/Warning-Options.html#index-Wcalloc-transposed-args)
Wcannot-profileCommon Var(warn_cannot_profile) Init(1) WarningWarn when profiling instrumentation was requested, but could not be applied toa certain function.
Wcase-enumModula-2turns on case statement label compile time checking when using an expression of an enum type.
Wcast-alignCommon Var(warn_cast_align) WarningWarn about pointer casts which increase alignment.
Wcast-alignUrlSuffix(gcc/Warning-Options.html#index-Wcast-align)
Wcast-align=strictCommon Var(warn_cast_align,2) WarningWarn about pointer casts which increase alignment.
Wcast-align=strictUrlSuffix(gcc/Warning-Options.html#index-Wcast-align_003dstrict)
Wcast-function-typeC ObjC C++ ObjC++ Var(warn_cast_function_type) Warning EnabledBy(Wextra)Warn about casts between incompatible function types.
Wcast-function-typeUrlSuffix(gcc/Warning-Options.html#index-Wcast-function-type)
Wcast-qualC ObjC C++ ObjC++ Var(warn_cast_qual) WarningWarn about casts which discard qualifiers.
Wcast-qualUrlSuffix(gcc/Warning-Options.html#index-Wcast-qual)
Wcast-resultD Warning Var(warn_cast_result) LangEnabledBy(D, Wextra)Warn about casts that will produce a null result.
Wcast-resultLangUrlSuffix_D(gdc/Warnings.html#index-Wcast-result)
Wcast-user-definedC++ ObjC++ Var(warn_cast_user_defined) Warning Init(1)Warn about a cast to reference type that does not use a related user-defined conversion function.
Wcast-user-definedUrlSuffix(gcc/Warning-Options.html#index-Wcast-user-defined)
Wcatch-valueC++ ObjC++ Warning Alias(Wcatch-value=, 1, 0)Warn about catch handlers of non-reference type.
Wcatch-valueUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wcatch-value)
Wcatch-value=C++ ObjC++ Var(warn_catch_value) Warning Joined RejectNegative UInteger LangEnabledBy(C++ ObjC++,Wall, 1, 0) IntegerRange(0, 3)Warn about catch handlers of non-reference type.
Wcatch-value=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wcatch-value)
Wchanges-meaningC++ ObjC++ Var(warn_changes_meaning) Warning Init(1)Complain about a name being declared as a class member after a previous use of the same name.
Wchanges-meaningUrlSuffix(gcc/Warning-Options.html#index-Wchanges-meaning)
Wchar-subscriptsC ObjC C++ ObjC++ Var(warn_char_subscripts) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about subscripts whose type is \"char\".
Wchar-subscriptsUrlSuffix(gcc/Warning-Options.html#index-Wchar-subscripts)
Wcharacter-truncationFortran Var(warn_character_truncation) Warning LangEnabledBy(Fortran,Wall)Warn about truncated character expressions.
Wcharacter-truncationLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wcharacter-truncation)
WchkpC ObjC C++ ObjC++ Warning WarnRemovedRemoved in GCC 9.  This switch has no effect.
Wclass-conversionC++ ObjC++ Var(warn_class_conversion) Init(1) WarningWarn when a conversion function will never be called due to the type it converts to.
Wclass-conversionUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wclass-conversion)
Wclass-memaccessC++ ObjC++ Var(warn_class_memaccess) Warning LangEnabledBy(C++ ObjC++, Wall)Warn for unsafe raw memory writes to objects of class types.
Wclass-memaccessUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wclass-memaccess)
WclobberedC ObjC C++ ObjC++ Var(warn_clobbered) Warning EnabledBy(Wextra)Warn about variables that might be changed by \"longjmp\" or \"vfork\".
WclobberedUrlSuffix(gcc/Warning-Options.html#index-Wclobbered)
Wcomma-subscriptC++ ObjC++ Var(warn_comma_subscript) WarningWarn about uses of a comma operator within a subscripting expression.
Wcomma-subscriptUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wcomma-subscript)
WcommentC ObjC C++ ObjC++ CPP(warn_comments) CppReason(CPP_W_COMMENTS) Var(cpp_warn_comment) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about possibly nested block comments, and C++ comments spanning more than one physical line.
WcommentUrlSuffix(gcc/Warning-Options.html#index-Wcomment)
WcommentsC ObjC C++ ObjC++ Warning Alias(Wcomment)Synonym for -Wcomment.
WcommentsUrlSuffix(gcc/Warning-Options.html#index-Wcomments)
Wcompare-distinct-pointer-typesC ObjC Var(warn_compare_distinct_pointer_types) Warning Init(1)Warn if pointers of distinct types are compared without a cast.
Wcompare-distinct-pointer-typesUrlSuffix(gcc/Warning-Options.html#index-Wcompare-distinct-pointer-types)
Wcompare-realsFortran Warning Var(warn_compare_reals) LangEnabledBy(Fortran,Wextra)Warn about equality comparisons involving REAL or COMPLEX expressions.
Wcompare-realsLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wcompare-reals)
Wcomplain-wrong-langCommon Var(warn_complain_wrong_lang) Init(1) WarningComplain when a command-line option is valid, but not applicable to the current front end.
Wcomplain-wrong-langUrlSuffix(gcc/Warning-Options.html#index-Wcomplain-wrong-lang)
Wconditionally-supportedC++ ObjC++ Var(warn_conditionally_supported) WarningWarn for conditionally-supported constructs.
Wconditionally-supportedUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wconditionally-supported)
WconversionC ObjC C++ ObjC++ Var(warn_conversion) WarningWarn for implicit type conversions that may change a value.
WconversionFortran Var(warn_conversion) Warning LangEnabledBy(Fortran,Wall)
WconversionUrlSuffix(gcc/Warning-Options.html#index-Wconversion) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wconversion)
WconversionUrlSuffix(gcc/Warning-Options.html#index-Wconversion) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wconversion)
Wconversion-extraFortran Var(warn_conversion_extra) WarningWarn about most implicit conversions.
Wconversion-extraLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wconversion-extra)
Wconversion-nullC++ ObjC++ Var(warn_conversion_null) Init(1) WarningWarn for converting NULL from/to a non-pointer type.
Wconversion-nullUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wconversion-null)
Wcoverage-invalid-line-numberCommon Var(warn_coverage_invalid_linenum) Init(1) WarningWarn in case a function ends earlier than it begins due to an invalid linenum macros.
Wcoverage-invalid-line-numberUrlSuffix(gcc/Warning-Options.html#index-Wcoverage-invalid-line-number)
Wcoverage-mismatchCommon Var(warn_coverage_mismatch) Init(1) WarningWarn in case profiles in -fprofile-use do not match.
Wcoverage-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wcoverage-mismatch)
Wcoverage-too-many-conditionsCommon Var(warn_too_many_conditions) Init(1) WarningWarn when a conditional has too many terms and condition coverage profilinggives up instrumenting the expression.
Wcoverage-too-many-conditionsUrlSuffix(gcc/Warning-Options.html#index-Wcoverage-too-many-conditions)
WcppC ObjC C++ ObjC++ CppReason(CPP_W_WARNING_DIRECTIVE)
WcppCommon Var(warn_cpp) Init(1) WarningWarn when a #warning directive is encountered.
WcppUrlSuffix(gcc/Warning-Options.html#index-Wcpp)
WcppUrlSuffix(gcc/Warning-Options.html#index-Wcpp)
Wctad-maybe-unsupportedC++ ObjC++ Var(warn_ctad_maybe_unsupported) WarningWarn when performing class template argument deduction on a type with nodeduction guides.
Wctad-maybe-unsupportedUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wctad-maybe-unsupported)
Wctor-dtor-privacyC++ ObjC++ Var(warn_ctor_dtor_privacy) WarningWarn when all constructors and destructors are private.
Wctor-dtor-privacyUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wctor-dtor-privacy)
Wdangling-elseC ObjC C++ ObjC++ Var(warn_dangling_else) Warning LangEnabledBy(C ObjC C++ ObjC++,Wparentheses)Warn about dangling else.
Wdangling-elseUrlSuffix(gcc/Warning-Options.html#index-Wdangling-else)
Wdangling-pointerC ObjC C++ LTO ObjC++ Alias(Wdangling-pointer=, 2, 0) WarningWarn for uses of pointers to auto variables whose lifetime has ended.
Wdangling-pointerUrlSuffix(gcc/Warning-Options.html#index-Wdangling-pointer)
Wdangling-pointer=C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_dangling_pointer) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall, 2, 0) IntegerRange(0, 2)Warn for uses of pointers to auto variables whose lifetime has ended.
Wdangling-pointer=UrlSuffix(gcc/Warning-Options.html#index-Wdangling-pointer)
Wdangling-referenceC++ ObjC++ Var(warn_dangling_reference) Warning LangEnabledBy(C++ ObjC++, Wextra)Warn when a reference is bound to a temporary whose lifetime has ended.
Wdangling-referenceUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdangling-reference)
Wdate-timeC ObjC C++ ObjC++ CPP(warn_date_time) CppReason(CPP_W_DATE_TIME) Var(cpp_warn_date_time) Init(0) WarningWarn about __TIME__, __DATE__ and __TIMESTAMP__ usage.
Wdate-timeFortran
Wdate-timeUrlSuffix(gcc/Warning-Options.html#index-Wdate-time)
Wdate-timeUrlSuffix(gcc/Warning-Options.html#index-Wdate-time)
Wdeclaration-after-statementC ObjC Var(warn_declaration_after_statement) Init(-1) WarningWarn when a declaration is found after a statement.
Wdeclaration-after-statementUrlSuffix(gcc/Warning-Options.html#index-Wdeclaration-after-statement)
Wdeclaration-missing-parameter-typeC ObjC Var(warn_declaration_missing_parameter) Warning Init(1)Warn for missing parameter types in function declarations.
Wdeclaration-missing-parameter-typeUrlSuffix(gcc/Warning-Options.html#index-Wdeclaration-missing-parameter-type)
Wdefaulted-function-deletedC++ ObjC++ Var(warn_defaulted_fn_deleted) Init(1) WarningWarn when an explicitly defaulted function is deleted.
Wdefaulted-function-deletedUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdefaulted-function-deleted)
Wdelete-incompleteC++ ObjC++ Var(warn_delete_incomplete) Init(1) WarningWarn when deleting a pointer to incomplete type.
Wdelete-incompleteUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdelete-incomplete)
Wdelete-non-virtual-dtorC++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall || Weffc++)Warn about deleting polymorphic objects with non-virtual destructors.
Wdelete-non-virtual-dtorUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdelete-non-virtual-dtor)
WdeprecatedC C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED)
WdeprecatedCommon Var(warn_deprecated) Init(1) WarningWarn if a deprecated compiler feature, class, method, or field is used.
WdeprecatedD
WdeprecatedUrlSuffix(gcc/Warning-Options.html#index-Wdeprecated) LangUrlSuffix_D(gdc/Warnings.html#index-Wdeprecated)
WdeprecatedUrlSuffix(gcc/Warning-Options.html#index-Wdeprecated) LangUrlSuffix_D(gdc/Warnings.html#index-Wdeprecated)
WdeprecatedUrlSuffix(gcc/Warning-Options.html#index-Wdeprecated) LangUrlSuffix_D(gdc/Warnings.html#index-Wdeprecated)
Wdeprecated-copyC++ ObjC++ Var(warn_deprecated_copy) Warning LangEnabledBy(C++ ObjC++, Wextra)Mark implicitly-declared copy operations as deprecated if the class has auser-provided copy operation.
Wdeprecated-copyUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdeprecated-copy)
Wdeprecated-copy-dtorC++ ObjC++ Var(warn_deprecated_copy, 2) WarningMark implicitly-declared copy operations as deprecated if the class has auser-provided copy operation or destructor.
Wdeprecated-declarationsCommon Var(warn_deprecated_decl) Init(1) WarningWarn about uses of __attribute__((deprecated)) declarations.
Wdeprecated-declarationsUrlSuffix(gcc/Warning-Options.html#index-Wdeprecated-declarations)
Wdeprecated-enum-enum-conversionC++ ObjC++ Var(warn_deprecated_enum_enum_conv) WarningWarn about deprecated arithmetic conversions on operands of enumeration types.
Wdeprecated-enum-enum-conversionUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdeprecated-enum-enum-conversion)
Wdeprecated-enum-float-conversionC++ ObjC++ Var(warn_deprecated_enum_float_conv) WarningWarn about deprecated arithmetic conversions on operands where one is of enumerationtype and the other is of a floating-point type.
Wdeprecated-enum-float-conversionUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdeprecated-enum-float-conversion)
Wdeprecated-literal-operatorC++ ObjC++ Var(warn_deprecated_literal_operator) WarningWarn about deprecated space between "" and suffix in a user-defined literal operator.
Wdeprecated-literal-operatorUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdeprecated-literal-operator)
Wdeprecated-non-prototypeC ObjC Var(warn_deprecated_non_prototype) Init(-1) WarningWarn about calls with arguments to functions declared without parameters.
Wdeprecated-non-prototypeUrlSuffix(gcc/Warning-Options.html#index-Wdeprecated-non-prototype)
Wdeprecated-variadic-comma-omissionC++ ObjC++ Var(warn_deprecated_variadic_comma_omission) WarningWarn about deprecated omission of comma before ... in varargs function declaration.
Wdeprecated-variadic-comma-omissionUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wdeprecated-variadic-comma-omission)
Wdesignated-initC ObjC Var(warn_designated_init) Init(1) WarningWarn about positional initialization of structs requiring designated initializers.
Wdesignated-initUrlSuffix(gcc/Warning-Options.html#index-Wdesignated-init)
Wdisabled-optimizationCommon Var(warn_disabled_optimization) WarningWarn when an optimization pass is disabled.
Wdisabled-optimizationUrlSuffix(gcc/Warning-Options.html#index-Wdisabled-optimization)
Wdiscarded-array-qualifiersC ObjC Var(warn_discarded_array_qualifiers) Init(1) WarningWarn if qualifiers on arrays which are pointer targets are discarded.
Wdiscarded-array-qualifiersUrlSuffix(gcc/Warning-Options.html#index-Wdiscarded-array-qualifiers)
Wdiscarded-qualifiersC ObjC Var(warn_discarded_qualifiers) Init(1) WarningWarn if type qualifiers on pointers are discarded.
Wdiscarded-qualifiersUrlSuffix(gcc/Warning-Options.html#index-Wdiscarded-qualifiers)
Wdiv-by-zeroC ObjC C++ ObjC++ Var(warn_div_by_zero) Init(1) WarningWarn about compile-time integer division by zero.
Wdiv-by-zeroUrlSuffix(gcc/Warning-Options.html#index-Wdiv-by-zero)
Wdo-subscriptFortran Var(warn_do_subscript) Warning LangEnabledBy(Fortran,Wextra)Warn about possibly incorrect subscripts in do loops.
Wdo-subscriptLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wdo-subscript)
Wdouble-promotionC ObjC C++ ObjC++ Var(warn_double_promotion) WarningWarn about implicit conversions from \"float\" to \"double\".
Wdouble-promotionUrlSuffix(gcc/Warning-Options.html#index-Wdouble-promotion)
Wduplicate-decl-specifierC ObjC Var(warn_duplicate_decl_specifier) Warning LangEnabledBy(C ObjC,Wall)Warn when a declaration has duplicate const, volatile, restrict or _Atomic specifier.
Wduplicate-decl-specifierUrlSuffix(gcc/Warning-Options.html#index-Wduplicate-decl-specifier)
Wduplicated-branchesC ObjC C++ ObjC++ Var(warn_duplicated_branches) Init(0) WarningWarn about duplicated branches in if-else statements.
Wduplicated-branchesUrlSuffix(gcc/Warning-Options.html#index-Wduplicated-branches)
Wduplicated-condC ObjC C++ ObjC++ Var(warn_duplicated_cond) Init(0) WarningWarn about duplicated conditions in an if-else-if chain.
Wduplicated-condUrlSuffix(gcc/Warning-Options.html#index-Wduplicated-cond)
Weffc++C++ ObjC++ Var(warn_ecpp) WarningWarn about violations of Effective C++ style rules.
Weffc++UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Weffc_002b_002b)
Welaborated-enum-baseC++ ObjC++ Var(warn_elaborated_enum_base) Warning Init(1)Warn if an additional enum-base is used in an elaborated-type-specifier.
Welaborated-enum-baseUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Welaborated-enum-base)
Wempty-bodyC ObjC C++ ObjC++ Var(warn_empty_body) Warning EnabledBy(Wextra)Warn about an empty body in an if or else statement.
Wempty-bodyUrlSuffix(gcc/Warning-Options.html#index-Wempty-body)
Wendif-labelsC ObjC C++ ObjC++ CPP(warn_endif_labels) CppReason(CPP_W_ENDIF_LABELS) Var(cpp_warn_endif_labels) Init(1) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)Warn about stray tokens after #else and #endif.
Wendif-labelsUrlSuffix(gcc/Warning-Options.html#index-Wendif-labels)
Wenum-compareC ObjC C++ ObjC++ Var(warn_enum_compare) Init(-1) Warning LangEnabledBy(C ObjC,Wall || Wc++-compat)Warn about comparison of different enum types.
Wenum-compareUrlSuffix(gcc/Warning-Options.html#index-Wenum-compare)
Wenum-conversionC ObjC C++ ObjC++ Var(warn_enum_conversion) Init(0) Warning LangEnabledBy(C ObjC,Wextra)Warn about implicit conversion of enum types.
Wenum-conversionUrlSuffix(gcc/Warning-Options.html#index-Wenum-conversion)
Wenum-int-mismatchC ObjC Var(warn_enum_int_mismatch) Warning LangEnabledBy(C ObjC,Wall || Wc++-compat)Warn about enum/integer type mismatches.
Wenum-int-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wenum-int-mismatch)
WerrorC ObjC C++ ObjC++
WerrorCommon Var(warnings_are_errors)Treat all warnings as errors.
WerrorD
WerrorUrlSuffix(gcc/Warning-Options.html#index-Werror) LangUrlSuffix_D(gdc/Warnings.html#index-Werror) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Werror)
WerrorUrlSuffix(gcc/Warning-Options.html#index-Werror) LangUrlSuffix_D(gdc/Warnings.html#index-Werror) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Werror)
WerrorUrlSuffix(gcc/Warning-Options.html#index-Werror) LangUrlSuffix_D(gdc/Warnings.html#index-Werror) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Werror)
Werror-implicit-function-declarationC ObjC RejectNegative Warning Alias(Werror=, implicit-function-declaration)This switch is deprecated; use -Werror=implicit-function-declaration instead.
Werror=Common JoinedTreat specified warning as error.
Werror=UrlSuffix(gcc/Warning-Options.html#index-Werror) LangUrlSuffix_D(gdc/Warnings.html#index-Werror) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Werror)
WexceptionsC++ ObjC++ Var(warn_exceptions) Init(1) WarningWarn when an exception handler is shadowed by another handler.
WexceptionsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wexceptions)
Wexpansion-to-definedC ObjC C++ ObjC++ CPP(warn_expansion_to_defined) CppReason(CPP_W_EXPANSION_TO_DEFINED) Var(cpp_warn_expansion_to_defined) Init(0) Warning EnabledBy(Wextra || Wpedantic)Warn if \"defined\" is used outside #if.
Wexpansion-to-definedUrlSuffix(gcc/Warning-Options.html#index-Wexpansion-to-defined)
Wexternal-argument-mismatchFortran Var(warn_external_argument_mismatch) Warning LangEnabledBy(Fortran,Wall || fc-prototypes-external)Warn when arguments of external procedures do not match.
Wexternal-argument-mismatchLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wexternal-argument-mismatch)
WextraC ObjC C++ ObjC++ Warning
WextraCommon Var(extra_warnings) WarningPrint extra (possibly unwanted) warnings.
WextraD Warning
WextraFortran Warning
WextraUrlSuffix(gcc/Warning-Options.html#index-Wextra) LangUrlSuffix_D(gdc/Warnings.html#index-Wextra) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wextra)
WextraUrlSuffix(gcc/Warning-Options.html#index-Wextra) LangUrlSuffix_D(gdc/Warnings.html#index-Wextra) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wextra)
WextraUrlSuffix(gcc/Warning-Options.html#index-Wextra) LangUrlSuffix_D(gdc/Warnings.html#index-Wextra) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wextra)
WextraUrlSuffix(gcc/Warning-Options.html#index-Wextra) LangUrlSuffix_D(gdc/Warnings.html#index-Wextra) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wextra)
Wextra-semiC++ ObjC++ Var(warn_extra_semi) Init(-1) WarningWarn about semicolon after in-class function definition.
Wextra-semiUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wextra-semi)
Wfatal-errorsCommon Var(flag_fatal_errors)Exit on the first error occurred.
Wfatal-errorsUrlSuffix(gcc/Warning-Options.html#index-Wfatal-errors)
Wflex-array-member-not-at-endC C++ Var(warn_flex_array_member_not_at_end) WarningWarn when a structure containing a C99 flexible array member as the lastfield is not at the end of another structure.
Wflex-array-member-not-at-endUrlSuffix(gcc/Warning-Options.html#index-Wflex-array-member-not-at-end)
Wfloat-conversionC ObjC C++ ObjC++ Var(warn_float_conversion) Warning LangEnabledBy(C ObjC C++ ObjC++,Wconversion)Warn for implicit type conversions that cause loss of floating point precision.
Wfloat-conversionUrlSuffix(gcc/Warning-Options.html#index-Wfloat-conversion)
Wfloat-equalC ObjC C++ ObjC++ Var(warn_float_equal) WarningWarn if testing floating point numbers for equality.
Wfloat-equalUrlSuffix(gcc/Warning-Options.html#index-Wfloat-equal)
WformatC ObjC C++ ObjC++ Warning Alias(Wformat=, 1, 0)Warn about printf/scanf/strftime/strfmon format string anomalies.
WformatUrlSuffix(gcc/Warning-Options.html#index-Wformat)
Wformat-contains-nulC ObjC C++ ObjC++ Var(warn_format_contains_nul) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0)Warn about format strings that contain NUL bytes.
Wformat-contains-nulUrlSuffix(gcc/Warning-Options.html#index-Wformat-contains-nul)
Wformat-diagC ObjC C++ ObjC++ Var(warn_format_diag) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0)Warn about GCC format strings with strings unsuitable for diagnostics.
Wformat-extra-argsC ObjC C++ ObjC++ Var(warn_format_extra_args) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0)Warn if passing too many arguments to a function for its format string.
Wformat-extra-argsUrlSuffix(gcc/Warning-Options.html#index-Wformat-extra-args)
Wformat-nonliteralC ObjC C++ ObjC++ Var(warn_format_nonliteral) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 2, 0)Warn about format strings that are not literals.
Wformat-nonliteralUrlSuffix(gcc/Warning-Options.html#index-Wformat-nonliteral)
Wformat-overflowC ObjC C++ LTO ObjC++ Warning Alias(Wformat-overflow=, 1, 0) IntegerRange(0, 2)Warn about function calls with format strings that write past the endof the destination region.  Same as -Wformat-overflow=1.
Wformat-overflowUrlSuffix(gcc/Warning-Options.html#index-Wformat-overflow)
Wformat-overflow=C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_format_overflow) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)Warn about function calls with format strings that write past the endof the destination region.
Wformat-overflow=UrlSuffix(gcc/Warning-Options.html#index-Wformat-overflow)
Wformat-securityC ObjC C++ ObjC++ Var(warn_format_security) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 2, 0)Warn about possible security problems with format functions.
Wformat-securityUrlSuffix(gcc/Warning-Options.html#index-Wformat-security)
Wformat-signednessC ObjC C++ ObjC++ Var(warn_format_signedness) WarningWarn about sign differences with format functions.
Wformat-signednessUrlSuffix(gcc/Warning-Options.html#index-Wformat-signedness)
Wformat-truncationC ObjC C++ LTO ObjC++ Warning Alias(Wformat-truncation=, 1, 0)Warn about calls to snprintf and similar functions that truncate output.Same as -Wformat-truncation=1.
Wformat-truncationUrlSuffix(gcc/Warning-Options.html#index-Wformat-truncation)
Wformat-truncation=C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_format_trunc) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)Warn about calls to snprintf and similar functions that truncate output.
Wformat-truncation=UrlSuffix(gcc/Warning-Options.html#index-Wformat-truncation)
Wformat-y2kC ObjC C++ ObjC++ Var(warn_format_y2k) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 2, 0)Warn about strftime formats yielding 2-digit years.
Wformat-y2kUrlSuffix(gcc/Warning-Options.html#index-Wformat-y2k)
Wformat-zero-lengthC ObjC C++ ObjC++ Var(warn_format_zero_length) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 1, 0)Warn about zero-length formats.
Wformat-zero-lengthUrlSuffix(gcc/Warning-Options.html#index-Wformat-zero-length)
Wformat=C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_format) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0) IntegerRange(0, 2)Warn about printf/scanf/strftime/strfmon format string anomalies.
Wformat=UrlSuffix(gcc/Warning-Options.html#index-Wformat)
Wframe-addressC ObjC C++ ObjC++ Var(warn_frame_address) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn when __builtin_frame_address or __builtin_return_address is used unsafely.
Wframe-addressUrlSuffix(gcc/Warning-Options.html#index-Wframe-address)
Wframe-larger-than=Common RejectNegative Joined Host_Wide_Int ByteSize Warning Var(warn_frame_larger_than_size) Init(HOST_WIDE_INT_MAX)-Wframe-larger-than=<byte-size>	Warn if a function's stack frame requires in excess of <byte-size>.
Wframe-larger-than=UrlSuffix(gcc/Warning-Options.html#index-Wframe-larger-than_003d)
Wfree-labelsC ObjC Var(warn_free_labels) Init(-1) WarningWarn about labels on declarations and at the end of compound statements.
Wfree-labelsUrlSuffix(gcc/Warning-Options.html#index-Wfree-labels)
Wfree-nonheap-objectCommon Var(warn_free_nonheap_object) Init(1) WarningWarn when attempting to free a non-heap object.
Wfree-nonheap-objectUrlSuffix(gcc/Warning-Options.html#index-Wfree-nonheap-object)
Wfrontend-loop-interchangeFortran Var(flag_warn_frontend_loop_interchange)Warn if loops have been interchanged.
Wfrontend-loop-interchangeLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wfrontend-loop-interchange)
Wfunction-eliminationFortran Warning Var(warn_function_elimination) LangEnabledBy(Fortran,Wextra)Warn about function call elimination.
Wfunction-eliminationLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wfunction-elimination)
Wglobal-moduleC++ ObjC++ Var(warn_global_module) Warning Init(1)Warn about the global module fragment not containing only preprocessing directives.
Wglobal-moduleUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wglobal-module)
WhardenedCommon Var(warn_hardened) Init(1) WarningWarn when -fhardened did not enable an option from its set.
WhardenedUrlSuffix(gcc/Warning-Options.html#index-Whardened)
Wheader-guardC ObjC C++ ObjC++ CPP(warn_header_guard) CppReason(CPP_W_HEADER_GUARD) Var(cpp_warn_header_guard) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn when #ifndef of a header guard is followed by #define of a different macro with the header guard macro not defined at the end of header.
Wheader-guardUrlSuffix(gcc/Warning-Options.html#index-Wheader-guard)
WhsaCommon Ignore WarningDoes nothing.  Preserved for backward compatibility.
Wif-not-alignedC ObjC C++ ObjC++ Var(warn_if_not_aligned) Init(1) WarningWarn when the field in a struct is not aligned.
Wif-not-alignedUrlSuffix(gcc/Warning-Options.html#index-Wif-not-aligned)
Wignored-attributesC C++ Var(warn_ignored_attributes) Init(1) WarningWarn whenever attributes are ignored.
Wignored-attributesUrlSuffix(gcc/Warning-Options.html#index-Wignored-attributes)
Wignored-qualifiersC C++ Var(warn_ignored_qualifiers) Warning EnabledBy(Wextra)Warn whenever type qualifiers are ignored.
Wignored-qualifiersUrlSuffix(gcc/Warning-Options.html#index-Wignored-qualifiers)
WimplicitC ObjC Var(warn_implicit) Warning LangEnabledBy(C ObjC,Wall)Warn about implicit declarations.
WimplicitUrlSuffix(gcc/Warning-Options.html#index-Wimplicit)
Wimplicit-fallthroughCommon Alias(Wimplicit-fallthrough=,3,0) Warning
Wimplicit-fallthroughUrlSuffix(gcc/Warning-Options.html#index-Wimplicit-fallthrough)
Wimplicit-fallthrough=Common Var(warn_implicit_fallthrough) RejectNegative Joined UInteger Warning IntegerRange(0, 5)Warn when a switch case falls through.
Wimplicit-fallthrough=LangEnabledBy(C ObjC C++ ObjC++,Wextra,3,0)
Wimplicit-fallthrough=UrlSuffix(gcc/Warning-Options.html#index-Wimplicit-fallthrough)
Wimplicit-fallthrough=UrlSuffix(gcc/Warning-Options.html#index-Wimplicit-fallthrough)
Wimplicit-function-declarationC ObjC Var(warn_implicit_function_declaration) Init(-1) Warning LangEnabledBy(C ObjC,Wimplicit)Warn about implicit function declarations.
Wimplicit-function-declarationUrlSuffix(gcc/Warning-Options.html#index-Wimplicit-function-declaration)
Wimplicit-intC ObjC Var(warn_implicit_int) Init(-1) Warning LangEnabledBy(C ObjC,Wimplicit)Warn when a declaration does not specify a type.
Wimplicit-intUrlSuffix(gcc/Warning-Options.html#index-Wimplicit-int)
Wimplicit-interfaceFortran Warning Var(warn_implicit_interface)Warn about calls with implicit interface.
Wimplicit-interfaceLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wimplicit-interface)
Wimplicit-procedureFortran Warning Var(warn_implicit_procedure)Warn about called procedures not explicitly declared.
Wimplicit-procedureLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wimplicit-procedure)
WimportC ObjC C++ ObjC++ Undocumented Ignore
Winaccessible-baseC++ ObjC++ Var(warn_inaccessible_base) Init(1) WarningWarn when a base is inaccessible in derived due to ambiguity.
Winaccessible-baseUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winaccessible-base)
Wincompatible-pointer-typesC ObjC Var(warn_incompatible_pointer_types) Init(1) WarningWarn when there is a conversion between pointers that have incompatible types.
Wincompatible-pointer-typesUrlSuffix(gcc/Warning-Options.html#index-Wincompatible-pointer-types)
Winfinite-recursionC ObjC C++ LTO ObjC++ Var(warn_infinite_recursion) Warning LangEnabledBy(C ObjC C++ LTO ObjC++, Wall)Warn for infinitely recursive calls.
Winfinite-recursionRust Var(warn_infinite_recursion) WarningWarn for infinitely recursive calls.
Winfinite-recursionUrlSuffix(gcc/Warning-Options.html#index-Winfinite-recursion)
Winfinite-recursionUrlSuffix(gcc/Warning-Options.html#index-Winfinite-recursion)
Winfinite-recursionUrlSuffix(gcc/Warning-Options.html#index-Winfinite-recursion)
Winfinite-recursionVar(warn_infinite_recursion) WarningWarn for infinitely recursive calls.
Winherited-variadic-ctorC++ ObjC++ Var(warn_inh_var_ctor) Init(1) WarningWarn about C++11 inheriting constructors when the base has a variadic constructor.
Winherited-variadic-ctorUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winherited-variadic-ctor)
Winit-list-lifetimeC++ ObjC++ Var(warn_init_list) Warning Init(1)Warn about uses of std::initializer_list that can result in dangling pointers.
Winit-list-lifetimeUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winit-list-lifetime)
Winit-selfC ObjC C++ ObjC++ Var(warn_init_self) Warning LangEnabledBy(C++ ObjC++,Wall)Warn about variables which are initialized to themselves.
Winit-selfUrlSuffix(gcc/Warning-Options.html#index-Winit-self)
WinlineCommon Var(warn_inline) Warning OptimizationWarn when an inlined function cannot be inlined.
Wint-conversionC ObjC Var(warn_int_conversion) Init(1) WarningWarn about incompatible integer to pointer and pointer to integer conversions.
Wint-conversionUrlSuffix(gcc/Warning-Options.html#index-Wint-conversion)
Wint-in-bool-contextC ObjC C++ ObjC++ Var(warn_int_in_bool_context) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn for suspicious integer expressions in boolean context.
Wint-in-bool-contextUrlSuffix(gcc/Warning-Options.html#index-Wint-in-bool-context)
Wint-to-pointer-castC ObjC C++ ObjC++ Var(warn_int_to_pointer_cast) Init(1) WarningWarn when there is a cast to a pointer from an integer of a different size.
Wint-to-pointer-castUrlSuffix(gcc/Warning-Options.html#index-Wint-to-pointer-cast)
Winteger-divisionFortran Warning Var(warn_integer_division) LangEnabledBy(Fortran,Wall)Warn about constant integer divisions with truncated results.
Winteger-divisionLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Winteger-division)
Winterference-sizeC++ ObjC++ Var(warn_interference_size) Warning Init(1)Warn about nonsensical values of --param destructive-interference-size orconstructive-interference-size.
Winterference-sizeUrlSuffix(gcc/Warning-Options.html#index-Winterference-size)
Wintrinsic-shadowFortran Warning Var(warn_intrinsic_shadow) LangEnabledBy(Fortran,Wall)Warn if a user-procedure has the same name as an intrinsic.
Wintrinsic-shadowLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wintrinsic-shadow)
Wintrinsics-stdFortran Var(warn_intrinsics_std) Warning LangEnabledBy(Fortran,Wall)Warn on intrinsics not part of the selected standard.
Wintrinsics-stdLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wintrinsics-std)
Winvalid-constexprC++ ObjC++ Var(warn_invalid_constexpr) Init(-1) WarningWarn when a function never produces a constant expression.
Winvalid-constexprUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winvalid-constexpr)
Winvalid-imported-macrosC++ ObjC++ Var(warn_imported_macros) WarningWarn about macros that have conflicting header units definitions.
Winvalid-imported-macrosUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winvalid-imported-macros)
Winvalid-memory-modelCommon Var(warn_invalid_memory_model) Init(1) WarningWarn when an atomic memory model parameter is known to be outside the valid range.
Winvalid-memory-modelUrlSuffix(gcc/Warning-Options.html#index-Winvalid-memory-model)
Winvalid-offsetofC++ ObjC++ Var(warn_invalid_offsetof) Init(1) WarningWarn about invalid uses of the \"offsetof\" macro.
Winvalid-offsetofUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Winvalid-offsetof)
Winvalid-pchC ObjC C++ ObjC++ CPP(warn_invalid_pch) CppReason(CPP_W_INVALID_PCH) Var(cpp_warn_invalid_pch) Init(0) WarningWarn about PCH files that are found but not used.
Winvalid-pchUrlSuffix(gcc/Warning-Options.html#index-Winvalid-pch)
Winvalid-utf8C ObjC C++ ObjC++ CPP(cpp_warn_invalid_utf8) CppReason(CPP_W_INVALID_UTF8) Var(warn_invalid_utf8) Init(0) WarningWarn about invalid UTF-8 characters.
Winvalid-utf8UrlSuffix(gcc/Warning-Options.html#index-Winvalid-utf8)
Wjump-misses-initC ObjC Var(warn_jump_misses_init) Warning LangEnabledby(C ObjC,Wc++-compat)Warn when a jump misses a variable initialization.
Wjump-misses-initUrlSuffix(gcc/Warning-Options.html#index-Wjump-misses-init)
Wl,Driver JoinedOrMissing RejectNegative
Wlarger-than-Common RejectNegative Joined Warning Undocumented Alias(Wlarger-than=)
Wlarger-than=Common RejectNegative Joined Host_Wide_Int ByteSize Warning Var(warn_larger_than_size) Init(HOST_WIDE_INT_MAX)-Wlarger-than=<byte-size>	Warn if an object's size exceeds <byte-size>.
Wlarger-than=UrlSuffix(gcc/Warning-Options.html#index-Wlarger-than_003d)
Wleading-whitespace=C ObjC C++ ObjC++ CPP(cpp_warn_leading_whitespace) CppReason(CPP_W_LEADING_WHITESPACE) Enum(warn_leading_whitespace_kind) Joined RejectNegative Var(warn_leading_whitespace) Init(0) WarningWarn about leading whitespace style issues on lines except when in raw string literals.
Wleading-whitespace=UrlSuffix(gcc/Warning-Options.html#index-Wleading-whitespace_003d)
Wline-truncationFortran Warning Var(warn_line_truncation) LangEnabledBy(Fortran,Wall) Init(-1)Warn about truncated source lines.
Wline-truncationLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wline-truncation)
Wliteral-suffixC++ ObjC++ CPP(warn_literal_suffix) CppReason(CPP_W_LITERAL_SUFFIX) Var(cpp_warn_literal_suffix) Init(1) WarningWarn when a string or character literal is followed by a ud-suffix which does not begin with an underscore.
Wliteral-suffixUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wliteral-suffix)
Wlogical-not-parenthesesC ObjC C++ ObjC++ Var(warn_logical_not_paren) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn when logical not is used on the left hand side operand of a comparison.
Wlogical-not-parenthesesUrlSuffix(gcc/Warning-Options.html#index-Wlogical-not-parentheses)
Wlogical-opC ObjC C++ ObjC++ Var(warn_logical_op) Init(0) WarningWarn when a logical operator is suspiciously always evaluating to true or false.
Wlogical-opUrlSuffix(gcc/Warning-Options.html#index-Wlogical-op)
Wlong-longC ObjC C++ ObjC++ CPP(cpp_warn_long_long) CppReason(CPP_W_LONG_LONG) Var(warn_long_long) Init(-1) Warning LangEnabledBy(C ObjC,Wc90-c99-compat)Do not warn about using \"long long\" when -pedantic.
Wlong-longUrlSuffix(gcc/Warning-Options.html#index-Wlong-long)
Wlto-type-mismatchCommon Var(warn_lto_type_mismatch) Init(1) WarningDuring link time optimization warn about mismatched types of global declarations.
Wlto-type-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wlto-type-mismatch)
WmainC ObjC C++ ObjC++ Var(warn_main) Init(-1) Warning LangEnabledBy(C ObjC,Wall, 2, 0)Warn about suspicious declarations of \"main\".
WmainLangEnabledBy(C ObjC C++ ObjC++,Wpedantic, 2, 0)
WmainUrlSuffix(gcc/Warning-Options.html#index-Wmain)
WmainUrlSuffix(gcc/Warning-Options.html#index-Wmain)
Wmaybe-uninitializedC ObjC C++ ObjC++ LTO LangEnabledBy(C ObjC C++ ObjC++ LTO,Wall)
Wmaybe-uninitializedCommon Var(warn_maybe_uninitialized) Warning EnabledBy(Wuninitialized)Warn about maybe uninitialized automatic variables.
Wmaybe-uninitializedFortran LangEnabledBy(Fortran,Wall)
Wmaybe-uninitializedUrlSuffix(gcc/Warning-Options.html#index-Wmaybe-uninitialized)
Wmaybe-uninitializedUrlSuffix(gcc/Warning-Options.html#index-Wmaybe-uninitialized)
Wmaybe-uninitializedUrlSuffix(gcc/Warning-Options.html#index-Wmaybe-uninitialized)
Wmemset-elt-sizeC ObjC C++ ObjC++ Var(warn_memset_elt_size) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about suspicious calls to memset where the third argument contains the number of elements not multiplied by the element size.
Wmemset-elt-sizeUrlSuffix(gcc/Warning-Options.html#index-Wmemset-elt-size)
Wmemset-transposed-argsC ObjC C++ ObjC++ Var(warn_memset_transposed_args) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about suspicious calls to memset where the third argument is constant literal zero and the second is not.
Wmemset-transposed-argsUrlSuffix(gcc/Warning-Options.html#index-Wmemset-transposed-args)
Wmisleading-indentationC C++ Common Var(warn_misleading_indentation) Warning LangEnabledBy(C C++,Wall)Warn when the indentation of the code does not reflect the block structure.
Wmisleading-indentationUrlSuffix(gcc/Warning-Options.html#index-Wmisleading-indentation)
Wmismatched-deallocC ObjC C++ ObjC++ Var(warn_mismatched_alloc) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn for deallocation calls with arguments returned from mismatched allocationfunctions.
Wmismatched-deallocUrlSuffix(gcc/Warning-Options.html#index-Wmismatched-dealloc)
Wmismatched-new-deleteC++ ObjC++ Var(warn_mismatched_new_delete) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn for mismatches between calls to operator new or delete and the correspondingcall to the allocation or deallocation function.
Wmismatched-new-deleteUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wmismatched-new-delete)
Wmismatched-special-enumD Warning Var(warn_mismatched_special_enum) LangEnabledBy(D, Wextra)Warn when a special enum is declared with the wrong base type.
Wmismatched-special-enumLangUrlSuffix_D(gdc/Warnings.html#index-Wmismatched-special-enum)
Wmismatched-tagsC++ ObjC++ Var(warn_mismatched_tags) WarningWarn when a class is redeclared or referenced using a mismatched class-key.
Wmismatched-tagsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wmismatched-tags)
Wmissing-attributesC ObjC C++ ObjC++ Var(warn_missing_attributes) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about declarations of entities that may be missing attributesthat related entities have been declared with.
Wmissing-attributesUrlSuffix(gcc/Warning-Options.html#index-Wmissing-attributes)
Wmissing-bracesC ObjC C++ ObjC++ Var(warn_missing_braces) Warning LangEnabledBy(C ObjC,Wall)Warn about possibly missing braces around initializers.
Wmissing-bracesUrlSuffix(gcc/Warning-Options.html#index-Wmissing-braces)
Wmissing-declarationsC ObjC C++ ObjC++ Var(warn_missing_declarations) WarningWarn about global functions without previous declarations.
Wmissing-declarationsUrlSuffix(gcc/Warning-Options.html#index-Wmissing-declarations)
Wmissing-field-initializersC ObjC C++ ObjC++ Var(warn_missing_field_initializers) Warning EnabledBy(Wextra)Warn about missing fields in struct initializers.
Wmissing-field-initializersUrlSuffix(gcc/Warning-Options.html#index-Wmissing-field-initializers)
Wmissing-format-attributeC ObjC C++ ObjC++ Warning Alias(Wsuggest-attribute=format)
Wmissing-format-attributeUrlSuffix(gcc/Warning-Options.html#index-Wmissing-format-attribute)
Wmissing-include-dirsC ObjC C++ ObjC++ CPP(warn_missing_include_dirs) CppReason(CPP_W_MISSING_INCLUDE_DIRS) Var(cpp_warn_missing_include_dirs) Init(0) WarningWarn about user-specified include directories that do not exist.
Wmissing-include-dirsFortran
Wmissing-include-dirsUrlSuffix(gcc/Warning-Options.html#index-Wmissing-include-dirs)
Wmissing-include-dirsUrlSuffix(gcc/Warning-Options.html#index-Wmissing-include-dirs)
Wmissing-noreturnCommon Warning Alias(Wsuggest-attribute=noreturn)
Wmissing-noreturnUrlSuffix(gcc/Warning-Options.html#index-Wmissing-noreturn)
Wmissing-parameter-nameC ObjC Var(warn_missing_parameter_name) Init(-1) WarningWarn about function definitions omitting parameter names.
Wmissing-parameter-nameUrlSuffix(gcc/Warning-Options.html#index-Wmissing-parameter-name)
Wmissing-parameter-typeC ObjC Var(warn_missing_parameter_type) Warning EnabledBy(Wextra)Warn about function parameters declared without a type specifier in K&R-style functions.
Wmissing-parameter-typeUrlSuffix(gcc/Warning-Options.html#index-Wmissing-parameter-type)
Wmissing-profileCommon Var(warn_missing_profile) Init(1) WarningWarn in case profiles in -fprofile-use do not exist.
Wmissing-profileUrlSuffix(gcc/Warning-Options.html#index-Wmissing-profile)
Wmissing-prototypesC ObjC Var(warn_missing_prototypes) WarningWarn about global functions without prototypes.
Wmissing-prototypesUrlSuffix(gcc/Warning-Options.html#index-Wmissing-prototypes)
Wmissing-requiresC++ ObjC++ Var(warn_missing_requires) Init(1) WarningWarn about likely missing requires keyword.
Wmissing-requiresUrlSuffix(gcc/Warning-Options.html#index-Wmissing-requires)
Wmissing-template-keywordC++ ObjC++ Var(warn_missing_template_keyword) Init(1) WarningWarn when the template keyword is missing after a member access token in a dependent member access expression if that member is a template.
Wmissing-template-keywordUrlSuffix(gcc/Warning-Options.html#index-Wmissing-template-keyword)
Wmissing-variable-declarationsC ObjC Var(warn_missing_variable_declarations) WarningWarn about global variables without previous declarations.
Wmissing-variable-declarationsUrlSuffix(gcc/Warning-Options.html#index-Wmissing-variable-declarations)
WmudflapC ObjC C++ ObjC++ WarnRemoved
WmulticharC ObjC C++ ObjC++ CPP(warn_multichar) CppReason(CPP_W_MULTICHAR) Var(cpp_warn_multichar) Init(0) WarningWarn about use of multi-character character constants.
WmulticharUrlSuffix(gcc/Warning-Options.html#index-Wmultichar)
Wmultiple-inheritanceC++ ObjC++ Var(warn_multiple_inheritance) WarningWarn on direct multiple inheritance.
Wmultiple-inheritanceUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wmultiple-inheritance)
Wmultistatement-macrosC ObjC C++ ObjC++ Var(warn_multistatement_macros) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about unsafe macros expanding to multiple statements used as a body of a clause such as if, else, while, switch, or for.
Wmultistatement-macrosUrlSuffix(gcc/Warning-Options.html#index-Wmultistatement-macros)
WnamespacesC++ ObjC++ Var(warn_namespaces) WarningWarn on namespace definition.
WnamespacesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wnamespaces)
WnarrowingC ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(-1) LangEnabledBy(C++ ObjC++,Wall || Wc++11-compat)Warn about narrowing conversions within { } that are ill-formed in C++11.
WnarrowingUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wnarrowing)
Wnested-externsC ObjC Var(warn_nested_externs) WarningWarn about \"extern\" declarations not at file scope.
Wnested-externsUrlSuffix(gcc/Warning-Options.html#index-Wnested-externs)
Wno-alloc-size-larger-thanC ObjC C++ LTO ObjC++ Alias(Walloc-size-larger-than=,18446744073709551615EiB,none) WarningDisable Walloc-size-larger-than= warning.  Equivalent to Walloc-size-larger-than=<SIZE_MAX> or larger.
Wno-alloca-larger-thanC ObjC C++ LTO ObjC++ Alias(Walloca-larger-than=,18446744073709551615EiB,none) WarningDisable Walloca-larger-than= warning.  Equivalent to Walloca-larger-than=<SIZE_MAX> or larger.
Wno-alloca-larger-thanD
Wno-frame-larger-thanCommon Alias(Wframe-larger-than=,18446744073709551615EiB,none) WarningDisable -Wframe-larger-than= warning.  Equivalent to -Wframe-larger-than=<SIZE_MAX> or larger.
Wno-larger-thanCommon Alias(Wlarger-than=,18446744073709551615EiB,none) WarningDisable -Wlarger-than= warning.  Equivalent to -Wlarger-than=<SIZE_MAX> or larger.
Wno-stack-usageCommon Alias(Wstack-usage=,18446744073709551615EiB,none) WarningDisable Wstack-usage= warning.  Equivalent to Wstack-usage=<SIZE_MAX> or larger.
Wno-vla-larger-thanC ObjC C++ LTO ObjC++ Alias(Wvla-larger-than=,18446744073709551615EiB,none) WarningDisable Wvla-larger-than= warning.  Equivalent to Wvla-larger-than=<SIZE_MAX> or larger.
WnoexceptC++ ObjC++ Var(warn_noexcept) WarningWarn when a noexcept expression evaluates to false even though the expression can't actually throw.
WnoexceptUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-noexcept)
Wnoexcept-typeC++ ObjC++ Warning Var(warn_noexcept_type) LangEnabledBy(C++ ObjC++,Wabi || Wc++17-compat)Warn if C++17 noexcept function type will change the mangled name of a symbol.
Wnoexcept-typeUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-noexcept-type)
Wnon-template-friendC++ ObjC++ Var(warn_nontemplate_friend) Init(1) WarningWarn when non-templatized friend functions are declared within a template.
Wnon-template-friendUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-non-template-friend)
Wnon-virtual-dtorC++ ObjC++ Var(warn_nonvdtor) Warning LangEnabledBy(C++ ObjC++,Weffc++)Warn about non-virtual destructors.
Wnon-virtual-dtorUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-non-virtual-dtor)
WnonnullC ObjC C++ LTO ObjC++ LangEnabledBy(C ObjC C++ LTO ObjC++,Wall)
WnonnullC ObjC C++ LTO ObjC++ Var(warn_nonnull) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=,warn_format >= 1,0)Warn about NULL being passed to argument slots marked as requiring non-NULL.
WnonnullUrlSuffix(gcc/Warning-Options.html#index-Wno-nonnull)
WnonnullUrlSuffix(gcc/Warning-Options.html#index-Wno-nonnull)
Wnonnull-compareC ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)
Wnonnull-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-nonnull-compare)
Wnonnull-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-nonnull-compare)
Wnonnull-compareVar(warn_nonnull_compare) WarningWarn if comparing pointer parameter with nonnull attribute with NULL.
WnormalizedC ObjC C++ ObjC++ Warning Alias(Wnormalized=,nfc,none)
WnormalizedUrlSuffix(gcc/Warning-Options.html#index-Wno-normalized)
Wnormalized=C ObjC C++ ObjC++ RejectNegative Joined Warning CPP(warn_normalize) CppReason(CPP_W_NORMALIZE) Init(normalized_C) Var(cpp_warn_normalize) Enum(cpp_normalize_level)-Wnormalized=[none|id|nfc|nfkc]	Warn about non-normalized Unicode strings.
Wnormalized=UrlSuffix(gcc/Warning-Options.html#index-Wno-normalized)
WnrvoC++ ObjC++ Var(warn_nrvo) WarningWarn if the named return value optimization is not performed although it is allowed.
WnrvoUrlSuffix(gcc/Warning-Options.html#index-Wno-nrvo)
Wnull-dereferenceCommon Var(warn_null_dereference) WarningWarn if dereferencing a NULL pointer may lead to erroneous or undefined behavior.
Wnull-dereferenceUrlSuffix(gcc/Warning-Options.html#index-Wno-null-dereference)
Wobjc-root-classObjC ObjC++ Var(warn_objc_root_class) Warning Init(1)Warn if a class interface has no superclass.  Root classes may use an attributeto suppress this warning.
Wobjc-root-classUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wobjc-root-class)
WodrCommon Var(warn_odr_violations) Init(1) WarningWarn about some C++ One Definition Rule violations during link time optimization.
WodrUrlSuffix(gcc/Warning-Options.html#index-Wno-odr)
Wold-style-castC++ ObjC++ Var(warn_old_style_cast) WarningWarn if a C-style cast is used in a program.
Wold-style-castUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-old-style-cast)
Wold-style-declarationC ObjC Var(warn_old_style_declaration) Warning EnabledBy(Wextra)Warn for obsolescent usage in a declaration.
Wold-style-declarationUrlSuffix(gcc/Warning-Options.html#index-Wno-old-style-declaration)
Wold-style-definitionC ObjC Var(warn_old_style_definition) Init(-1) WarningWarn if an old-style parameter definition is used.
Wold-style-definitionUrlSuffix(gcc/Warning-Options.html#index-Wno-old-style-definition)
Wopenacc-parallelismC C++ Var(warn_openacc_parallelism) WarningWarn about potentially suboptimal choices related to OpenACC parallelism.
Wopenacc-parallelismFortran
Wopenacc-parallelismUrlSuffix(gcc/Warning-Options.html#index-Wno-openacc-parallelism)
Wopenacc-parallelismUrlSuffix(gcc/Warning-Options.html#index-Wno-openacc-parallelism)
WopenmpC ObjC C++ ObjC++ Warning Var(warn_openmp) Init(1)Warn about suspicious OpenMP code.
WopenmpFortran
WopenmpUrlSuffix(gcc/Warning-Options.html#index-Wno-openmp)
WopenmpUrlSuffix(gcc/Warning-Options.html#index-Wno-openmp)
Wopenmp-simdC C++ Var(warn_openmp_simd) Warning LangEnabledBy(C C++,Wall)Warn if a simd directive is overridden by the vectorizer cost model.
Wopenmp-simdFortran
Wopenmp-simdUrlSuffix(gcc/Warning-Options.html#index-Wno-openmp-simd)
Wopenmp-simdUrlSuffix(gcc/Warning-Options.html#index-Wno-openmp-simd)
WoverflowCommon Var(warn_overflow) Init(1) WarningWarn about overflow in arithmetic expressions.
WoverflowUrlSuffix(gcc/Warning-Options.html#index-Wno-overflow)
Woverlength-stringsC ObjC C++ ObjC++ Var(warn_overlength_strings) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)Warn if a string is longer than the maximum portable length specified by the standard.
Woverlength-stringsUrlSuffix(gcc/Warning-Options.html#index-Wno-overlength-strings)
Woverloaded-virtualC++ ObjC++ Warning Alias(Woverloaded-virtual=,2,0)Warn about overloaded virtual function names.
Woverloaded-virtualUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-overloaded-virtual)
Woverloaded-virtual=C++ ObjC++ Joined UInteger IntegerRange(0,2) Var(warn_overloaded_virtual) Warning LangEnabledBy(C++ ObjC++,Wall,1,0)Warn about overloaded virtual function names.
Woverloaded-virtual=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-overloaded-virtual)
Woverride-initC ObjC Var(warn_override_init) Warning EnabledBy(Wextra)Warn about overriding initializers without side effects.
Woverride-initUrlSuffix(gcc/Warning-Options.html#index-Wno-override-init)
Woverride-init-side-effectsC ObjC Var(warn_override_init_side_effects) Init(1) WarningWarn about overriding initializers with side effects.
Woverride-init-side-effectsUrlSuffix(gcc/Warning-Options.html#index-Wno-override-init-side-effects)
Woverwrite-recursiveFortran Warning Var(warn_overwrite_recursive) Init(1)Warn that -fno-automatic may break recursion.
Woverwrite-recursiveLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Woverwrite-recursive)
Wp,Driver JoinedOrMissing RejectNegative
WpackedCommon Var(warn_packed) WarningWarn when the packed attribute has no effect on struct layout.
WpackedUrlSuffix(gcc/Warning-Options.html#index-Wno-packed)
Wpacked-bitfield-compatC ObjC C++ ObjC++ Var(warn_packed_bitfield_compat) Init(-1) WarningWarn about packed bit-fields whose offset changed in GCC 4.4.
Wpacked-bitfield-compatUrlSuffix(gcc/Warning-Options.html#index-Wno-packed-bitfield-compat)
Wpacked-not-alignedC ObjC C++ ObjC++ Var(warn_packed_not_aligned) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn when fields in a struct with the packed attribute are misaligned.
Wpacked-not-alignedUrlSuffix(gcc/Warning-Options.html#index-Wno-packed-not-aligned)
WpaddedCommon Var(warn_padded) WarningWarn when padding is required to align structure members.
WpaddedUrlSuffix(gcc/Warning-Options.html#index-Wno-padded)
WparenthesesC ObjC C++ ObjC++ Var(warn_parentheses) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about possibly missing parentheses.
WparenthesesUrlSuffix(gcc/Warning-Options.html#index-Wno-parentheses)
WpedanticC ObjC C++ ObjC++ CPP(cpp_pedantic) CppReason(CPP_W_PEDANTIC) Warning
WpedanticCommon Var(pedantic) Init(0) WarningIssue warnings needed for strict compliance to the standard.
WpedanticFortran
WpedanticModula-2
WpedanticUrlSuffix(gcc/Warning-Options.html#index-Wno-pedantic) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wpedantic)
WpedanticUrlSuffix(gcc/Warning-Options.html#index-Wno-pedantic) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wpedantic)
WpedanticUrlSuffix(gcc/Warning-Options.html#index-Wno-pedantic) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wpedantic)
WpedanticUrlSuffix(gcc/Warning-Options.html#index-Wno-pedantic) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wpedantic)
Wpedantic-castModula-2compiler warns if a cast is being used on types of differing sizes
Wpedantic-param-namesModula-2compiler checks to force definition module procedure parameter names with their implementation module counterpart
Wpessimizing-moveC++ ObjC++ Var(warn_pessimizing_move) Warning LangEnabledBy(C++ ObjC++, Wall)Warn about calling std::move on a local object in a return statement preventing copy elision.
Wpessimizing-moveUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-pessimizing-move)
Wplacement-newC++ Warning Alias(Wplacement-new=, 1, 0)Warn for placement new expressions with undefined behavior.
Wplacement-newUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-placement-new)
Wplacement-new=C++ Joined RejectNegative UInteger Var(warn_placement_new) Init(-1) Warning IntegerRange(0, 2)Warn for placement new expressions with undefined behavior.
Wplacement-new=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-placement-new)
Wpmf-conversionsC++ ObjC++ Var(warn_pmf2ptr) Init(1) WarningWarn when converting the type of pointers to member functions.
Wpointer-arithC ObjC C++ ObjC++ Var(warn_pointer_arith) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)Warn about function pointer arithmetic.
Wpointer-compareC ObjC C++ ObjC++ Var(warn_pointer_compare) Init(1) WarningWarn when a pointer is compared with a zero character constant.
Wpointer-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-pointer-compare)
Wpointer-signC ObjC Var(warn_pointer_sign) Warning LangEnabledBy(C ObjC,Wall || Wpedantic)Warn when a pointer differs in signedness in an assignment.
Wpointer-signUrlSuffix(gcc/Warning-Options.html#index-Wno-pointer-sign)
Wpointer-to-int-castC ObjC Var(warn_pointer_to_int_cast) Init(1) WarningWarn when a pointer is cast to an integer of a different size.
Wpointer-to-int-castUrlSuffix(gcc/Warning-Options.html#index-Wno-pointer-to-int-cast)
Wpragma-once-outside-headerC ObjC C++ ObjC++ Var(warn_pragma_once_outside_header) CppReason(CPP_W_PRAGMA_ONCE_OUTSIDE_HEADER) Init(1) WarningWarn about #pragma once outside of a header.
Wpragma-once-outside-headerUrlSuffix(gcc/Warning-Options.html#index-Wno-pragma-once-outside-header)
WpragmasC ObjC C++ ObjC++ Var(warn_pragmas) Init(1) WarningWarn about misuses of pragmas.
WpragmasUrlSuffix(gcc/Warning-Options.html#index-Wno-pragmas)
Wprio-ctor-dtorC ObjC C++ ObjC++ Var(warn_prio_ctor_dtor) Init(1) WarningWarn if constructor or destructors with priorities from 0 to 100 are used.
Wprio-ctor-dtorUrlSuffix(gcc/Warning-Options.html#index-Wno-prio-ctor-dtor)
Wproperty-assign-defaultObjC ObjC++ Var(warn_property_assign_default) Init(1) WarningWarn if a property for an Objective-C object has no assign semantics specified.
Wproperty-assign-defaultUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wno-property-assign-default)
WprotocolObjC ObjC++ Var(warn_protocol) Init(1) WarningWarn if inherited methods are unimplemented.
WprotocolUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wno-protocol)
WpsabiC ObjC C++ ObjC++ LTO Var(warn_psabi) Init(1) Warning Undocumented LangEnabledBy(C ObjC C++ ObjC++,Wabi)
WpsabiD
Wrange-loop-constructC++ ObjC++ Var(warn_range_loop_construct) Warning LangEnabledBy(C++ ObjC++,Wall)Warn when a range-based for-loop is creating unnecessary copies.
Wrange-loop-constructUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-range-loop-construct)
Wreal-q-constantFortran Warning Var(warn_real_q_constant) LangEnabledBy(Fortran,Wall)Warn about real-literal-constants with 'q' exponent-letter.
Wreal-q-constantLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wreal-q-constant)
Wrealloc-lhsFortran Warning Var(warn_realloc_lhs) LangEnabledBy(Fortran,Wrealloc-lhs-all)Warn when a left-hand-side array variable is reallocated.
Wrealloc-lhsLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wrealloc-lhs)
Wrealloc-lhs-allFortran Warning Var(warn_realloc_lhs_all)Warn when a left-hand-side variable is reallocated.
Wrealloc-lhs-allLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wrealloc-lhs-all)
Wredundant-declsC ObjC C++ ObjC++ Var(warn_redundant_decls) WarningWarn about multiple declarations of the same object.
Wredundant-declsUrlSuffix(gcc/Warning-Options.html#index-Wno-redundant-decls)
Wredundant-moveC++ ObjC++ Var(warn_redundant_move) Warning LangEnabledBy(C++ ObjC++,Wextra)Warn about redundant calls to std::move.
Wredundant-moveUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-redundant-move)
Wredundant-tagsC++ ObjC++ Var(warn_redundant_tags) WarningWarn when a class or enumerated type is referenced using a redundant class-key.
Wredundant-tagsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-redundant-tags)
WregisterC++ ObjC++ Var(warn_register) WarningWarn about uses of register storage specifier.
WregisterUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-register)
WreorderC++ ObjC++ Var(warn_reorder) Warning LangEnabledBy(C++ ObjC++,Wall)Warn when the compiler reorders code.
WreorderUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-reorder)
WrestrictC ObjC C++ ObjC++ Var(warn_restrict) Warning LangEnabledBy(C ObjC C++ ObjC++, Wall)Warn when an argument passed to a restrict-qualified parameter aliases withanother argument.
WrestrictUrlSuffix(gcc/Warning-Options.html#index-Wno-restrict)
Wreturn-local-addrCommon Var(warn_return_local_addr) Init(1) WarningWarn about returning a pointer/reference to a local or temporary variable.
Wreturn-local-addrUrlSuffix(gcc/Warning-Options.html#index-Wno-return-local-addr)
Wreturn-mismatchC ObjC Var(warn_return_mismatch) Warning Init(1)Warn whenever void-returning functions return a non-void expressions, or a return expression is missing in a function not returning void.
Wreturn-mismatchUrlSuffix(gcc/Warning-Options.html#index-Wno-return-mismatch)
Wreturn-typeC ObjC C++ ObjC++ Var(warn_return_type) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall) Init(-1)Warn whenever a function's return type defaults to \"int\" (C), or about inconsistent return types (C++).
Wreturn-typeFortran Warning LangEnabledBy(Fortran,Wall)
Wreturn-typeModula-2
Wreturn-typeUrlSuffix(gcc/Warning-Options.html#index-Wno-return-type)
Wreturn-typeUrlSuffix(gcc/Warning-Options.html#index-Wno-return-type)
Wreturn-typeUrlSuffix(gcc/Warning-Options.html#index-Wno-return-type)
Wscalar-storage-orderC ObjC C++ ObjC++ Var(warn_scalar_storage_order) Init(1) WarningWarn on suspicious constructs involving reverse scalar storage order.
Wscalar-storage-orderUrlSuffix(gcc/Warning-Options.html#index-Wno-scalar-storage-order)
WselectorObjC ObjC++ Var(warn_selector) WarningWarn if a selector has multiple methods.
WselectorUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wno-selector)
Wself-moveC++ ObjC++ Var(warn_self_move) Warning LangEnabledBy(C++ ObjC++, Wall)Warn when a value is moved to itself with std::move.
Wself-moveUrlSuffix(gcc/Warning-Options.html#index-Wno-self-move)
Wsequence-pointC ObjC C++ ObjC++ Var(warn_sequence_point) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about possible violations of sequence point rules.
Wsequence-pointUrlSuffix(gcc/Warning-Options.html#index-Wno-sequence-point)
WshadowCommon Var(warn_shadow) WarningWarn when one variable shadows another.  Same as -Wshadow=global.
WshadowUrlSuffix(gcc/Warning-Options.html#index-Wno-shadow)
Wshadow-compatible-localCommon Warning Undocumented Alias(Wshadow=compatible-local)
Wshadow-ivarObjC ObjC++ Var(warn_shadow_ivar) EnabledBy(Wshadow) Init(1) WarningWarn if a local declaration hides an instance variable.
Wshadow-ivarUrlSuffix(gcc/Warning-Options.html#index-Wno-shadow-ivar)
Wshadow-localCommon Warning Undocumented Alias(Wshadow=local)
Wshadow=compatible-localCommon Var(warn_shadow_compatible_local) Warning EnabledBy(Wshadow=local)Warn when one local variable shadows another local variable or parameter of compatible type.
Wshadow=compatible-localUrlSuffix(gcc/Warning-Options.html#index-Wshadow_003dcompatible-local)
Wshadow=globalCommon Warning Alias(Wshadow)Warn when one variable shadows another (globally).
Wshadow=globalUrlSuffix(gcc/Warning-Options.html#index-Wshadow_003dglobal)
Wshadow=localCommon Var(warn_shadow_local) Warning EnabledBy(Wshadow)Warn when one local variable shadows another local variable or parameter.
Wshadow=localUrlSuffix(gcc/Warning-Options.html#index-Wshadow_003dlocal)
Wshift-count-negativeC ObjC C++ ObjC++ Var(warn_shift_count_negative) Init(1) WarningWarn if shift count is negative.
Wshift-count-negativeUrlSuffix(gcc/Warning-Options.html#index-Wno-shift-count-negative)
Wshift-count-overflowC ObjC C++ ObjC++ Var(warn_shift_count_overflow) Init(1) WarningWarn if shift count >= width of type.
Wshift-count-overflowUrlSuffix(gcc/Warning-Options.html#index-Wno-shift-count-overflow)
Wshift-negative-valueC ObjC C++ ObjC++ Var(warn_shift_negative_value) Init(-1) WarningWarn if left shifting a negative value.
Wshift-negative-valueUrlSuffix(gcc/Warning-Options.html#index-Wno-shift-negative-value)
Wshift-overflowC ObjC C++ ObjC++ Warning Alias(Wshift-overflow=, 1, 0)Warn if left shift of a signed value overflows.
Wshift-overflowUrlSuffix(gcc/Warning-Options.html#index-Wno-shift-overflow)
Wshift-overflow=C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_shift_overflow) Init(-1) Warning IntegerRange(0, 2)Warn if left shift of a signed value overflows.
Wshift-overflow=UrlSuffix(gcc/Warning-Options.html#index-Wno-shift-overflow)
Wsign-compareC ObjC C++ ObjC++ EnabledBy(Wextra)
Wsign-compareC ObjC C++ ObjC++ Var(warn_sign_compare) Warning LangEnabledBy(C++ ObjC++,Wall)Warn about signed-unsigned comparisons.
Wsign-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-sign-compare)
Wsign-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-sign-compare)
Wsign-conversionC ObjC C++ ObjC++ Var(warn_sign_conversion) Warning LangEnabledBy(C ObjC,Wconversion)Warn for implicit type conversions between signed and unsigned integers.
Wsign-conversionUrlSuffix(gcc/Warning-Options.html#index-Wno-sign-conversion)
Wsign-promoC++ ObjC++ Var(warn_sign_promo) WarningWarn when overload promotes from unsigned to signed.
Wsign-promoUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-sign-promo)
Wsized-deallocationC++ ObjC++ Var(warn_sized_deallocation) Warning EnabledBy(Wextra)Warn about missing sized deallocation functions.
Wsized-deallocationUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-sized-deallocation)
Wsizeof-array-argumentC ObjC C++ ObjC++ Var(warn_sizeof_array_argument) Warning Init(1)Warn when sizeof is applied on a parameter declared as an array.
Wsizeof-array-argumentUrlSuffix(gcc/Warning-Options.html#index-Wno-sizeof-array-argument)
Wsizeof-array-divC ObjC C++ ObjC++ Var(warn_sizeof_array_div) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about divisions of two sizeof operators when the first one is appliedto an array and the divisor does not equal the size of the array element.
Wsizeof-array-divUrlSuffix(gcc/Warning-Options.html#index-Wno-sizeof-array-div)
Wsizeof-pointer-divC ObjC C++ ObjC++ Var(warn_sizeof_pointer_div) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about suspicious divisions of two sizeof expressions that don't work correctly with pointers.
Wsizeof-pointer-divUrlSuffix(gcc/Warning-Options.html#index-Wno-sizeof-pointer-div)
Wsizeof-pointer-memaccessC ObjC C++ ObjC++ Var(warn_sizeof_pointer_memaccess) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about suspicious length parameters to certain string functions if the argument uses sizeof.
Wsizeof-pointer-memaccessUrlSuffix(gcc/Warning-Options.html#index-Wno-sizeof-pointer-memaccess)
WspeculativeDWarn from speculative compiles such as __traits(compiles).
WspeculativeLangUrlSuffix_D(gdc/Warnings.html#index-Wno-speculative)
Wstack-protectorCommon Var(warn_stack_protect) WarningWarn when not issuing stack smashing protection for some reason.
Wstack-protectorUrlSuffix(gcc/Warning-Options.html#index-Wno-stack-protector)
Wstack-usage=Common Joined RejectNegative Host_Wide_Int ByteSize Var(warn_stack_usage) Warning Init(HOST_WIDE_INT_MAX)-Wstack-usage=<byte-size>	Warn if stack usage might exceed <byte-size>.
Wstack-usage=UrlSuffix(gcc/Warning-Options.html#index-Wno-stack-usage)
Wstrict-aliasingCommon WarningWarn about code which might break strict aliasing rules.
Wstrict-aliasingUrlSuffix(gcc/Warning-Options.html#index-Wno-strict-aliasing)
Wstrict-aliasing=C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall, 3, 0) IntegerRange(0, 3)
Wstrict-aliasing=Common Joined RejectNegative UInteger Var(warn_strict_aliasing) WarningWarn about code which might break strict aliasing rules.
Wstrict-aliasing=UrlSuffix(gcc/Warning-Options.html#index-Wno-strict-aliasing)
Wstrict-aliasing=UrlSuffix(gcc/Warning-Options.html#index-Wno-strict-aliasing)
Wstrict-flex-arraysC C++ Var(warn_strict_flex_arrays) WarningWarn about improper usages of flexible array membersaccording to the level of -fstrict-flex-arrays.
Wstrict-flex-arraysUrlSuffix(gcc/Warning-Options.html#index-Wno-strict-flex-arrays)
Wstrict-null-sentinelC++ ObjC++ Warning Var(warn_strict_null_sentinel)Warn about uncasted NULL used as sentinel.
Wstrict-null-sentinelUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-strict-null-sentinel)
Wstrict-overflowCommon WarningWarn about optimizations that assume that signed overflow is undefined.
Wstrict-overflowUrlSuffix(gcc/Warning-Options.html#index-Wno-strict-overflow)
Wstrict-overflow=C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0) IntegerRange(0, 5)
Wstrict-overflow=Common Joined RejectNegative UInteger Var(warn_strict_overflow) WarningWarn about optimizations that assume that signed overflow is undefined.
Wstrict-overflow=UrlSuffix(gcc/Warning-Options.html#index-Wno-strict-overflow)
Wstrict-overflow=UrlSuffix(gcc/Warning-Options.html#index-Wno-strict-overflow)
Wstrict-prototypesC ObjC Var(warn_strict_prototypes) WarningWarn about unprototyped function declarations.
Wstrict-prototypesUrlSuffix(gcc/Warning-Options.html#index-Wno-strict-prototypes)
Wstrict-selector-matchObjC ObjC++ Var(warn_strict_selector_match) WarningWarn if type signatures of candidate methods do not match exactly.
Wstrict-selector-matchUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wno-strict-selector-match)
Wstring-compareC ObjC C++ LTO ObjC++ Warning Var(warn_string_compare) Warning LangEnabledBy(C ObjC C++ ObjC++, Wextra)Warn about calls to strcmp and strncmp used in equality expressions thatare necessarily true or false due to the length of one and size of the otherargument.
Wstring-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-string-compare)
Wstringop-overflowC ObjC C++ LTO ObjC++ Warning Alias(Wstringop-overflow=, 2, 0)Warn about buffer overflow in string manipulation functions like memcpyand strcpy.
Wstringop-overflowUrlSuffix(gcc/Warning-Options.html#index-Wno-stringop-overflow)
Wstringop-overflow=C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_stringop_overflow) Init(2) Warning LangEnabledBy(C ObjC C++ LTO ObjC++, Wall, 2, 0) IntegerRange(0, 4)Under the control of Object Size type, warn about buffer overflow in stringmanipulation functions like memcpy and strcpy.
Wstringop-overflow=UrlSuffix(gcc/Warning-Options.html#index-Wno-stringop-overflow)
Wstringop-overreadC ObjC C++ LTO ObjC++ Var(warn_stringop_overread) Init(1) Warning LangEnabledBy(C ObjC C++ LTO ObjC++, Wall)Warn about reading past the end of a source array in string manipulation functions like memchr and memcpy.
Wstringop-overreadUrlSuffix(gcc/Warning-Options.html#index-Wno-stringop-overread)
Wstringop-truncationC ObjC C++ LTO ObjC++ Var(warn_stringop_truncation) Warning Init (1) LangEnabledBy(C ObjC C++ LTO ObjC++, Wall)Warn about truncation in string manipulation functions like strncat and strncpy.
Wstringop-truncationUrlSuffix(gcc/Warning-Options.html#index-Wno-stringop-truncation)
WstyleModula-2extra compile time semantic checking, typically tries to catch poor programming style
Wsubobject-linkageC++ ObjC++ Var(warn_subobject_linkage) Warning Init(1)Warn if a class type has a base or a field whose type uses the anonymous namespace or depends on a type with no linkage.
Wsubobject-linkageUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-subobject-linkage)
Wsuggest-attribute=coldCommon Var(warn_suggest_attribute_cold) WarningWarn about functions which might be candidates for __attribute__((cold)).
Wsuggest-attribute=coldUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dcold)
Wsuggest-attribute=constCommon Var(warn_suggest_attribute_const) WarningWarn about functions which might be candidates for __attribute__((const)).
Wsuggest-attribute=constUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dconst)
Wsuggest-attribute=formatC ObjC C++ ObjC++ Var(warn_suggest_attribute_format) WarningWarn about functions which might be candidates for format attributes.
Wsuggest-attribute=formatUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dformat)
Wsuggest-attribute=mallocCommon Var(warn_suggest_attribute_malloc) WarningWarn about functions which might be candidates for __attribute__((malloc)).
Wsuggest-attribute=mallocUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dmalloc)
Wsuggest-attribute=noreturnCommon Var(warn_suggest_attribute_noreturn) WarningWarn about functions which might be candidates for __attribute__((noreturn)).
Wsuggest-attribute=noreturnUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dnoreturn)
Wsuggest-attribute=pureCommon Var(warn_suggest_attribute_pure) WarningWarn about functions which might be candidates for __attribute__((pure)).
Wsuggest-attribute=pureUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dpure)
Wsuggest-attribute=returns_nonnullCommon Var(warn_suggest_attribute_returns_nonnull) WarningWarn about functions which might be candidates for __attribute__((returns_nonnull)).
Wsuggest-attribute=returns_nonnullUrlSuffix(gcc/Warning-Options.html#index-Wno-suggest-attribute_003dreturns_005fnonnull)
Wsuggest-final-methodsCommon Var(warn_suggest_final_methods) WarningWarn about C++ virtual methods where adding final keyword would improve code quality.
Wsuggest-final-methodsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-suggest-final-methods)
Wsuggest-final-typesCommon Var(warn_suggest_final_types) WarningWarn about C++ polymorphic types where adding final keyword would improve code quality.
Wsuggest-final-typesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-suggest-final-types)
Wsuggest-overrideC++ ObjC++ Var(warn_override) WarningSuggest that the override keyword be used when the declaration of a virtualfunction overrides another.
Wsuggest-overrideUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-suggest-override)
WsurprisingFortran Warning Var(warn_surprising) LangEnabledBy(Fortran,Wall)Warn about \"suspicious\" constructs.
WsurprisingLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wsurprising)
WswitchC ObjC C++ ObjC++ Var(warn_switch) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about enumerated switches, with no default, missing a case.
WswitchUrlSuffix(gcc/Warning-Options.html#index-Wno-switch)
Wswitch-boolC ObjC C++ ObjC++ Var(warn_switch_bool) Warning Init(1)Warn about switches with boolean controlling expression.
Wswitch-boolUrlSuffix(gcc/Warning-Options.html#index-Wno-switch-bool)
Wswitch-defaultC ObjC C++ ObjC++ Var(warn_switch_default) WarningWarn about enumerated switches missing a \"default:\" statement.
Wswitch-defaultUrlSuffix(gcc/Warning-Options.html#index-Wno-switch-default)
Wswitch-enumC ObjC C++ ObjC++ Var(warn_switch_enum) WarningWarn about all enumerated switches missing a specific case.
Wswitch-enumUrlSuffix(gcc/Warning-Options.html#index-Wno-switch-enum)
Wswitch-outside-rangeC ObjC C++ ObjC++ Var(warn_switch_outside_range) Warning Init(1)Warn about switch values that are outside of the switch's type range.
Wswitch-outside-rangeUrlSuffix(gcc/Warning-Options.html#index-Wno-switch-outside-range)
Wswitch-unreachableCommon Var(warn_switch_unreachable) Warning Init(1)Warn about statements between switch's controlling expression and the firstcase.
Wswitch-unreachableUrlSuffix(gcc/Warning-Options.html#index-Wno-switch-unreachable)
Wsync-nandC C++ Var(warn_sync_nand) Init(1) WarningWarn when __sync_fetch_and_nand and __sync_nand_and_fetch built-in functions are used.
Wsync-nandUrlSuffix(gcc/Warning-Options.html#index-Wno-sync-nand)
WsynthC++ ObjC++ Var(warn_synth) WarningDeprecated.  This switch has no effect.
Wsystem-headersC ObjC C++ ObjC++ Warning
Wsystem-headersCommon Var(warn_system_headers) WarningDo not suppress warnings from system headers.
Wsystem-headersUrlSuffix(gcc/Warning-Options.html#index-Wno-system-headers)
Wsystem-headersUrlSuffix(gcc/Warning-Options.html#index-Wno-system-headers)
WtabsFortran Warning Var(warn_tabs) LangEnabledBy(Fortran,Wall || Wpedantic)Permit nonconforming uses of the tab character.
WtabsLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wtabs)
Wtarget-lifetimeFortran Warning Var(warn_target_lifetime) LangEnabledBy(Fortran,Wall)Warn if the pointer in a pointer assignment might outlive its target.
Wtautological-compareCommon Var(warn_tautological_compare) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn if a comparison always evaluates to true or false.
Wtautological-compareUrlSuffix(gcc/Warning-Options.html#index-Wno-tautological-compare)
Wtemplate-bodyC++ ObjC++ Var(warn_template_body) Warning Init(1)Diagnose errors when parsing a template.
Wtemplate-bodyUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-template-body)
Wtemplate-id-cdtorC++ ObjC++ Var(warn_template_id_cdtor) WarningWarn about simple-template-id in a constructor or destructor.
Wtemplate-id-cdtorUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-template-id-cdtor)
Wtemplate-names-tu-localC++ ObjC++ Var(warn_template_names_tu_local) Warning EnabledBy(Wextra)Warn about templates naming TU-local entities in a module.
Wtemplate-names-tu-localUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-template-names-tu-local)
WtemplatesC++ ObjC++ Var(warn_templates) WarningWarn on primary template declaration.
WtemplatesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-templates)
WterminateC++ ObjC++ Warning Var(warn_terminate) Init(1)Warn if a throw expression will always result in a call to terminate().
WterminateUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-terminate)
WtraditionalC ObjC CPP(cpp_warn_traditional) CppReason(CPP_W_TRADITIONAL) Var(warn_traditional) Init(0) WarningWarn about features not present in traditional C.
WtraditionalUrlSuffix(gcc/Warning-Options.html#index-Wno-traditional)
Wtraditional-conversionC ObjC Var(warn_traditional_conversion) WarningWarn of prototypes causing type conversions different from what would happen in the absence of prototype.
Wtraditional-conversionUrlSuffix(gcc/Warning-Options.html#index-Wno-traditional-conversion)
Wtrailing-whitespaceC ObjC C++ ObjC++ Alias(Wtrailing-whitespace=,blanks,none) WarningWarn about trailing whitespace on lines except when in raw string literals.   Equivalent to Wtrailing-whitespace=blanks when enabled or Wtrailing-whitespace=none when disabled.
Wtrailing-whitespaceUrlSuffix(gcc/Warning-Options.html#index-Wno-trailing-whitespace)
Wtrailing-whitespace=C ObjC C++ ObjC++ CPP(cpp_warn_trailing_whitespace) CppReason(CPP_W_TRAILING_WHITESPACE) Enum(warn_trailing_whitespace_kind) Joined RejectNegative Var(warn_trailing_whitespace) Init(0) WarningWarn about trailing whitespace on lines except when in raw string literals.
Wtrailing-whitespace=UrlSuffix(gcc/Warning-Options.html#index-Wno-trailing-whitespace)
WtrampolinesCommon Var(warn_trampolines) WarningWarn whenever a trampoline is generated.
WtrampolinesUrlSuffix(gcc/Warning-Options.html#index-Wno-trampolines)
WtrigraphsC ObjC C++ ObjC++ CPP(warn_trigraphs) CppReason(CPP_W_TRIGRAPHS) Var(cpp_warn_trigraphs) Init(2) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn if trigraphs are encountered that might affect the meaning of the program.
WtrigraphsUrlSuffix(gcc/Warning-Options.html#index-Wtrigraphs)
Wtrivial-auto-var-initCommon Var(warn_trivial_auto_var_init) Warning Init(0)Warn about cases where -ftrivial-auto-var-init cannot initialize an auto variable.
Wtrivial-auto-var-initUrlSuffix(gcc/Warning-Options.html#index-Wno-trivial-auto-var-init)
WtsanCommon Var(warn_tsan) Init(1) WarningWarn about unsupported features in ThreadSanitizer.
WtsanUrlSuffix(gcc/Warning-Options.html#index-Wno-tsan)
Wtype-limitsCommon Var(warn_type_limits) Warning EnabledBy(Wextra)Warn if a comparison is always true or always false due to the limited range of the data type.
Wtype-limitsUrlSuffix(gcc/Warning-Options.html#index-Wno-type-limits)
Wundeclared-selectorObjC ObjC++ Var(warn_undeclared_selector) WarningWarn about @selector()s without previously declared methods.
Wundeclared-selectorUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-Wno-undeclared-selector)
WundefC ObjC C++ ObjC++ CPP(warn_undef) CppReason(CPP_W_UNDEF) Var(cpp_warn_undef) Init(0) WarningWarn if an undefined macro is used in an #if directive.
WundefUrlSuffix(gcc/Warning-Options.html#index-Wno-undef)
Wundefined-do-loopFortran Warning Var(warn_undefined_do_loop) LangEnabledBy(Fortran,Wall)Warn about an invalid DO loop.
Wundefined-do-loopLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wundefined-do-loop)
WunderflowFortran Warning Var(warn_underflow) Init(1)Warn about underflow of numerical constant expressions.
WunderflowLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wunderflow)
WunicodeC ObjC C++ ObjC++ CPP(cpp_warn_unicode) CppReason(CPP_W_UNICODE) Var(warn_unicode) Init(1) WarningWarn about invalid forms of delimited or named escape sequences.
WunicodeUrlSuffix(gcc/Warning-Options.html#index-Wno-unicode)
Wuninit-variable-checkingModula-2turns on compile time analysis in the first basic block of a procedure detecting access to uninitialized data.
Wuninit-variable-checking=Modula-2 Joinedturns on compile time analysis to detect access to uninitialized variables, the checking can be specified by: known,cond,all.
WuninitializedC ObjC C++ ObjC++ LTO LangEnabledBy(C ObjC C++ ObjC++ LTO,Wall)
WuninitializedCommon Var(warn_uninitialized) Warning EnabledBy(Wextra)Warn about uninitialized automatic variables.
WuninitializedFortran LangEnabledBy(Fortran,Wall)
WuninitializedUrlSuffix(gcc/Warning-Options.html#index-Wno-uninitialized)
WuninitializedUrlSuffix(gcc/Warning-Options.html#index-Wno-uninitialized)
WuninitializedUrlSuffix(gcc/Warning-Options.html#index-Wno-uninitialized)
Wunknown-pragmasC ObjC C++ ObjC++ Warning Var(warn_unknown_pragmas) LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0)Warn about unrecognized pragmas.
Wunknown-pragmasD Var(warn_unknown_pragmas) LangEnabledBy(D, Wextra)
Wunknown-pragmasUrlSuffix(gcc/Warning-Options.html#index-Wno-unknown-pragmas) LangUrlSuffix_D(gdc/Warnings.html#index-Wno-unknown-pragmas)
Wunknown-pragmasUrlSuffix(gcc/Warning-Options.html#index-Wno-unknown-pragmas) LangUrlSuffix_D(gdc/Warnings.html#index-Wno-unknown-pragmas)
Wunreachable-codeCommon Ignore WarningDoes nothing. Preserved for backward compatibility.
Wunsafe-loop-optimizationsCommon Ignore WarningDoes nothing. Preserved for backward compatibility.
Wunsafe-loop-optimizationsUrlSuffix(gcc/Warning-Options.html#index-Wno-unsafe-loop-optimizations)
Wunsuffixed-float-constantsC ObjC Var(warn_unsuffixed_float_constants) WarningWarn about unsuffixed float constants.
Wunsuffixed-float-constantsUrlSuffix(gcc/Warning-Options.html#index-Wno-unsuffixed-float-constants)
Wunterminated-string-initializationC ObjC Var(warn_unterminated_string_initialization) Warning LangEnabledBy(C ObjC,Wextra)Warn about character arrays initialized as unterminated character sequences with a string literal.
Wunterminated-string-initializationUrlSuffix(gcc/Warning-Options.html#index-Wno-unterminated-string-initialization)
WunusedC ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)
WunusedCommon Var(warn_unused) Init(0) WarningEnable all -Wunused- warnings.
WunusedLangEnabledBy(Fortran,Wall)
WunusedUrlSuffix(gcc/Warning-Options.html#index-Wno-unused)
WunusedUrlSuffix(gcc/Warning-Options.html#index-Wno-unused)
WunusedUrlSuffix(gcc/Warning-Options.html#index-Wno-unused)
Wunused-but-set-parameterCommon Var(warn_unused_but_set_parameter) Warning EnabledBy(Wunused && Wextra)Warn when a function parameter is only set, otherwise unused.
Wunused-but-set-parameterUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-but-set-parameter)
Wunused-but-set-variableCommon Var(warn_unused_but_set_variable) Warning EnabledBy(Wunused)Warn when a variable is only set, otherwise unused.
Wunused-but-set-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-but-set-variable)
Wunused-const-variableC ObjC C++ ObjC++ Warning Alias(Wunused-const-variable=, 2, 0)Warn when a const variable is unused.
Wunused-const-variableRust Warning Alias(Wunused-const-variable=, 2, 0)Warn when a const variable is unused.
Wunused-const-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-const-variable)
Wunused-const-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-const-variable)
Wunused-const-variable=C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_unused_const_variable) Warning LangEnabledBy(C ObjC,Wunused-variable, 1, 0) IntegerRange(0, 2)Warn when a const variable is unused.
Wunused-const-variable=Rust Joined RejectNegative UInteger Var(warn_unused_const_variable) Warning LangEnabledBy(Rust,Wunused-variable, 1, 0) IntegerRange(0, 2)Warn when a const variable is unused.
Wunused-const-variable=UrlSuffix(gcc/Warning-Options.html#index-Wno-unused-const-variable)
Wunused-const-variable=UrlSuffix(gcc/Warning-Options.html#index-Wno-unused-const-variable)
Wunused-dummy-argumentFortran Warning Var(warn_unused_dummy_argument) LangEnabledBy(Fortran,Wall)Warn about unused dummy arguments.
Wunused-dummy-argumentLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wunused-dummy-argument)
Wunused-functionCommon Var(warn_unused_function) Warning EnabledBy(Wunused)Warn when a function is unused.
Wunused-functionUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-function)
Wunused-labelCommon Var(warn_unused_label) Warning EnabledBy(Wunused)Warn when a label is unused.
Wunused-labelUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-label)
Wunused-local-typedefsC ObjC C++ ObjC++ Var(warn_unused_local_typedefs) Warning EnabledBy(Wunused)Warn when typedefs locally defined in a function are not used.
Wunused-local-typedefsUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-local-typedefs)
Wunused-macrosC ObjC C++ ObjC++ CppReason(CPP_W_UNUSED_MACROS) Var(cpp_warn_unused_macros) WarningWarn about macros defined in the main file that are not used.
Wunused-macrosUrlSuffix(gcc/Warning-Options.html#index-Wunused-macros)
Wunused-parameterCommon Var(warn_unused_parameter) Warning EnabledBy(Wunused && Wextra)Warn when a function parameter is unused.
Wunused-parameterModula-2
Wunused-parameterUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-parameter) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wunused-parameter)
Wunused-parameterUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-parameter) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wunused-parameter)
Wunused-resultC ObjC C++ ObjC++ Var(warn_unused_result) Init(1) WarningWarn if a caller of a function, marked with attribute warn_unused_result, does not use its return value.
Wunused-resultRust Var(warn_unused_result) WarningWarn if a caller of a function, marked with attribute warn_unused_result, does not use its return value.
Wunused-resultUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-result)
Wunused-resultUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-result)
Wunused-valueCommon Var(warn_unused_value) Warning EnabledBy(Wunused)Warn when an expression value is unused.
Wunused-valueUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-value)
Wunused-variableC ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wunused)
Wunused-variableCommon Var(warn_unused_variable) Warning EnabledBy(Wunused)Warn when a variable is unused.
Wunused-variableModula-2
Wunused-variableRust Var(warn_unused_variable) Warning
Wunused-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-variable)
Wunused-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-variable)
Wunused-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-variable)
Wunused-variableUrlSuffix(gcc/Warning-Options.html#index-Wno-unused-variable)
Wuse-after-freeCommon Var(warn_use_after_free) WarningWarn for uses of pointers to deallocated storage.
Wuse-after-freeUrlSuffix(gcc/Warning-Options.html#index-Wno-use-after-free)
Wuse-after-free=Common Joined RejectNegative UInteger Var(warn_use_after_free) Warning IntegerRange(0, 3)Warn for uses of pointers to deallocated storage.
Wuse-after-free=LangEnabledBy(C ObjC C++ LTO ObjC++, Wall,2,0)
Wuse-after-free=UrlSuffix(gcc/Warning-Options.html#index-Wno-use-after-free)
Wuse-after-free=UrlSuffix(gcc/Warning-Options.html#index-Wno-use-after-free)
Wuse-without-onlyFortran Var(warn_use_without_only) WarningWarn about USE statements that have no ONLY qualifier.
Wuse-without-onlyLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wuse-without-only)
Wuseless-castC ObjC C++ ObjC++ Var(warn_useless_cast) WarningWarn about useless casts.
Wuseless-castUrlSuffix(gcc/Warning-Options.html#index-Wno-useless-cast)
WvarargsC ObjC C++ ObjC++ Warning Var(warn_varargs) Init(1)Warn about questionable usage of the macros used to retrieve variable arguments.
WvarargsD
WvarargsUrlSuffix(gcc/Warning-Options.html#index-Wno-varargs) LangUrlSuffix_D(gdc/Warnings.html#index-Wno-varargs)
WvarargsUrlSuffix(gcc/Warning-Options.html#index-Wno-varargs) LangUrlSuffix_D(gdc/Warnings.html#index-Wno-varargs)
Wvariadic-macrosC ObjC C++ ObjC++ CPP(warn_variadic_macros) CppReason(CPP_W_VARIADIC_MACROS) Var(cpp_warn_variadic_macros) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic || Wtraditional)Warn about using variadic macros.
Wvariadic-macrosUrlSuffix(gcc/Warning-Options.html#index-Wno-variadic-macros)
Wvector-operation-performanceCommon Var(warn_vector_operation_performance) WarningWarn when a vector operation is compiled outside the SIMD.
Wvector-operation-performanceUrlSuffix(gcc/Warning-Options.html#index-Wno-vector-operation-performance)
Wverbose-unboundedModula-2inform user which parameters will be passed by reference
Wvexing-parseC++ ObjC++ Warning Var(warn_vexing_parse) Init(1)Warn about the most vexing parse syntactic ambiguity.
Wvexing-parseUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-vexing-parse)
Wvirtual-inheritanceC++ ObjC++ Var(warn_virtual_inheritance) WarningWarn on direct virtual inheritance.
Wvirtual-inheritanceUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-virtual-inheritance)
Wvirtual-move-assignC++ ObjC++ Var(warn_virtual_move_assign) Warning Init(1)Warn if a virtual base has a non-trivial move assignment operator.
Wvirtual-move-assignUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-virtual-move-assign)
WvlaC ObjC C++ ObjC++ Var(warn_vla) Init(-1) WarningWarn if a variable length array is used.
WvlaUrlSuffix(gcc/Warning-Options.html#index-Wno-vla)
Wvla-larger-than=C ObjC C++ LTO ObjC++ Var(warn_vla_limit) Warning Joined Host_Wide_Int ByteSize Init(HOST_WIDE_INT_MAX)-Wvla-larger-than=<number>	Warn on unbounded uses of variable-lengtharrays, and on bounded uses of variable-length arrays whose bound can belarger than <number> bytes.
Wvla-larger-than=UrlSuffix(gcc/Warning-Options.html#index-Wno-vla-larger-than)
Wvla-parameterC ObjC C++ ObjC++ Var(warn_vla_parameter) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about mismatched declarations of VLA parameters.
Wvla-parameterUrlSuffix(gcc/Warning-Options.html#index-Wno-vla-parameter)
WvolatileC++ ObjC++ Var(warn_volatile) WarningWarn about deprecated uses of volatile qualifier.
WvolatileUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-volatile)
Wvolatile-register-varC ObjC C++ ObjC++ Var(warn_volatile_register_var) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn when a register variable is declared volatile.
Wvolatile-register-varUrlSuffix(gcc/Warning-Options.html#index-Wno-volatile-register-var)
Wwrite-stringsC ObjC C++ ObjC++ Var(warn_write_strings) WarningIn C++, nonzero means warn about deprecated conversion from string literals to 'char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard.
Wwrite-stringsUrlSuffix(gcc/Warning-Options.html#index-Wno-write-strings)
Wxor-used-as-powC ObjC C++ ObjC++ Var(warn_xor_used_as_pow) Warning Init(1)Warn about xor operators where it appears the user meant exponentiation.
Wxor-used-as-powUrlSuffix(gcc/Warning-Options.html#index-Wno-xor-used-as-pow)
Wzero-as-null-pointer-constantC ObjC C++ ObjC++ Var(warn_zero_as_null_pointer_constant) WarningWarn when a literal '0' is used as null pointer.
Wzero-as-null-pointer-constantUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-Wno-zero-as-null-pointer-constant)
Wzero-length-boundsC ObjC C++ ObjC++ Var(warn_zero_length_bounds) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)Warn about accesses to interior zero-length array members.
Wzero-length-boundsUrlSuffix(gcc/Warning-Options.html#index-Wzero-length-bounds)
WzerotripFortran Warning Var(warn_zerotrip) LangEnabledBy(Fortran,Wall)Warn about zero-trip DO loops.
WzerotripLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-Wzerotrip)
XDGenerate JSON file.
XLangUrlSuffix_D(gdc/Code-Generation.html#index-X)
XassemblerDriver Separate
XassemblerUrlSuffix(gcc/Assembler-Options.html#index-Xassembler)
XfD Joined Separate-Xf <file>	Write JSON output to the given <file>.
XfLangUrlSuffix_D(gdc/Code-Generation.html#index-Xf)
XlinkerDriver Separate
XlinkerUrlSuffix(gcc/Link-Options.html#index-Xlinker)
XpreprocessorDriver Separate
XpreprocessorUrlSuffix(gcc/Preprocessor-Options.html#index-Xpreprocessor)
ZDriver
ansiC ObjC C++ ObjC++A synonym for -std=c89 (for C) or -std=c++98 (for C++).
ansiModula-2
aux-infoCommon Separate Var(aux_info_file_name)-aux-info <file>	Emit declaration information into <file>.
aux-infoUrlSuffix(gcc/C-Dialect-Options.html#index-aux-info)
aux-info=Common Joined Alias(aux-info)
aux-info=UrlSuffix(gcc/C-Dialect-Options.html#index-aux-info)
cDriver
cModula-2
callgraphLTODump Var(flag_dump_callgraph)Dump the symtab callgraph.
coverageDriver
coverageUrlSuffix(gcc/Instrumentation-Options.html#index-coverage)
cppFortran Negative(nocpp)Enable preprocessing.
cppLangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-cpp)
cpp=Fortran Joined Negative(nocpp) Undocumented NoDWARFRecord
cpp=LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-cpp)
dC ObjC C++ ObjC++ Joined
dCommon Joined-d<letters>	Enable dumps from specific passes of the compiler.
dFortran Joined
debuglib=Driver JoinedDebug library to use instead of phobos.
debuglib=LangUrlSuffix_D(gdc/Linking.html#index-debuglib_003d)
defaultlib=Driver JoinedDefault library to use instead of phobos.
defaultlib=LangUrlSuffix_D(gdc/Linking.html#index-defaultlib_003d)
defined-onlyLTODump Var(flag_lto_dump_defined)Dump only the defined symbols.
demangleLTODump Var(flag_lto_dump_demangle)Dump the demangled output.
dstartfilesDriverDo link the standard D startup files in the compilation.
dump-body=LTODump RejectNegative Joined Var(flag_dump_body)
dump-level=LTODump RejectNegative Joined Var(flag_dump_level)
dumpbaseDriver Common Separate Var(dump_base_name)-dumpbase <file>	Set the file basename to be used for dumps.
dumpbaseUrlSuffix(gcc/Overall-Options.html#index-dumpbase)
dumpbase-extDriver Common Separate Var(dump_base_ext)-dumpbase-ext .<ext>    Drop a trailing .<ext> from the dump basename to name auxiliary output files.
dumpbase-extUrlSuffix(gcc/Overall-Options.html#index-dumpbase-ext)
dumpdirDriver Common Separate Var(dump_dir_name)-dumpdir <dir>	Set the directory name to be used for dumps.
dumpdirUrlSuffix(gcc/Overall-Options.html#index-dumpdir)
dumpfullversionDriver
dumpfullversionUrlSuffix(gcc/Developer-Options.html#index-dumpfullversion)
dumpmachineDriver
dumpmachineUrlSuffix(gcc/Developer-Options.html#index-dumpmachine)
dumpspecsDriver
dumpspecsUrlSuffix(gcc/Developer-Options.html#index-dumpspecs)
dumpversionDriver
dumpversionUrlSuffix(gcc/Developer-Options.html#index-dumpversion)
eDriver Joined Separate
eUrlSuffix(gcc/Link-Options.html#index-e)
export-dynamicDriver Undocumented
fPICCommon Var(flag_pic,2) Negative(fPIE) Init(-1)Generate position-independent code if possible (large mode).
fPICUrlSuffix(gcc/Code-Gen-Options.html#index-fPIC)
fPIECommon Var(flag_pie,2) Negative(fpic) Init(-1)Generate position-independent code for executables if possible (large mode).
fPIEUrlSuffix(gcc/Code-Gen-Options.html#index-fPIE)
fRTS=Ada AdaWhy AdaSCIL Joined RejectNegativeSelect the runtime.
fabi-compat-version=C++ ObjC++ Joined RejectNegative UInteger Var(flag_abi_compat_version) Init(-1)The version of the C++ ABI used for -Wabi warnings and link compatibility aliases.
fabi-compat-version=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fabi-compat-version)
fabi-version=Common Joined RejectNegative UInteger Var(flag_abi_version) Init(0)The version of the C++ ABI in use.
fabi-version=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fabi-version)
faccess-controlC++ ObjC++ Var(flag_access_control) Init(1)Enforce class member access control semantics.
faccess-controlUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-faccess-control)
fada-spec-parent=C ObjC C++ ObjC++ RejectNegative Joined Var(ada_specs_parent)-fada-spec-parent=unit	Dump Ada specs as child units of given parent.
fada-spec-parent=UrlSuffix(gcc/Overall-Options.html#index-fada-spec-parent)
faggressive-function-eliminationFortran Var(flag_aggressive_function_elimination)Eliminate multiple function invocations also for impure functions.
faggressive-function-eliminationLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-faggressive-function-elimination)
faggressive-loop-optimizationsCommon Var(flag_aggressive_loop_optimizations) Optimization Init(1)Aggressively optimize loops using language constraints.
faggressive-loop-optimizationsUrlSuffix(gcc/Optimize-Options.html#index-faggressive-loop-optimizations)
falign-commonsFortran Var(flag_align_commons) Init(1)Enable alignment of COMMON blocks.
falign-commonsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-falign-commons)
falign-functionsCommon Var(flag_align_functions) OptimizationAlign the start of functions.
falign-functionsUrlSuffix(gcc/Optimize-Options.html#index-falign-functions)
falign-functions=Common RejectNegative Joined Var(str_align_functions) Optimization
falign-functions=UrlSuffix(gcc/Optimize-Options.html#index-falign-functions)
falign-jumpsCommon Var(flag_align_jumps) OptimizationAlign labels which are only reached by jumping.
falign-jumpsUrlSuffix(gcc/Optimize-Options.html#index-falign-jumps)
falign-jumps=Common RejectNegative Joined Var(str_align_jumps) Optimization
falign-jumps=UrlSuffix(gcc/Optimize-Options.html#index-falign-jumps)
falign-labelsCommon Var(flag_align_labels) OptimizationAlign all labels.
falign-labelsUrlSuffix(gcc/Optimize-Options.html#index-falign-labels)
falign-labels=Common RejectNegative Joined Var(str_align_labels) Optimization
falign-labels=UrlSuffix(gcc/Optimize-Options.html#index-falign-labels)
falign-loopsCommon Var(flag_align_loops) OptimizationAlign the start of loops.
falign-loopsUrlSuffix(gcc/Optimize-Options.html#index-falign-loops)
falign-loops=Common RejectNegative Joined Var(str_align_loops) Optimization
falign-loops=UrlSuffix(gcc/Optimize-Options.html#index-falign-loops)
faligned-newC++ ObjC++ Alias(faligned-new=,1,0)Support C++17 allocation of over-aligned types.
faligned-newUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-faligned-new)
faligned-new=C++ ObjC++ Joined RejectNegative Var(aligned_new_threshold) UInteger Init(-1)-faligned-new=<N>	Use C++17 over-aligned type allocation for alignments greater than N.
faligned-new=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-faligned-new)
fall-instantiationsDGenerate code for all template instantiations.
fall-instantiationsLangUrlSuffix_D(gdc/Runtime-Options.html#index-fall-instantiations)
fall-intrinsicsFortran RejectNegative Var(flag_all_intrinsics)All intrinsics procedures are available regardless of selected standard.
fall-intrinsicsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fall-intrinsics)
fall-virtualC++ ObjC++ WarnRemoved
fallocation-dceCommon Var(flag_allocation_dce) Init(1) OptimizationTell DCE to remove unused C++ allocations.
fallocation-dceUrlSuffix(gcc/Optimize-Options.html#index-fallocation-dce)
fallow-argument-mismatchFortran Var(flag_allow_argument_mismatch) LangEnabledBy(Fortran,std=legacy)Accept argument mismatches in procedure calls.
fallow-argument-mismatchLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fallow-argument-mismatch)
fallow-invalid-bozFortran RejectNegative Var(flag_allow_invalid_boz)Allow a BOZ literal constant to appear in an invalid context and with X instead of Z.
fallow-leading-underscoreFortran Undocumented Var(flag_allow_leading_underscore)
fallow-parameterless-variadic-functionsC ObjC IgnoreDoes nothing. Preserved for backward compatibility.
fallow-store-data-racesCommon Var(flag_store_data_races) OptimizationAllow the compiler to introduce new data races on stores.
fallow-store-data-racesUrlSuffix(gcc/Optimize-Options.html#index-fallow-store-data-races)
falt-external-templatesC++ ObjC++ WarnRemovedNo longer supported.
fanalyzerCommon Var(flag_analyzer)Enable static analysis pass.
fanalyzerUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer)
fanalyzer-call-summariesCommon Var(flag_analyzer_call_summaries) Init(0)Approximate the effect of function calls to simplify analysis.
fanalyzer-call-summariesUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-call-summaries)
fanalyzer-checker=Common Joined RejectNegative Var(flag_analyzer_checker)Restrict the analyzer to run just the named checker.
fanalyzer-checker=UrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-checker)
fanalyzer-debug-text-artCommon Var(flag_analyzer_debug_text_art) Init(0)Add extra annotations to diagrams.
fanalyzer-debug-text-artUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-debug-text-art)
fanalyzer-feasibilityCommon Var(flag_analyzer_feasibility) Init(1)Verify that paths are feasible when emitting diagnostics.
fanalyzer-feasibilityUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-feasibility)
fanalyzer-fine-grainedCommon Var(flag_analyzer_fine_grained) Init(0)Avoid combining multiple statements into one exploded edge.
fanalyzer-fine-grainedUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-fine-grained)
fanalyzer-show-duplicate-countCommon Var(flag_analyzer_show_duplicate_count) Init(0)Issue a note when diagnostics are deduplicated.
fanalyzer-show-duplicate-countUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-show-duplicate-count)
fanalyzer-show-events-in-system-headersCommon Var(flag_analyzer_show_events_in_system_headers) Init(0)Show events within system headers in analyzer execution paths.
fanalyzer-show-events-in-system-headersUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-show-events-in-system-headers)
fanalyzer-state-mergeCommon Var(flag_analyzer_state_merge) Init(1)Merge similar-enough states during analysis.
fanalyzer-state-mergeUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-state-merge)
fanalyzer-state-purgeCommon Var(flag_analyzer_state_purge) Init(1)Purge unneeded state during analysis.
fanalyzer-state-purgeUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-state-purge)
fanalyzer-suppress-followupsCommon Var(flag_analyzer_suppress_followups) Init(1)Stop exploring an execution path after certain diagnostics.
fanalyzer-suppress-followupsUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-suppress-followups)
fanalyzer-transitivityCommon Var(flag_analyzer_transitivity) Init(0)Enable transitivity of constraints during analysis.
fanalyzer-transitivityUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-transitivity)
fanalyzer-undo-inliningCommon Var(flag_analyzer_undo_inlining) Init(1)Try to reconstruct function calls and returns after inlining.
fanalyzer-undo-inliningUrlSuffix(gcc/Static-Analyzer-Options.html#index-fanalyzer-undo-inlining)
fanalyzer-verbose-edgesCommon Var(flag_analyzer_verbose_edges) Init(0)Emit more verbose descriptions of control flow in diagnostics.
fanalyzer-verbose-state-changesCommon Var(flag_analyzer_verbose_state_changes) Init(0)Emit more verbose descriptions of state changes in diagnostics.
fanalyzer-verbosity=Common Joined UInteger Var(analyzer_verbosity) Init(2)Control which events are displayed in diagnostic paths.
fargument-aliasCommon IgnoreDoes nothing. Preserved for backward compatibility.
fargument-noaliasCommon IgnoreDoes nothing. Preserved for backward compatibility.
fargument-noalias-anythingCommon IgnoreDoes nothing. Preserved for backward compatibility.
fargument-noalias-globalCommon IgnoreDoes nothing. Preserved for backward compatibility.
fasan-shadow-offset=Common Joined RejectNegative Var(common_deferred_options) Defer-fasan-shadow-offset=<number>	Use custom shadow memory offset.
fasan-shadow-offset=UrlSuffix(gcc/Instrumentation-Options.html#index-fasan-shadow-offset)
fasmC ObjC C++ ObjC++ Var(flag_no_asm, 0)Recognize the \"asm\" keyword.
fasmUrlSuffix(gcc/C-Dialect-Options.html#index-fasm)
fassertD Var(flag_assert)Generate code for assert contracts.
fassertLangUrlSuffix_D(gdc/Runtime-Options.html#index-fassert)
fassociative-mathCommon Var(flag_associative_math) SetByCombined OptimizationAllow optimization for floating-point arithmetic which may change theresult of the operation due to rounding.
fassociative-mathUrlSuffix(gcc/Optimize-Options.html#index-fassociative-math)
fassume-sane-operators-new-deleteC++ ObjC++ Optimization Var(flag_assume_sane_operators_new_delete) Init(1)Assume C++ replaceable global operators new, new[], delete, delete[] don't read or write visible global state.
fassume-sane-operators-new-deleteUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fassume-sane-operators-new-delete)
fasynchronous-unwind-tablesCommon Var(flag_asynchronous_unwind_tables) OptimizationGenerate unwind tables that are exact at each instruction boundary.
fasynchronous-unwind-tablesUrlSuffix(gcc/Code-Gen-Options.html#index-fasynchronous-unwind-tables)
fauto-inc-decCommon Var(flag_auto_inc_dec) Init(1) OptimizationGenerate auto-inc/dec instructions.
fauto-inc-decUrlSuffix(gcc/Optimize-Options.html#index-fauto-inc-dec)
fauto-initModula-2automatically initializes all pointers to NIL
fauto-profileCommon Var(flag_auto_profile)Use sample profile information for call graph node weights. The defaultprofile file is fbdata.afdo in 'pwd'.
fauto-profileUrlSuffix(gcc/Optimize-Options.html#index-fauto-profile)
fauto-profile=Common Joined RejectNegative Var(auto_profile_file)Use sample profile information for call graph node weights. The profilefile is specified in the argument.
fauto-profile=UrlSuffix(gcc/Optimize-Options.html#index-fauto-profile)
fautomaticFortran Var(flag_automatic) Init(1)Do not treat local variables and COMMON blocks as if they were named in SAVE statements.
fautomaticLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fno-automatic)
favoid-store-forwardingCommon Var(flag_avoid_store_forwarding) Init(0) OptimizationTry to avoid store forwarding.
favoid-store-forwardingUrlSuffix(gcc/Optimize-Options.html#index-favoid-store-forwarding)
fbackslashFortran Var(flag_backslash)Specify that backslash in string introduces an escape character.
fbacktraceFortran Var(flag_backtrace) Init(1)Produce a backtrace when a runtime error is encountered.
fbacktraceLangUrlSuffix_Fortran(gfortran/Debugging-Options.html#index-fno-backtrace)
fbit-testsCommon Var(flag_bit_tests) Init(0) OptimizationUse bit tests for sufficiently large switch statements.
fbit-testsUrlSuffix(gcc/Code-Gen-Options.html#index-fbit-tests)
fblas-matmul-limit=Fortran RejectNegative Joined UInteger Var(flag_blas_matmul_limit) Init(30)-fblas-matmul-limit=<n>	Size of the smallest matrix for which matmul will use BLAS.
fblas-matmul-limit=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fblas-matmul-limit)
fboundsModula-2turns on runtime subrange, array index and indirection via NIL pointer checking
fbounds-checkCommon Var(flag_bounds_check)Generate code to check bounds before indexing arrays.
fbounds-checkD
fbounds-checkLangUrlSuffix_D(gdc/Runtime-Options.html#index-fbounds-check) LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fbounds-check)
fbounds-checkLangUrlSuffix_D(gdc/Runtime-Options.html#index-fbounds-check) LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fbounds-check)
fbounds-check=D Joined RejectNegative Enum(bounds_check) Var(flag_bounds_check)-fbounds-check=[on|safeonly|off]	Turn array bounds checks on, in @safe code only, or off.
fbounds-check=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fbounds-check) LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fbounds-check)
fbranch-count-regCommon Var(flag_branch_on_count_reg) OptimizationReplace add, compare, branch with branch on count register.
fbranch-count-regUrlSuffix(gcc/Optimize-Options.html#index-fbranch-count-reg)
fbranch-probabilitiesCommon Var(flag_branch_probabilities) OptimizationUse profiling information for branch probabilities.
fbranch-probabilitiesUrlSuffix(gcc/Optimize-Options.html#index-fbranch-probabilities)
fbranch-target-load-optimizeCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fbranch-target-load-optimize2Common IgnoreDoes nothing.  Preserved for backward compatibility.
fbtr-bb-exclusiveCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fbuilding-libgccC ObjC C++ ObjC++ Undocumented Var(flag_building_libgcc)
fbuilding-libgfortranFortran Undocumented Var(flag_building_libgfortran)
fbuilding-libphobos-testsD Undocumented Var(flag_building_libphobos_tests)
fbuiltinC ObjC C++ ObjC++ Var(flag_no_builtin, 0)Recognize built-in functions.
fbuiltinD Var(flag_no_builtin, 0)
fbuiltin-C ObjC C++ ObjC++ Joined
fbuiltin-Fortran Joined
fbuiltin-printfAda UndocumentedIgnored.
fc-prototypesFortran Var(flag_c_prototypes)Generate C prototypes from BIND(C) declarations.
fc-prototypes-externalFortran Var(flag_c_prototypes_external)Generate C prototypes from non-BIND(C) external procedure definitions.
fcall-saved-Common Joined RejectNegative Var(common_deferred_options) Defer-fcall-saved-<register>	Mark <register> as being preserved across functions.
fcall-used-Common Joined RejectNegative Var(common_deferred_options) Defer-fcall-used-<register>	Mark <register> as being corrupted by function calls.
fcaller-savesCommon Var(flag_caller_saves) OptimizationSave registers around function calls.
fcaller-savesUrlSuffix(gcc/Optimize-Options.html#index-fcaller-saves)
fcallgraph-infoCommon RejectNegative Var(flag_callgraph_info) Init(NO_CALLGRAPH_INFO);Output callgraph information on a per-file basis.
fcallgraph-infoUrlSuffix(gcc/Developer-Options.html#index-fcallgraph-info)
fcallgraph-info=Common RejectNegative JoinedOutput callgraph information on a per-file basis with decorations.
fcallgraph-info=UrlSuffix(gcc/Developer-Options.html#index-fcallgraph-info)
fcanon-prefix-mapCommon Var(common_deferred_options) DeferFor -f*-prefix-map= options compare canonicalized pathnames rather than just strings.
fcanon-prefix-mapUrlSuffix(gcc/Overall-Options.html#index-fcanon-prefix-map)
fcanonical-system-headersC ObjC C++ ObjC++Where shorter, use canonicalized paths to systems headers.
fcanonical-system-headersUrlSuffix(gcc/Preprocessor-Options.html#index-fno-canonical-system-headers)
fcaseModula-2turns on runtime checking to check whether a CASE statement requires an ELSE clause when one was not specified
fcf-protectionCommon RejectNegative Alias(fcf-protection=,full)
fcf-protectionUrlSuffix(gcc/Instrumentation-Options.html#index-fcf-protection)
fcf-protection=Common Joined RejectNegative Enum(cf_protection_level) EnumSet Var(flag_cf_protection) Init(CF_NONE)-fcf-protection=[full|branch|return|none|check]	Instrument functions with checks to verify jump/call/return control-flow transferinstructions have valid targets.
fcf-protection=UrlSuffix(gcc/Instrumentation-Options.html#index-fcf-protection)
fchar8_tC++ ObjC++ Var(flag_char8_t) Init(-1)Enable the char8_t fundamental type and use it as the type for UTF-8 stringand character literals.
fchar8_tUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fchar8_005ft)
fcheck-array-temporariesFortranProduce a warning at runtime if a array temporary has been created for a procedure argument.
fcheck-array-temporariesLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fcheck-array-temporaries)
fcheck-data-depsCommon IgnoreThis switch is deprecated; do not use.
fcheck-newCommon Var(flag_check_new)Check the return value of new in C++.
fcheck-newUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcheck-new)
fcheck-pointer-boundsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fcheck=Fortran RejectNegative JoinedOrMissing-fcheck=[...]	Specify which runtime checks are to be performed.
fcheck=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fcheck)
fcheck=assertD Alias(fassert)
fcheck=boundsD Alias(fbounds-check)
fcheck=inD Alias(fpreconditions)
fcheck=invariantD Alias(finvariants)
fcheck=outD Alias(fpostconditions)
fcheck=switchD Alias(fswitch-errors)
fcheckaction=D Joined RejectNegative Enum(check_action) Var(flag_check_action)-fcheckaction=[throw,halt,context]	Behavior on contract failure.
fcheckaction=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fcheckaction)
fcheckingCommon Var(flag_checking) Init(CHECKING_P ? ENABLE_EXTRA_CHECKING ? 2 : 1 : 0)Perform internal consistency checkings.
fcheckingUrlSuffix(gcc/Developer-Options.html#index-fchecking)
fchecking=Common Joined RejectNegative UInteger Var(flag_checking)Perform internal consistency checkings.
fchecking=UrlSuffix(gcc/Developer-Options.html#index-fchecking)
fchkp-check-incomplete-typeC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-check-readC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-check-writeC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-first-field-has-own-boundsC ObjC C++ ObjC++ LTO WarnRemoved RejectNegativeRemoved in GCC 9.  This switch has no effect.
fchkp-flexible-struct-trailing-arraysC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-instrument-callsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-instrument-marked-onlyC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-narrow-boundsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-narrow-to-innermost-arrayC ObjC C++ ObjC++ LTO WarnRemoved RejectNegativeRemoved in GCC 9.  This switch has no effect.
fchkp-optimizeC ObjC C++ ObjC++ LTO WarnRemoved
fchkp-store-boundsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-treat-zero-dynamic-size-as-infiniteC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-use-fast-string-functionsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-use-nochk-string-functionsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-use-static-boundsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-use-static-const-boundsC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-use-wrappersC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fchkp-zero-input-bounds-for-mainC ObjC C++ ObjC++ LTO WarnRemovedRemoved in GCC 9.  This switch has no effect.
fcilkplusC ObjC C++ ObjC++ LTO Undocumented IgnoreRemoved in GCC 8.  This switch has no effect.
fcoarray=Fortran RejectNegative Joined Enum(gfc_fcoarray) Var(flag_coarray) Init(GFC_FCOARRAY_NONE)-fcoarray=<none|single|lib>	Specify which coarray parallelization should be used.
fcoarray=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fcoarray)
fcode-hoistingCommon Var(flag_code_hoisting) OptimizationEnable code hoisting.
fcode-hoistingUrlSuffix(gcc/Optimize-Options.html#index-fcode-hoisting)
fcombine-stack-adjustmentsCommon Var(flag_combine_stack_adjustments) OptimizationLooks for opportunities to reduce stack adjustments and stack references.
fcombine-stack-adjustmentsUrlSuffix(gcc/Optimize-Options.html#index-fcombine-stack-adjustments)
fcommonCommon Var(flag_no_common,0) Init(1)Put uninitialized globals in the common section.
fcommonUrlSuffix(gcc/Code-Gen-Options.html#index-fcommon)
fcompare-debugDriver
fcompare-debugUrlSuffix(gcc/Developer-Options.html#index-fcompare-debug)
fcompare-debug-secondCommon Driver RejectNegative Var(flag_compare_debug)Run only the second compilation of -fcompare-debug.
fcompare-debug-secondUrlSuffix(gcc/Developer-Options.html#index-fcompare-debug-second)
fcompare-debug=Common Driver JoinedOrMissing RejectNegative Var(flag_compare_debug_opt)-fcompare-debug[=<opts>]	Compile with and without e.g. -gtoggle, and compare the final-insns dump.
fcompare-debug=UrlSuffix(gcc/Developer-Options.html#index-fcompare-debug)
fcompare-elimCommon Var(flag_compare_elim_after_reload) OptimizationPerform comparison elimination after register allocation has finished.
fcompare-elimUrlSuffix(gcc/Optimize-Options.html#index-fcompare-elim)
fconceptsC++ ObjC++ Var(flag_concepts)Enable support for C++ concepts.
fconceptsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconcepts)
fconcepts-diagnostics-depth=C++ ObjC++ Joined RejectNegative UInteger Var(concepts_diagnostics_max_depth) Init(1)Specify maximum error replay depth during recursive diagnosis of a constraint satisfaction failure.
fconcepts-tsC++ ObjC++ WarnRemovedRemoved in GCC 15.  This switch has no effect.
fcond-mismatchC ObjC C++ ObjC++Allow the arguments of the '?' operator to have different types.
fcond-mismatchUrlSuffix(gcc/C-Dialect-Options.html#index-fcond-mismatch)
fcondition-coverageCommon Var(condition_coverage_flag)Insert condition coverage profiling code.
fcondition-coverageUrlSuffix(gcc/Instrumentation-Options.html#index-fcondition-coverage)
fconserve-spaceC++ ObjC++ IgnoreDoes nothing.  Preserved for backward compatibility.
fconserve-stackCommon Var(flag_conserve_stack) OptimizationDo not perform optimizations increasing noticeably stack usage.
fconserve-stackUrlSuffix(gcc/Optimize-Options.html#index-fconserve-stack)
fconstant-string-class=ObjC ObjC++ Joined MissingArgError(no class name specified with %qs)-fconst-string-class=<name>	Use class <name> for constant strings.
fconstant-string-class=UrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fconstant-string-class)
fconstexpr-cache-depth=C++ ObjC++ Joined RejectNegative UInteger Var(constexpr_cache_depth) Init(8)-fconstexpr-cache-depth=<number>	Specify maximum constexpr recursion cache depth.
fconstexpr-cache-depth=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconstexpr-cache-depth)
fconstexpr-depth=C++ ObjC++ Joined RejectNegative UInteger Var(max_constexpr_depth) Init(512)-fconstexpr-depth=<number>	Specify maximum constexpr recursion depth.
fconstexpr-depth=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconstexpr-depth)
fconstexpr-fp-exceptC++ ObjC++ Var(flag_constexpr_fp_except) Init(0)Allow IEC559 floating point exceptions in constant expressions.
fconstexpr-fp-exceptUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconstexpr-fp-except)
fconstexpr-loop-limit=C++ ObjC++ Joined RejectNegative UInteger Var(constexpr_loop_limit) Init(262144)-fconstexpr-loop-limit=<number>	Specify maximum constexpr loop iteration count.
fconstexpr-loop-limit=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconstexpr-loop-limit)
fconstexpr-ops-limit=C++ ObjC++ Joined RejectNegative Host_Wide_Int Var(constexpr_ops_limit) Init(33554432)-fconstexpr-ops-limit=<number>	Specify maximum number of constexpr operations during a single constexpr evaluation.
fconstexpr-ops-limit=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fconstexpr-ops-limit)
fcontract-assumption-mode=C++ Joined RejectNegative-fcontract-assumption-mode=[on|off]	Enable or disable treating axiom level contracts as assumptions (default on).
fcontract-assumption-mode=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-assumption-mode)
fcontract-build-level=C++ Joined RejectNegative-fcontract-build-level=[off|default|audit]	Specify max contract level to generate runtime checks for.
fcontract-build-level=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-build-level)
fcontract-continuation-mode=C++ Joined RejectNegative-fcontract-continuation-mode=[on|off]	Enable or disable contract continuation mode (default off).
fcontract-continuation-mode=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-continuation-mode)
fcontract-mode=C++ Var(flag_contract_mode) Enum(on_off) Joined Init(1) RejectNegative-fcontract-mode=[on|off]	Enable or disable all contract facilities (default on).
fcontract-mode=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-mode)
fcontract-role=C++ Joined RejectNegative-fcontract-role=<name>:<semantics>	Specify the semantics for all levels in a role (default, review), or a custom contract role with given semantics (ex: opt:assume,assume,assume).
fcontract-role=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-role)
fcontract-semantic=C++ Joined RejectNegative-fcontract-semantic=<level>:<semantic>	Specify the concrete semantics for level.
fcontract-strict-declarations=C++ Var(flag_contract_strict_declarations) Enum(on_off) Joined Init(0) RejectNegative-fcontract-strict-declarations=[on|off]	Enable or disable warnings on generalized redeclaration of functions with contracts (default off).
fcontract-strict-declarations=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontract-strict-declarations)
fcontractsC++ ObjC++ Var(flag_contracts) Init(0)Enable certain features present in drafts of C++ Contracts.
fcontractsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcontracts)
fconvert=Fortran RejectNegative Joined Enum(gfc_convert) EnumSet Var(flag_convert) Init(GFC_FLAG_CONVERT_NATIVE)-fconvert=<big-endian|little-endian|native|swap|r16_ieee|r16_ibm>	The endianness used for unformatted files.
fcoroutinesC++ LTO Var(flag_coroutines)Enable C++ coroutines (experimental).
fcoroutinesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fcoroutines)
fcppModula-2use cpp to preprocess the module
fcpp-beginModula-2passed to the preprocessor if -fcpp is used (internal switch)
fcpp-endModula-2passed to the preprocessor if -fcpp is used (internal switch)
fcprop-registersCommon Var(flag_cprop_registers) OptimizationPerform a register copy-propagation optimization pass.
fcprop-registersUrlSuffix(gcc/Optimize-Options.html#index-fcprop-registers)
fcray-pointerFortran Var(flag_cray_pointer)Use the Cray Pointer extension.
fcray-pointerLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fcray-pointer)
fcrossjumpingCommon Var(flag_crossjumping) OptimizationPerform cross-jumping optimization.
fcrossjumpingUrlSuffix(gcc/Optimize-Options.html#index-fcrossjumping)
fcse-follow-jumpsCommon Var(flag_cse_follow_jumps) OptimizationWhen running CSE, follow jumps to their targets.
fcse-follow-jumpsUrlSuffix(gcc/Optimize-Options.html#index-fcse-follow-jumps)
fcse-skip-blocksCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fcse-skip-blocksUrlSuffix(gcc/Optimize-Options.html#index-fcse-skip-blocks)
fcx-fortran-rulesCommon Var(flag_cx_fortran_rules) OptimizationComplex multiplication and division follow Fortran rules.
fcx-fortran-rulesUrlSuffix(gcc/Optimize-Options.html#index-fcx-fortran-rules)
fcx-limited-rangeCommon Var(flag_cx_limited_range) Optimization SetByCombinedOmit range reduction step when performing complex division.
fcx-limited-rangeUrlSuffix(gcc/Optimize-Options.html#index-fcx-limited-range)
fdModula-2turn on internal debugging of the compiler (internal switch)
fd-lines-as-codeFortran RejectNegativeIgnore 'D' in column one in fixed form.
fd-lines-as-codeLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fd-lines-as-code)
fd-lines-as-commentsFortran RejectNegativeTreat lines with 'D' in column one as comments.
fd-lines-as-commentsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fd-lines-as-comments)
fdata-sectionsCommon Var(flag_data_sections)Place data items into their own section.
fdata-sectionsUrlSuffix(gcc/Optimize-Options.html#index-fdata-sections)
fdbg-cnt-listCommon Var(flag_dbg_cnt_list)List all available debugging counters with their limits and counts.
fdbg-cnt-listUrlSuffix(gcc/Developer-Options.html#index-fdbg-cnt-list)
fdbg-cnt=Common RejectNegative Joined Var(common_deferred_options) Defer-fdbg-cnt=<counter>[:<lower_limit1>-]<upper_limit1>[:<lower_limit2>-<upper_limit2>:...][,<counter>:...]	Set the debug counter limit.
fdbg-cnt=UrlSuffix(gcc/Developer-Options.html#index-fdbg-cnt)
fdceCommon Var(flag_dce) Init(1) OptimizationUse the RTL dead code elimination pass.
fdceUrlSuffix(gcc/Optimize-Options.html#index-fdce)
fdebugDCompile in debug code.
fdebugLangUrlSuffix_D(gdc/Runtime-Options.html#index-fdebug)
fdebug-aux-varsFortran Var(flag_debug_aux_vars)Issue debug information for compiler-generated auxiliary variables.
fdebug-aux-varsLangUrlSuffix_Fortran(gfortran/Debugging-Options.html#index-fdebug-aux-vars)
fdebug-builtinsModula-2call a real function, rather than the builtin equivalent
fdebug-cppC ObjC C++ ObjC++Emit debug annotations during preprocessing.
fdebug-cppUrlSuffix(gcc/Preprocessor-Options.html#index-fdebug-cpp)
fdebug-function-line-numbersModula-2turn on tracing of procedure line numbers (internal switch)
fdebug-prefix-map=Common Joined RejectNegative Var(common_deferred_options) Defer-fdebug-prefix-map=<old>=<new>	Map one directory name to another in debug information.
fdebug-prefix-map=UrlSuffix(gcc/Debugging-Options.html#index-fdebug-prefix-map)
fdebug-types-sectionCommon Var(flag_debug_types_section) Init(0)Output .debug_types section when using DWARF v4 debuginfo.
fdebug-types-sectionUrlSuffix(gcc/Debugging-Options.html#index-fdebug-types-section)
fdebug=D Joined RejectNegative-fdebug=<ident>	Compile in debug code identified by <ident>.
fdebug=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fdebug)
fdecFortran Var(flag_dec)Enable all DEC language extensions.
fdecLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec)
fdec-blank-format-itemFortran Var(flag_dec_blank_format_item)Enable the use of blank format items in format strings.
fdec-blank-format-itemLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-blank-format-item)
fdec-char-conversionsFortran Var(flag_dec_char_conversions)Enable the use of character literals in assignments and data statementsfor non-character variables.
fdec-char-conversionsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-char-conversions)
fdec-format-defaultsFortran Var(flag_dec_format_defaults)Enable default widths for i, f and g format specifiers.
fdec-format-defaultsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-format-defaults)
fdec-includeFortran Var(flag_dec_include)Enable legacy parsing of INCLUDE as statement.
fdec-includeLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-include)
fdec-intrinsic-intsFortran Var(flag_dec_intrinsic_ints)Enable kind-specific variants of integer intrinsic functions.
fdec-intrinsic-intsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-intrinsic-ints)
fdec-mathFortran Var(flag_dec_math)Enable legacy math intrinsics for compatibility.
fdec-mathLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-math)
fdec-staticFortran Var(flag_dec_static)Enable DEC-style STATIC and AUTOMATIC attributes.
fdec-staticLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-static)
fdec-structureFortran Var(flag_dec_structure)Enable support for DEC STRUCTURE/RECORD.
fdec-structureLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdec-structure)
fdeclone-ctor-dtorC++ ObjC++ Var(flag_declone_ctor_dtor) Init(-1)Factor complex constructors and destructors to favor space over speed.
fdeclone-ctor-dtorUrlSuffix(gcc/Optimize-Options.html#index-fdeclone-ctor-dtor)
fdeduce-init-listC++ ObjC++ IgnoreDoes nothing.  Preserved for backward compatibility.
fdef=Modula-2 Joinedrecognize the specified suffix as a definition module filename
fdefault-double-8Fortran Var(flag_default_double)Set the default double precision kind to an 8 byte wide type.
fdefault-double-8LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdefault-double-8)
fdefault-inlineC++ ObjC++ IgnoreDoes nothing.  Preserved for backward compatibility.
fdefault-inlineUrlSuffix(gcc/Inline.html#index-fno-default-inline)
fdefault-integer-8Fortran Var(flag_default_integer)Set the default integer kind to an 8 byte wide type.
fdefault-integer-8LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdefault-integer-8)
fdefault-real-10Fortran Var(flag_default_real_10)Set the default real kind to an 10 byte wide type.
fdefault-real-10LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdefault-real-10)
fdefault-real-16Fortran Var(flag_default_real_16)Set the default real kind to an 16 byte wide type.
fdefault-real-16LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdefault-real-16)
fdefault-real-8Fortran Var(flag_default_real_8)Set the default real kind to an 8 byte wide type.
fdefault-real-8LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdefault-real-8)
fdefer-popCommon Var(flag_defer_pop) OptimizationDefer popping functions args from stack until later.
fdefer-popUrlSuffix(gcc/Optimize-Options.html#index-fdefer-pop)
fdelayed-branchCommon Var(flag_delayed_branch) OptimizationAttempt to fill delay slots of branch instructions.
fdelayed-branchUrlSuffix(gcc/Optimize-Options.html#index-fdelayed-branch)
fdelete-dead-exceptionsCommon Var(flag_delete_dead_exceptions) Init(0) OptimizationDelete dead instructions that may throw exceptions.
fdelete-dead-exceptionsUrlSuffix(gcc/Code-Gen-Options.html#index-fdelete-dead-exceptions)
fdelete-null-pointer-checksCommon Var(flag_delete_null_pointer_checks) Init(-1) OptimizationDelete useless null pointer checks.
fdelete-null-pointer-checksUrlSuffix(gcc/Optimize-Options.html#index-fdelete-null-pointer-checks)
fdeps-file=C ObjC C++ ObjC++ NoDriverArg Joined MissingArgError(missing output path after %qs)File for output dependency information.
fdeps-file=UrlSuffix(gcc/C-Dialect-Options.html#index-fdeps-file)
fdeps-format=C ObjC C++ ObjC++ NoDriverArg Joined MissingArgError(missing format after %qs)Structured format for output dependency information.  Supported (\"p1689r5\").
fdeps-format=UrlSuffix(gcc/C-Dialect-Options.html#index-fdeps-format)
fdeps-target=C ObjC C++ ObjC++ NoDriverArg Joined MissingArgError(missing path after %qs)-fdeps-target=obj.o Output file for the compile step.
fdeps-target=UrlSuffix(gcc/C-Dialect-Options.html#index-fdeps-target)
fdevirtualizeCommon Var(flag_devirtualize) OptimizationTry to convert virtual calls to direct ones.
fdevirtualizeUrlSuffix(gcc/Optimize-Options.html#index-fdevirtualize)
fdevirtualize-at-ltransCommon Var(flag_ltrans_devirtualize)Stream extra data to support more aggressive devirtualization in LTO local transformation mode.
fdevirtualize-at-ltransUrlSuffix(gcc/Optimize-Options.html#index-fdevirtualize-at-ltrans)
fdevirtualize-speculativelyCommon Var(flag_devirtualize_speculatively) OptimizationPerform speculative devirtualization.
fdevirtualize-speculativelyUrlSuffix(gcc/Optimize-Options.html#index-fdevirtualize-speculatively)
fdiagnostics-add-output=Common Joined RejectNegativeAdd output format.
fdiagnostics-add-output=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-add-output)
fdiagnostics-all-candidatesC++ ObjC++ Var(flag_diagnostics_all_candidates)Note all candidates during overload resolution failure.
fdiagnostics-all-candidatesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fdiagnostics-all-candidates)
fdiagnostics-colorCommon Alias(fdiagnostics-color=,always,never)
fdiagnostics-colorUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-color)
fdiagnostics-color=Driver Common Joined RejectNegative Var(flag_diagnostics_show_color) Enum(diagnostic_color_rule) Init(DIAGNOSTICS_COLOR_NO)-fdiagnostics-color=[never|always|auto]	Colorize diagnostics.
fdiagnostics-color=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-color)
fdiagnostics-column-origin=Common Joined RejectNegative UInteger-fdiagnostics-column-origin=<number>	Set the number of the first column.  The default is 1-based as per GNU style, but some utilities may expect 0-based, for example.
fdiagnostics-column-origin=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-column-origin)
fdiagnostics-column-unit=Common Joined RejectNegative Enum(diagnostics_column_unit)-fdiagnostics-column-unit=[display|byte]	Select whether column numbers are output as display columns (default) or raw bytes.
fdiagnostics-column-unit=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-column-unit)
fdiagnostics-escape-format=Common Joined RejectNegative Enum(diagnostics_escape_format)-fdiagnostics-escape-format=[unicode|bytes]	Select how to escape non-printable-ASCII bytes in the source for diagnostics that suggest it.
fdiagnostics-escape-format=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-escape-format)
fdiagnostics-format=Common Joined RejectNegative Enum(diagnostics_output_format)-fdiagnostics-format=[text|sarif-stderr|sarif-file|json|json-stderr|json-file]	Select output format.
fdiagnostics-format=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-format)
fdiagnostics-generate-patchCommon Var(flag_diagnostics_generate_patch)Print fix-it hints to stderr in unified diff format.
fdiagnostics-generate-patchUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-generate-patch)
fdiagnostics-json-formattingCommon Var(flag_diagnostics_json_formatting) Init(1)Enable formatting of JSON output.
fdiagnostics-json-formattingUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-json-formatting)
fdiagnostics-minimum-margin-width=Common Joined UInteger Var(diagnostics_minimum_margin_width) Init(6)Set minimum width of left margin of source code when showing source.
fdiagnostics-minimum-margin-width=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-minimum-margin-width)
fdiagnostics-parseable-fixitsCommon Var(flag_diagnostics_parseable_fixits)Print fix-it hints in machine-readable form.
fdiagnostics-parseable-fixitsUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-parseable-fixits)
fdiagnostics-path-format=Common Joined RejectNegative Var(flag_diagnostics_path_format) Enum(diagnostic_path_format) Init(DPF_INLINE_EVENTS)Specify how to print any control-flow path associated with a diagnostic.
fdiagnostics-path-format=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-path-format)
fdiagnostics-plain-outputDriver Common RejectNegativeTurn off any diagnostics features that complicate the output, such as line numbers, color, and warning URLs.
fdiagnostics-set-output=Common Joined RejectNegativeSet output format.
fdiagnostics-set-output=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-set-output)
fdiagnostics-show-caretCommon Var(flag_diagnostics_show_caret) Init(1)Show the source line with a caret indicating the column.
fdiagnostics-show-caretUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-caret)
fdiagnostics-show-cweCommon Var(flag_diagnostics_show_cwe) Init(1)Print CWE identifiers for diagnostic messages, where available.
fdiagnostics-show-cweUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-cwe)
fdiagnostics-show-event-linksCommon Var(flag_diagnostics_show_event_links) Init(1)Show lines linking related events in diagnostic paths.
fdiagnostics-show-event-linksUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-event-links)
fdiagnostics-show-highlight-colorsCommon Var(flag_diagnostics_show_highlight_colors) Init(1)Use color within diagnostic messages to highlight pertinent information.
fdiagnostics-show-highlight-colorsUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-highlight-colors)
fdiagnostics-show-labelsCommon Var(flag_diagnostics_show_labels) Init(1)Show labels annotating ranges of source code when showing source.
fdiagnostics-show-labelsUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-labels)
fdiagnostics-show-line-numbersCommon Var(flag_diagnostics_show_line_numbers) Init(1)Show line numbers in the left margin when showing source.
fdiagnostics-show-line-numbersUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-line-numbers)
fdiagnostics-show-location=Common Joined RejectNegative Enum(diagnostic_prefixing_rule)-fdiagnostics-show-location=[once|every-line]	How often to emit source location at the beginning of line-wrapped diagnostics.
fdiagnostics-show-location=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-location)
fdiagnostics-show-optionCommon Var(flag_diagnostics_show_option) Init(1)Amend appropriate diagnostic messages with the command line option that controls them.
fdiagnostics-show-optionUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-option)
fdiagnostics-show-path-depthsCommon Var(flag_diagnostics_show_path_depths) Init(0)Show stack depths of events in paths.
fdiagnostics-show-path-depthsUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-path-depths)
fdiagnostics-show-rulesCommon Var(flag_diagnostics_show_rules) Init(1)Print any rules associated with diagnostic messages.
fdiagnostics-show-rulesUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-rules)
fdiagnostics-show-template-treeC++ ObjC++ Var(flag_diagnostics_show_template_tree) Init(0)Print hierarchical comparisons when template types are mismatched.
fdiagnostics-show-template-treeUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-show-template-tree)
fdiagnostics-text-art-charset=Driver Common Joined RejectNegative Var(flag_diagnostics_text_art_charset) Enum(diagnostic_text_art_charset) Init(DIAGNOSTICS_TEXT_ART_CHARSET_EMOJI)-fdiagnostics-text-art-charset=[none|ascii|unicode|emoji]	Determine which characters to use in text arg diagrams.
fdiagnostics-text-art-charset=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-text-art-charset)
fdiagnostics-urls=Driver Common Joined RejectNegative Var(flag_diagnostics_show_urls) Enum(diagnostic_url_rule) Init(DIAGNOSTICS_URL_AUTO)-fdiagnostics-urls=[never|always|auto]	Embed URLs in diagnostics.
fdiagnostics-urls=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-urls)
fdirectives-onlyC ObjC C++ ObjC++Preprocess directives only.
fdirectives-onlyUrlSuffix(gcc/Preprocessor-Options.html#index-fdirectives-only)
fdisable-Common Joined RejectNegative Var(common_deferred_options) Defer-fdisable-[tree|rtl|ipa]-<pass>=range1+range2	Disable an optimization pass.
fdisable-UrlSuffix(gcc/Developer-Options.html#index-fdisable-)
fdocDGenerate documentation.
fdocLangUrlSuffix_D(gdc/Code-Generation.html#index-fdoc)
fdoc-dir=D Joined RejectNegative-fdoc-dir=<dir>	Write documentation file to directory <dir>.
fdoc-dir=LangUrlSuffix_D(gdc/Code-Generation.html#index-fdoc-dir)
fdoc-file=D Joined RejectNegative-fdoc-file=<file>	Write documentation to <file>.
fdoc-file=LangUrlSuffix_D(gdc/Code-Generation.html#index-fdoc-file)
fdoc-inc=D Joined RejectNegative-fdoc-inc=<file>	Include a Ddoc macro <file>.
fdoc-inc=LangUrlSuffix_D(gdc/Code-Generation.html#index-fdoc-inc)
fdollar-okFortran Var(flag_dollar_ok)Allow dollar signs in entity names.
fdollar-okLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fdollar-ok)
fdollars-in-identifiersC ObjC C++ ObjC++Permit '$' as an identifier character.
fdruntimeDAssume that standard D runtime libraries and \"D main\" exist.
fdruntimeLangUrlSuffix_D(gdc/Runtime-Options.html#index-fdruntime)
fdseCommon Var(flag_dse) Init(0) OptimizationUse the RTL dead store elimination pass.
fdseUrlSuffix(gcc/Optimize-Options.html#index-fdse)
fdump-Common Joined RejectNegative Var(common_deferred_options) Defer-fdump-<type>	Dump various compiler internals to a file.
fdump-ada-specC ObjC C++ ObjC++ RejectNegative Var(flag_dump_ada_spec)Write all declarations as Ada code transitively.
fdump-ada-specUrlSuffix(gcc/Overall-Options.html#index-fdump-ada-spec)
fdump-ada-spec-slimC ObjC C++ ObjC++ RejectNegative Var(flag_dump_ada_spec_slim)Write all declarations as Ada code for the given file only.
fdump-analyzerCommon RejectNegative Var(flag_dump_analyzer)Dump various analyzer internals to SRCFILE.analyzer.txt.
fdump-analyzerUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer)
fdump-analyzer-callgraphCommon RejectNegative Var(flag_dump_analyzer_callgraph)Dump analyzer-specific call graph information to a SRCFILE.callgraph.dot file.
fdump-analyzer-callgraphUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-callgraph)
fdump-analyzer-exploded-graphCommon RejectNegative Var(flag_dump_analyzer_exploded_graph)Dump the analyzer exploded graph to a SRCFILE.eg.dot file.
fdump-analyzer-exploded-graphUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-exploded-graph)
fdump-analyzer-exploded-nodesCommon RejectNegative Var(flag_dump_analyzer_exploded_nodes)Emit diagnostics showing the location of nodes in the exploded graph.
fdump-analyzer-exploded-nodes-2Common RejectNegative Var(flag_dump_analyzer_exploded_nodes_2)Dump a textual representation of the exploded graph to SRCFILE.eg.txt.
fdump-analyzer-exploded-nodes-3Common RejectNegative Var(flag_dump_analyzer_exploded_nodes_3)Dump a textual representation of the exploded graph to SRCFILE.eg-ID.txt.
fdump-analyzer-exploded-pathsCommon RejectNegative Var(flag_dump_analyzer_exploded_paths)Dump a textual representation of each diagnostic's exploded path to SRCFILE.IDX.KIND.epath.txt.
fdump-analyzer-exploded-pathsUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-exploded-paths)
fdump-analyzer-feasibilityCommon RejectNegative Var(flag_dump_analyzer_feasibility)Dump various analyzer internals to SRCFILE.*.fg.dot and SRCFILE.*.tg.dot.
fdump-analyzer-infinite-loopCommon RejectNegative Var(flag_dump_analyzer_infinite_loop)Dump various analyzer internals to SRCFILE.*.infinite-loop.dot.
fdump-analyzer-jsonCommon RejectNegative Var(flag_dump_analyzer_json)Dump analyzer-specific data to a SRCFILE.analyzer.json.gz file.
fdump-analyzer-jsonUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-json)
fdump-analyzer-state-purgeCommon RejectNegative Var(flag_dump_analyzer_state_purge)Dump state-purging information to a SRCFILE.state-purge.dot file.
fdump-analyzer-state-purgeUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-state-purge)
fdump-analyzer-stderrCommon RejectNegative Var(flag_dump_analyzer_stderr)Dump various analyzer internals to stderr.
fdump-analyzer-stderrUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-stderr)
fdump-analyzer-supergraphCommon RejectNegative Var(flag_dump_analyzer_supergraph)Dump the analyzer supergraph to a SRCFILE.supergraph.dot file.
fdump-analyzer-supergraphUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-supergraph)
fdump-analyzer-untrackedCommon RejectNegative Var(flag_dump_analyzer_untracked)Emit custom warnings with internal details intended for analyzer developers.
fdump-analyzer-untrackedUrlSuffix(gcc/Static-Analyzer-Options.html#index-fdump-analyzer-untracked)
fdump-c++-spec-verboseD RejectNegativeAdd comments for ignored declarations in the generated C++ header.
fdump-c++-spec=D RejectNegative Joined-fdump-cxx-spec=<filename>	Write all declarations as C++ code to <filename>.
fdump-coreFortran IgnoreDoes nothing. Preserved for backward compatibility.
fdump-d-originalDDisplay the frontend AST after parsing and semantic passes.
fdump-d-originalLangUrlSuffix_D(gdc/Developer-Options.html#index-fdump-d-original)
fdump-final-insnsDriver RejectNegative
fdump-final-insnsUrlSuffix(gcc/Developer-Options.html#index-fdump-final-insns)
fdump-final-insns=Common RejectNegative Joined Var(flag_dump_final_insns)-fdump-final-insns=filename	Dump to filename the insns at the end of translation.
fdump-final-insns=UrlSuffix(gcc/Developer-Options.html#index-fdump-final-insns)
fdump-fortran-globalFortran Var(flag_dump_fortran_global)Display the global symbol table after parsing.
fdump-fortran-globalLangUrlSuffix_Fortran(gfortran/Developer-Options.html#index-fdump-fortran-global)
fdump-fortran-optimizedFortran Var(flag_dump_fortran_optimized)Display the code tree after front end optimization.
fdump-fortran-optimizedLangUrlSuffix_Fortran(gfortran/Developer-Options.html#index-fdump-fortran-optimized)
fdump-fortran-originalFortran Var(flag_dump_fortran_original)Display the code tree after parsing.
fdump-fortran-originalLangUrlSuffix_Fortran(gfortran/Developer-Options.html#index-fdump-fortran-original)
fdump-go-spec=Common RejectNegative Joined Var(flag_dump_go_spec)-fdump-go-spec=filename	Write all declarations to file as Go code.
fdump-go-spec=UrlSuffix(gcc/Overall-Options.html#index-fdump-go-spec)
fdump-internal-locationsCommon Var(flag_dump_locations) Init(0)Dump detailed information on GCC's internal representation of source code locations.
fdump-noaddrCommon Var(flag_dump_noaddr)Suppress output of addresses in debugging dumps.
fdump-noaddrUrlSuffix(gcc/Developer-Options.html#index-fdump-noaddr)
fdump-parse-treeFortran Alias(fdump-fortran-original)Display the code tree after parsing; deprecated option.
fdump-parse-treeLangUrlSuffix_Fortran(gfortran/Developer-Options.html#index-fdump-parse-tree)
fdump-passesCommon Var(flag_dump_passes) Init(0)Dump optimization passes.
fdump-passesUrlSuffix(gcc/Developer-Options.html#index-fdump-passes)
fdump-scosAda RejectNegative Var(flag_dump_scos) Init(0)Dump Source Coverage Obligations.
fdump-system-exportsModula-2display all inbuilt system items
fdump-unnumberedCommon Var(flag_dump_unnumbered)Suppress output of instruction numbers, line number notes and addresses in debugging dumps.
fdump-unnumberedUrlSuffix(gcc/Developer-Options.html#index-fdump-unnumbered)
fdump-unnumbered-linksCommon Var(flag_dump_unnumbered_links)Suppress output of previous and next insn numbers in debugging dumps.
fdump-unnumbered-linksUrlSuffix(gcc/Developer-Options.html#index-fdump-unnumbered-links)
fdwarf2-cfi-asmCommon Var(flag_dwarf2_cfi_asm) Init(HAVE_GAS_CFI_DIRECTIVE)Enable CFI tables via GAS assembler directives.
fdwarf2-cfi-asmUrlSuffix(gcc/Debugging-Options.html#index-fdwarf2-cfi-asm)
fearly-inliningCommon Var(flag_early_inlining) Init(1) OptimizationPerform early inlining.
fearly-inliningUrlSuffix(gcc/Optimize-Options.html#index-fearly-inlining)
felide-constructorsC++ ObjC++ Var(flag_elide_constructors) Init(1)
felide-constructorsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-felide-constructors)
felide-typeC++ ObjC++ Var(flag_elide_type) Init(1)Do not elide common elements in template comparisons.
felide-typeUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-felide-type)
feliminate-dwarf2-dupsCommon IgnoreDoes nothing.  Preserved for backward compatibility.
feliminate-unused-debug-symbolsCommon Var(flag_debug_only_used_symbols) Init(1)Perform unused symbol elimination in debug info.
feliminate-unused-debug-symbolsUrlSuffix(gcc/Debugging-Options.html#index-feliminate-unused-debug-symbols)
feliminate-unused-debug-typesCommon Var(flag_eliminate_unused_debug_types) Init(1)Perform unused type elimination in debug info.
feliminate-unused-debug-typesUrlSuffix(gcc/Debugging-Options.html#index-feliminate-unused-debug-types)
femit-class-debug-alwaysCommon Var(flag_emit_class_debug_always) Init(0)Do not suppress C++ class debug information.
femit-class-debug-alwaysUrlSuffix(gcc/Debugging-Options.html#index-femit-class-debug-always)
femit-struct-debug-baseonlyC ObjC C++ ObjC++-femit-struct-debug-baseonly	Aggressive reduced debug info for structs.
femit-struct-debug-baseonlyUrlSuffix(gcc/Debugging-Options.html#index-femit-struct-debug-baseonly)
femit-struct-debug-detailed=C ObjC C++ ObjC++ Joined-femit-struct-debug-detailed=<spec-list>	Detailed reduced debug info for structs.
femit-struct-debug-detailed=UrlSuffix(gcc/Debugging-Options.html#index-femit-struct-debug-detailed)
femit-struct-debug-reducedC ObjC C++ ObjC++-femit-struct-debug-reduced	Conservative reduced debug info for structs.
femit-struct-debug-reducedUrlSuffix(gcc/Debugging-Options.html#index-femit-struct-debug-reduced)
fenable-Common Joined RejectNegative Var(common_deferred_options) Defer-fenable-[tree|rtl|ipa]-<pass>=range1+range2	Enable an optimization pass.
fenable-UrlSuffix(gcc/Developer-Options.html#index-fenable-)
fenforce-eh-specsC++ ObjC++ Var(flag_enforce_eh_specs) Init(1)Generate code to check exception specifications.
fenforce-eh-specsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fenforce-eh-specs)
fenum-int-equivC++ ObjC++ WarnRemoved
fexceptionsCommon Var(flag_exceptions) Optimization EnabledBy(fnon-call-exceptions)Enable exception handling.
fexceptionsD
fexceptionsModula-2
fexceptionsUrlSuffix(gcc/Code-Gen-Options.html#index-fexceptions)
fexceptionsUrlSuffix(gcc/Code-Gen-Options.html#index-fexceptions)
fexceptionsUrlSuffix(gcc/Code-Gen-Options.html#index-fexceptions)
fexcess-precision=Common Joined RejectNegative Enum(excess_precision) Var(flag_excess_precision) Init(EXCESS_PRECISION_DEFAULT) Optimization SetByCombined-fexcess-precision=[fast|standard|16]	Specify handling of excess floating-point precision.
fexcess-precision=UrlSuffix(gcc/Optimize-Options.html#index-fexcess-precision)
fexec-charset=C ObjC C++ ObjC++ Joined RejectNegative-fexec-charset=<cset>	Convert all strings and character constants to character set <cset>.
fexec-charset=UrlSuffix(gcc/Preprocessor-Options.html#index-fexec-charset)
fexpensive-optimizationsCommon Var(flag_expensive_optimizations) OptimizationPerform a number of minor, expensive optimizations.
fexpensive-optimizationsUrlSuffix(gcc/Optimize-Options.html#index-fexpensive-optimizations)
fext-dceCommon Var(flag_ext_dce, 1) Optimization Init(0)Perform dead code elimination on zero and sign extensions with special dataflow analysis.
fext-numeric-literalsC++ ObjC++ Var(flag_ext_numeric_literals) Init(1)Interpret imaginary, fixed-point, or other gnu number suffix as the correspondingnumber literal rather than a user-defined number literal.
fext-numeric-literalsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fext-numeric-literals)
fextended-identifiersC ObjC C++ ObjC++Permit universal character names (\\u and \\U) in identifiers.
fextended-identifiersUrlSuffix(gcc/Preprocessor-Options.html#index-fextended-identifiers)
fextended-opaqueModula-2allows opaque types to be implemented as any type (a GNU Modula-2 extension)
fextern-std=D Joined RejectNegative Enum(extern_stdcpp) Var(flag_extern_stdcpp)-fextern-std=<standard>	Set C++ name mangling compatibility with <standard>.
fextern-std=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fextern-std)
fextern-tls-initC++ ObjC++ Var(flag_extern_tls_init) Init(-1)Support dynamic initialization of thread-local variables in a different translation unit.
fextern-tls-initUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fextern-tls-init)
fexternal-blasFortran Var(flag_external_blas)Specify that an external BLAS library should be used for matmul calls on large-size arrays.
fexternal-blasLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fexternal-blas)
fexternal-templatesC++ ObjC++ WarnRemoved
ff2cFortran Var(flag_f2c)Use f2c calling convention.
ff2cLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-ff2c)
ffast-mathCommon Optimization
ffast-mathUrlSuffix(gcc/Optimize-Options.html#index-ffast-math)
ffat-lto-objectsCommon Var(flag_fat_lto_objects)Output lto objects containing both the intermediate language and binary output.
ffat-lto-objectsUrlSuffix(gcc/Optimize-Options.html#index-ffat-lto-objects)
ffile-prefix-map=Common Joined RejectNegative Var(common_deferred_options) Defer-ffile-prefix-map=<old>=<new>	Map one directory name to another in compilation result.
ffile-prefix-map=UrlSuffix(gcc/Overall-Options.html#index-ffile-prefix-map)
ffinite-loopsCommon Var(flag_finite_loops) Optimization Init(0)Assume that loops with an exit will terminate and not loop indefinitely.
ffinite-loopsUrlSuffix(gcc/Optimize-Options.html#index-ffinite-loops)
ffinite-math-onlyCommon Var(flag_finite_math_only) Optimization SetByCombinedAssume no NaNs or infinities are generated.
ffinite-math-onlyUrlSuffix(gcc/Optimize-Options.html#index-ffinite-math-only)
ffixed-Common Joined RejectNegative Var(common_deferred_options) Defer-ffixed-<register>	Mark <register> as being unavailable to the compiler.
ffixed-formFortran RejectNegativeAssume that the source file is fixed form.
ffixed-formLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-ffixed-form)
ffixed-line-length-Fortran RejectNegative Joined UInteger Var(flag_fixed_line_length) Init(72)-ffixed-line-length-<n>	Use n as character line width in fixed mode.
ffixed-line-length-noneFortran RejectNegative Var(flag_fixed_line_length,0)Allow arbitrary character line width in fixed mode.
ffloat-storeCommon Var(flag_float_store) OptimizationDon't allocate floats and doubles in extended-precision registers.
ffloatvalueModula-2turns on runtime checking to check whether a floating point number will exceed range
ffold-mem-offsetsCommon Var(flag_fold_mem_offsets) Init(1) OptimizationFold instructions calculating memory offsets to the memory access instruction if possible.
ffold-mem-offsetsUrlSuffix(gcc/Optimize-Options.html#index-ffold-mem-offsets)
ffold-simple-inlinesC++ ObjC++ Optimization Var(flag_fold_simple_inlines)Fold calls to simple inline functions.
ffold-simple-inlinesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-ffold-simple-inlines)
ffor-scopeC++ ObjC++ WarnRemoved
fforce-addrCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fforward-propagateCommon Var(flag_forward_propagate) OptimizationPerform a forward propagation pass on RTL.
fforward-propagateUrlSuffix(gcc/Optimize-Options.html#index-fforward-propagate)
ffp-contract=Common Joined RejectNegative Enum(fp_contract_mode) Var(flag_fp_contract_mode) Init(FP_CONTRACT_FAST) Optimization-ffp-contract=[off|on|fast]	Perform floating-point expression contraction.
ffp-contract=UrlSuffix(gcc/Optimize-Options.html#index-ffp-contract)
ffp-int-builtin-inexactCommon Var(flag_fp_int_builtin_inexact) Init(1) OptimizationAllow built-in functions ceil, floor, round, trunc to raise \"inexact\" exceptions.
ffp-int-builtin-inexactUrlSuffix(gcc/Optimize-Options.html#index-ffp-int-builtin-inexact)
ffpe-summary=Fortran RejectNegative JoinedOrMissing-ffpe-summary=[...]	Print summary of floating point exceptions.
ffpe-trap=Fortran RejectNegative JoinedOrMissing-ffpe-trap=[...]	Stop on following floating point exceptions.
ffree-formFortran RejectNegativeAssume that the source file is free form.
ffree-formLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-ffree-form)
ffree-line-length-Fortran RejectNegative Joined UInteger Var(flag_free_line_length) Init(132)-ffree-line-length-<n>	Use n as character line width in free mode.
ffree-line-length-noneFortran RejectNegative Var(flag_free_line_length,0)Allow arbitrary character line width in free mode.
ffreestandingC ObjC C++ ObjC++Do not assume that standard C libraries and \"main\" exist.
ffriend-injectionC++ ObjC++ WarnRemoved
ffrontend-loop-interchangeFortran Var(flag_frontend_loop_interchange) Init(-1)Try to interchange loops if profitable.
ffrontend-optimizeFortran Var(flag_frontend_optimize) Init(-1)Enable front end optimization.
ffunction-cseCommon Var(flag_no_function_cse,0) OptimizationAllow function addresses to be held in registers.
ffunction-cseUrlSuffix(gcc/Optimize-Options.html#index-ffunction-cse)
ffunction-sectionsCommon Var(flag_function_sections)Place each function into its own section.
ffunction-sectionsUrlSuffix(gcc/Optimize-Options.html#index-ffunction-sections)
fgcseCommon Var(flag_gcse) OptimizationPerform global common subexpression elimination.
fgcseUrlSuffix(gcc/Optimize-Options.html#index-fgcse)
fgcse-after-reloadCommon Var(flag_gcse_after_reload) OptimizationPerform global common subexpression elimination after register allocation hasfinished.
fgcse-after-reloadUrlSuffix(gcc/Optimize-Options.html#index-fgcse-after-reload)
fgcse-lasCommon Var(flag_gcse_las) Init(0) OptimizationPerform redundant load after store elimination in global common subexpressionelimination.
fgcse-lasUrlSuffix(gcc/Optimize-Options.html#index-fgcse-las)
fgcse-lmCommon Var(flag_gcse_lm) Init(1) OptimizationPerform enhanced load motion during global common subexpression elimination.
fgcse-lmUrlSuffix(gcc/Optimize-Options.html#index-fgcse-lm)
fgcse-smCommon Var(flag_gcse_sm) Init(0) OptimizationPerform store motion after global common subexpression elimination.
fgcse-smUrlSuffix(gcc/Optimize-Options.html#index-fgcse-sm)
fgen-module-list=Modula-2 Joinedcreate a topologically sorted module list from all dependent modules used in the application
fgimpleC Var(flag_gimple) Init(0)Enable parsing GIMPLE.
fgimpleUrlSuffix(gcc/C-Dialect-Options.html#index-fgimple)
fgnat-encodings=Common Enum(dwarf_gnat_encodings) Joined RejectNegative Undocumented Var(gnat_encodings)-fgnat-encodings=[all|gdb|minimal]	Select the balance between GNAT encodings and standard DWARF emitted in the debug information.
fgnu-keywordsC++ ObjC++ Var(flag_no_gnu_keywords, 0)Recognize GNU-defined keywords.
fgnu-keywordsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fgnu-keywords)
fgnu-runtimeObjC ObjC++ LTO RejectNegative Var(flag_next_runtime,0) Init(NEXT_OBJC_RUNTIME)Generate code for GNU runtime environment.
fgnu-runtimeUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fgnu-runtime)
fgnu-tmCommon Var(flag_tm)Enable support for GNU transactional memory.
fgnu-tmUrlSuffix(gcc/C-Dialect-Options.html#index-fgnu-tm)
fgnu-uniqueCommon Var(flag_gnu_unique) Init(1)Use STB_GNU_UNIQUE if supported by the assembler.
fgnu-uniqueUrlSuffix(gcc/Code-Gen-Options.html#index-fgnu-unique)
fgnu89-inlineC ObjC Var(flag_gnu89_inline) Init(-1)Use traditional GNU semantics for inline functions.
fgnu89-inlineUrlSuffix(gcc/C-Dialect-Options.html#index-fgnu89-inline)
fgo-c-header=Go Joined RejectNegative-fgo-c-header=<file>	Write Go struct definitions to file as C code.
fgo-check-divide-overflowGo Var(go_check_divide_overflow) Init(1)Add explicit checks for division overflow in INT_MIN / -1.
fgo-check-divide-zeroGo Var(go_check_divide_zero) Init(1)Add explicit checks for division by zero.
fgo-compiling-runtimeGo Var(go_compiling_runtime) Init(0)Apply special rules for compiling runtime package.
fgo-debug-escapeGo Joined UInteger Var(go_debug_escape_level) Init(0)Emit debugging information related to the escape analysis pass when run with -fgo-optimize-allocs.
fgo-debug-escape-hash=Go Joined RejectNegative Var(go_debug_escape_hash) Init(0)-fgo-debug-escape-hash=<string>	Hash value to debug escape analysis.
fgo-debug-optimizationGo Var(go_debug_optimization) Init(0)Emit optimization diagnostics.
fgo-dump-Go Joined RejectNegative-fgo-dump-<type>	Dump Go frontend internal information.
fgo-embedcfg=Go Joined RejectNegative-fgo-embedcfg=<file>	List embedded files via go:embed.
fgo-importcfg=Go Joined RejectNegative-fgo-importcfg=<file>	Provide file that tells where to find imports.
fgo-optimize-Go Joined-fgo-optimize-<type>	Turn on optimization passes in the frontend.
fgo-pkgpath=Go Joined RejectNegative-fgo-pkgpath=<string>	Set Go package path.
fgo-prefix=Go Joined RejectNegative-fgo-prefix=<string>	Set package-specific prefix for exported Go names.
fgo-relative-import-path=Go Joined RejectNegative-fgo-relative-import-path=<path>	Treat a relative import as relative to path.
fgraphiteCommon Var(flag_graphite) OptimizationEnable in and out of Graphite representation.
fgraphite-identityCommon Var(flag_graphite_identity) OptimizationEnable Graphite Identity transformation.
fgraphite-identityUrlSuffix(gcc/Optimize-Options.html#index-fgraphite-identity)
fguess-branch-probabilityCommon Var(flag_guess_branch_prob) OptimizationEnable guessing of branch probabilities.
fguess-branch-probabilityUrlSuffix(gcc/Optimize-Options.html#index-fguess-branch-probability)
fguiding-declsC++ ObjC++ WarnRemoved
fhandle-exceptionsC++ ObjC++ Optimization Alias(fexceptions) Warn({%<-fhandle-exceptions%> has been renamed %<-fexceptions%> (and is now on by default)})
fhardcfr-check-exceptionsCommon Var(flag_harden_control_flow_redundancy_check_exceptions) Init(-1) OptimizationCheck CFR execution paths also when exiting a function through an exception.
fhardcfr-check-exceptionsUrlSuffix(gcc/Instrumentation-Options.html#index-fhardcfr-check-exceptions)
fhardcfr-check-noreturn-calls=Common Joined RejectNegative Enum(hardcfr_check_noreturn_calls) Var(flag_harden_control_flow_redundancy_check_noreturn) Init(HCFRNR_UNSPECIFIED) Optimization-fhardcfr-check-noreturn-calls=[always|no-xthrow|nothrow|never]	Check CFR execution paths also before calling noreturn functions.
fhardcfr-check-noreturn-calls=UrlSuffix(gcc/Instrumentation-Options.html#index-fhardcfr-check-noreturn-calls)
fhardcfr-check-returning-callsCommon Var(flag_harden_control_flow_redundancy_check_returning_calls) Init(-1) OptimizationCheck CFR execution paths also before calls followed by returns of their results.
fhardcfr-check-returning-callsUrlSuffix(gcc/Instrumentation-Options.html#index-fhardcfr-check-returning-calls)
fhardcfr-skip-leafCommon Var(flag_harden_control_flow_redundancy_skip_leaf) OptimizationDisable CFR in leaf functions.
fhardcfr-skip-leafUrlSuffix(gcc/Instrumentation-Options.html#index-fhardcfr-skip-leaf)
fharden-comparesCommon Var(flag_harden_compares) OptimizationHarden conditionals not used in branches, checking reversed conditions.
fharden-comparesUrlSuffix(gcc/Instrumentation-Options.html#index-fharden-compares)
fharden-conditional-branchesCommon Var(flag_harden_conditional_branches) OptimizationHarden conditional branches by checking reversed conditions.
fharden-conditional-branchesUrlSuffix(gcc/Instrumentation-Options.html#index-fharden-conditional-branches)
fharden-control-flow-redundancyCommon Var(flag_harden_control_flow_redundancy) OptimizationHarden control flow by recording and checking execution paths.
fharden-control-flow-redundancyUrlSuffix(gcc/Instrumentation-Options.html#index-fharden-control-flow-redundancy)
fhardenedCommon Driver Var(flag_hardened)Enable various security-relevant flags.
fhardenedUrlSuffix(gcc/Instrumentation-Options.html#index-fhardened)
fhelpCommon Driver Alias(-help)
fhelp=Common Driver Joined Alias(-help=)
fhoist-adjacent-loadsCommon Var(flag_hoist_adjacent_loads) OptimizationEnable hoisting adjacent loads to encourage generating conditional moveinstructions.
fhoist-adjacent-loadsUrlSuffix(gcc/Optimize-Options.html#index-fhoist-adjacent-loads)
fhonor-stdC++ ObjC++ WarnRemoved
fhostedC ObjCAssume normal C execution environment.
fhostedUrlSuffix(gcc/C-Dialect-Options.html#index-fhosted)
fhuge-objectsC++ ObjC++ WarnRemovedNo longer supported.
fidentCommon Var(flag_no_ident,0)Process #ident directives.
fidentUrlSuffix(gcc/Code-Gen-Options.html#index-fident)
fif-conversionCommon Var(flag_if_conversion) OptimizationPerform conversion of conditional jumps to branchless equivalents.
fif-conversionUrlSuffix(gcc/Optimize-Options.html#index-fif-conversion)
fif-conversion2Common Var(flag_if_conversion2) OptimizationPerform conversion of conditional jumps to conditional execution.
fif-conversion2UrlSuffix(gcc/Optimize-Options.html#index-fif-conversion2)
fignore-unknown-pragmasDIgnore unsupported pragmas.
fignore-unknown-pragmasLangUrlSuffix_D(gdc/Warnings.html#index-fignore-unknown-pragmas)
fimmediate-escalationC++ ObjC++ Var(flag_immediate_escalation) Init(1)Implement P2564 for consteval propagation.
fimmediate-escalationUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fimmediate-escalation)
fimplement-inlinesC++ ObjC++ Var(flag_implement_inlines) Init(1)Export functions even if they can be inlined.
fimplicit-constexprC++ ObjC++ Var(flag_implicit_constexpr)Make inline functions constexpr by default.
fimplicit-constexprUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fimplicit-constexpr)
fimplicit-inline-templatesC++ ObjC++ Var(flag_implicit_inline_templates) Init(1)Emit implicit instantiations of inline templates.
fimplicit-inline-templatesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fimplicit-inline-templates)
fimplicit-noneFortran Var(flag_implicit_none)Specify that no implicit typing is allowed, unless overridden by explicit IMPLICIT statements.
fimplicit-noneLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fimplicit-none)
fimplicit-templatesC++ ObjC++ Var(flag_implicit_templates) Init(1)Emit implicit instantiations of templates.
findexModula-2turns on all range checking for numerical values
findirect-inliningCommon Var(flag_indirect_inlining) OptimizationPerform indirect inlining.
findirect-inliningUrlSuffix(gcc/Optimize-Options.html#index-findirect-inlining)
finhibit-size-directiveCommon Var(flag_inhibit_size_directive)Do not generate .size directives.
finhibit-size-directiveUrlSuffix(gcc/Code-Gen-Options.html#index-finhibit-size-directive)
finit-character=Fortran RejectNegative Joined UInteger-finit-character=<n>	Initialize local character variables to ASCII value n.
finit-character=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-character)
finit-derivedFortran Var(flag_init_derived)Initialize components of derived type variables according to other init flags.
finit-derivedLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-derived)
finit-integer=Fortran RejectNegative Joined-finit-integer=<n>	Initialize local integer variables to n.
finit-integer=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-integer)
finit-local-zeroFortranInitialize local variables to zero (from g77).
finit-local-zeroLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-local-zero)
finit-logical=Fortran RejectNegative Joined-finit-logical=<true|false>	Initialize local logical variables.
finit-logical=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-logical)
finit-real=Fortran RejectNegative ToLower Joined Enum(gfc_init_local_real) Var(flag_init_real) Init(GFC_INIT_REAL_OFF)-finit-real=<zero|snan|nan|inf|-inf>	Initialize local real variables.
finit-real=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finit-real)
finlineCommon Var(flag_no_inline,0) Init(0) OptimizationEnable inlining of function declared \"inline\", disabling disables all inlining.
finlineUrlSuffix(gcc/Optimize-Options.html#index-finline)
finline-arg-packingFortran  Var(flag_inline_arg_packing) Init(-1)-finline-arg-packing	Perform argument packing inline.
finline-arg-packingLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finline-arg-packing)
finline-atomicsCommon Var(flag_inline_atomics) Init(1) OptimizationInline __atomic operations when a lock free instruction sequence is available.
finline-functionsCommon Var(flag_inline_functions) OptimizationIntegrate functions not declared \"inline\" into their callers when profitable.
finline-functionsUrlSuffix(gcc/Optimize-Options.html#index-finline-functions)
finline-functions-called-onceCommon Var(flag_inline_functions_called_once) OptimizationIntegrate functions only required by their single caller.
finline-functions-called-onceUrlSuffix(gcc/Optimize-Options.html#index-finline-functions-called-once)
finline-intrinsicsFortran RejectNegative Enum(gfc_inlineable_intrinsics) Var(flag_inline_intrinsics, GFC_FLAG_INLINE_INTRINSIC_ALL) Undocumented
finline-intrinsicsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finline-intrinsics)
finline-intrinsics=Fortran Joined Var(flag_inline_intrinsics) Enum(gfc_inlineable_intrinsics) Init(GFC_FLAG_INLINE_INTRINSIC_ALL_UNSET) EnumSetEnable generation of inline code instead of calls to functions from the library to implement intrinsics.
finline-intrinsics=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finline-intrinsics)
finline-limit-Common RejectNegative Joined Alias(finline-limit=)
finline-limit=Common RejectNegative Joined UInteger-finline-limit=<number>	Limit the size of inlined functions to <number>.
finline-limit=UrlSuffix(gcc/Optimize-Options.html#index-finline-limit)
finline-matmul-limit=Fortran RejectNegative Joined UInteger Var(flag_inline_matmul_limit) Init(-1)-finline-matmul-limit=<n>	Specify the size of the largest matrix for which matmul will be inlined.
finline-matmul-limit=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-finline-matmul-limit)
finline-small-functionsCommon Var(flag_inline_small_functions) OptimizationIntegrate functions into their callers when code size is known not to grow.
finline-small-functionsUrlSuffix(gcc/Optimize-Options.html#index-finline-small-functions)
finline-stringopsCommon RejectNegative Enum(ilsop_fn) Var(flag_inline_stringops, ILSOP_ALL) Enum(ilsop_fn) Init(ILSOP_NONE) Optimization Undocumented
finline-stringopsUrlSuffix(gcc/Optimize-Options.html#index-finline-stringops)
finline-stringops=Common Joined Var(flag_inline_stringops) EnumSet Enum(ilsop_fn) Optimization-finline-stringops[=memcmp|memcpy|memmove|memset]Expand supported mem/str operations inline, even if against optimization.
finline-stringops=UrlSuffix(gcc/Optimize-Options.html#index-finline-stringops)
finput-charset=C ObjC C++ ObjC++ Joined RejectNegative-finput-charset=<cset>	Specify the default character set for source files.
finput-charset=UrlSuffix(gcc/Preprocessor-Options.html#index-finput-charset)
finstrument-functionsCommon Var(flag_instrument_function_entry_exit,1)Instrument function entry and exit with profiling calls.
finstrument-functionsUrlSuffix(gcc/Instrumentation-Options.html#index-finstrument-functions)
finstrument-functions-exclude-file-list=Common RejectNegative Joined-finstrument-functions-exclude-file-list=filename,...	Do not instrument functions listed in files.
finstrument-functions-exclude-file-list=UrlSuffix(gcc/Instrumentation-Options.html#index-finstrument-functions-exclude-file-list)
finstrument-functions-exclude-function-list=Common RejectNegative Joined-finstrument-functions-exclude-function-list=name,...	Do not instrument listed functions.
finstrument-functions-exclude-function-list=UrlSuffix(gcc/Instrumentation-Options.html#index-finstrument-functions-exclude-function-list)
finstrument-functions-onceCommon Var(flag_instrument_function_entry_exit,2)Instrument function entry and exit with profiling calls invoked once.
finstrument-functions-onceUrlSuffix(gcc/Instrumentation-Options.html#index-finstrument-functions-once)
finteger-4-integer-8Fortran RejectNegative Var(flag_integer4_kind,8)Interpret any INTEGER(4) as an INTEGER(8).
finteger-4-integer-8LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-finteger-4-integer-8)
fintrinsic-modules-pathFortran RejectNegative SeparateSpecify where to find the compiled intrinsic modules.
fintrinsic-modules-pathLangUrlSuffix_Fortran(gfortran/Directory-Options.html#index-fintrinsic-modules-path)
fintrinsic-modules-path=Fortran RejectNegative JoinedSpecify where to find the compiled intrinsic modules.
fintrinsic-modules-path=LangUrlSuffix_Fortran(gfortran/Directory-Options.html#index-fintrinsic-modules-path)
finvariantsD Var(flag_invariants)Generate code for class invariant contracts.
finvariantsLangUrlSuffix_D(gdc/Runtime-Options.html#index-finvariants)
fipa-bit-cpCommon Var(flag_ipa_bit_cp) OptimizationPerform interprocedural bitwise constant propagation.
fipa-bit-cpUrlSuffix(gcc/Optimize-Options.html#index-fipa-bit-cp)
fipa-cpCommon Var(flag_ipa_cp) OptimizationPerform interprocedural constant propagation.
fipa-cpUrlSuffix(gcc/Optimize-Options.html#index-fipa-cp)
fipa-cp-alignmentCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fipa-cp-cloneCommon Var(flag_ipa_cp_clone) OptimizationPerform cloning to make Interprocedural constant propagation stronger.
fipa-cp-cloneUrlSuffix(gcc/Optimize-Options.html#index-fipa-cp-clone)
fipa-icfCommon Var(flag_ipa_icf) OptimizationPerform Identical Code Folding for functions and read-only variables.
fipa-icfUrlSuffix(gcc/Optimize-Options.html#index-fipa-icf)
fipa-icf-functionsCommon Var(flag_ipa_icf_functions) OptimizationPerform Identical Code Folding for functions.
fipa-icf-variablesCommon Var(flag_ipa_icf_variables) OptimizationPerform Identical Code Folding for variables.
fipa-matrix-reorgCommon IgnoreDoes nothing. Preserved for backward compatibility.
fipa-modrefCommon Var(flag_ipa_modref) OptimizationPerform interprocedural modref analysis.
fipa-modrefUrlSuffix(gcc/Optimize-Options.html#index-fipa-modref)
fipa-profileCommon Var(flag_ipa_profile) Init(0) OptimizationPerform interprocedural profile propagation.
fipa-profileUrlSuffix(gcc/Optimize-Options.html#index-fipa-profile)
fipa-ptaCommon Var(flag_ipa_pta) Init(0) OptimizationPerform interprocedural points-to analysis.
fipa-ptaUrlSuffix(gcc/Optimize-Options.html#index-fipa-pta)
fipa-pure-constCommon Var(flag_ipa_pure_const) Init(0) OptimizationDiscover pure and const functions.
fipa-pure-constUrlSuffix(gcc/Optimize-Options.html#index-fipa-pure-const)
fipa-raCommon Var(flag_ipa_ra) OptimizationUse caller save register across calls if possible.
fipa-raUrlSuffix(gcc/Optimize-Options.html#index-fipa-ra)
fipa-referenceCommon Var(flag_ipa_reference) Init(0) OptimizationDiscover read-only and non addressable static variables.
fipa-referenceUrlSuffix(gcc/Optimize-Options.html#index-fipa-reference)
fipa-reference-addressableCommon Var(flag_ipa_reference_addressable) Init(0) OptimizationDiscover read-only, write-only and non-addressable static variables.
fipa-reference-addressableUrlSuffix(gcc/Optimize-Options.html#index-fipa-reference-addressable)
fipa-sraCommon Var(flag_ipa_sra) Init(0) OptimizationPerform interprocedural reduction of aggregates.
fipa-sraUrlSuffix(gcc/Optimize-Options.html#index-fipa-sra)
fipa-stack-alignmentCommon Var(flag_ipa_stack_alignment) Init(1) OptimizationReduce stack alignment on call sites if possible.
fipa-stack-alignmentUrlSuffix(gcc/Optimize-Options.html#index-fipa-stack-alignment)
fipa-strict-aliasingCommon Var(flag_ipa_strict_aliasing) Init(1) OptimizationAssume strict aliasing rules apply across (uninlined) function boundaries.
fipa-strict-aliasingUrlSuffix(gcc/Optimize-Options.html#index-fipa-strict-aliasing)
fipa-struct-reorgCommon IgnoreDoes nothing. Preserved for backward compatibility.
fipa-vrpCommon Var(flag_ipa_vrp) OptimizationPerform IPA Value Range Propagation.
fipa-vrpUrlSuffix(gcc/Optimize-Options.html#index-fipa-vrp)
fira-algorithm=Common Joined RejectNegative Enum(ira_algorithm) Var(flag_ira_algorithm) Init(IRA_ALGORITHM_CB) Optimization-fira-algorithm=[CB|priority]	Set the used IRA algorithm.
fira-algorithm=UrlSuffix(gcc/Optimize-Options.html#index-fira-algorithm)
fira-hoist-pressureCommon Var(flag_ira_hoist_pressure) Init(1) OptimizationUse IRA based register pressure calculationin RTL hoist optimizations.
fira-hoist-pressureUrlSuffix(gcc/Optimize-Options.html#index-fira-hoist-pressure)
fira-loop-pressureCommon Var(flag_ira_loop_pressure) OptimizationUse IRA based register pressure calculationin RTL loop optimizations.
fira-loop-pressureUrlSuffix(gcc/Optimize-Options.html#index-fira-loop-pressure)
fira-region=Common Joined RejectNegative Enum(ira_region) Var(flag_ira_region) Init(IRA_REGION_ONE) Optimization-fira-region=[one|all|mixed]	Set regions for IRA.
fira-region=UrlSuffix(gcc/Optimize-Options.html#index-fira-region)
fira-share-save-slotsCommon Var(flag_ira_share_save_slots) Init(1) OptimizationShare slots for saving different hard registers.
fira-share-save-slotsUrlSuffix(gcc/Optimize-Options.html#index-fira-share-save-slots)
fira-share-spill-slotsCommon Var(flag_ira_share_spill_slots) Init(1) OptimizationShare stack slots for spilled pseudo-registers.
fira-share-spill-slotsUrlSuffix(gcc/Optimize-Options.html#index-fira-share-spill-slots)
fira-verbose=Common RejectNegative Joined UInteger Var(flag_ira_verbose) Init(5)-fira-verbose=<number>	Control IRA's level of diagnostic messages.
fira-verbose=UrlSuffix(gcc/Developer-Options.html#index-fira-verbose)
fisoModula-2use ISO dialect of Modula-2
fisolate-erroneous-paths-attributeCommon Var(flag_isolate_erroneous_paths_attribute) OptimizationDetect paths that trigger erroneous or undefined behavior due to a null valuebeing used in a way forbidden by a returns_nonnull or nonnullattribute.  Isolate those paths from the main control flow and turn thestatement with erroneous or undefined behavior into a trap.
fisolate-erroneous-paths-attributeUrlSuffix(gcc/Optimize-Options.html#index-fisolate-erroneous-paths-attribute)
fisolate-erroneous-paths-dereferenceCommon Var(flag_isolate_erroneous_paths_dereference) OptimizationDetect paths that trigger erroneous or undefined behavior due todereferencing a null pointer.  Isolate those paths from the main controlflow and turn the statement with erroneous or undefined behavior into a trap.
fisolate-erroneous-paths-dereferenceUrlSuffix(gcc/Optimize-Options.html#index-fisolate-erroneous-paths-dereference)
fivar-visibility=ObjC ObjC++ Joined RejectNegative Enum(ivar_visibility) Var(default_ivar_visibility) Init(IVAR_VISIBILITY_PROTECTED)-fvisibility=[private|protected|public|package]	Set the default symbol visibility.
fivar-visibility=UrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fivar-visibility)
fivoptsCommon Var(flag_ivopts) Init(1) OptimizationOptimize induction variables on trees.
fivoptsUrlSuffix(gcc/Optimize-Options.html#index-fivopts)
fjump-tablesCommon Var(flag_jump_tables) Init(0) OptimizationUse jump tables for sufficiently large switch statements.
fjump-tablesUrlSuffix(gcc/Code-Gen-Options.html#index-fjump-tables)
fkeep-gc-roots-liveCommon Undocumented Var(flag_keep_gc_roots_live) Optimization
fkeep-inline-dllexportC C++ ObjC ObjC++ Var(flag_keep_inline_dllexport) Init(1) Condition(TARGET_DLLIMPORT_DECL_ATTRIBUTES)Don't emit dllexported inline functions unless needed.
fkeep-inline-dllexportUrlSuffix(gcc/Optimize-Options.html#index-fkeep-inline-dllexport)
fkeep-inline-functionsCommon Var(flag_keep_inline_functions)Generate code for functions even if they are fully inlined.
fkeep-static-constsCommon Var(flag_keep_static_consts) Init(1)Emit static const variables even if they are not used.
fkeep-static-constsUrlSuffix(gcc/Optimize-Options.html#index-fkeep-static-consts)
fkeep-static-functionsCommon Var(flag_keep_static_functions)Generate code for static functions even if they are never called.
fkeep-static-functionsUrlSuffix(gcc/Optimize-Options.html#index-fkeep-static-functions)
flabels-okC++ ObjC++ WarnRemoved
flang-info-include-translateC++ Var(note_include_translate_yes)Note #include directives translated to import declarations.
flang-info-include-translateUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-flang-info-include-translate)
flang-info-include-translate-notC++ Var(note_include_translate_no)Note #include directives not translated to import declarations, and not known to be textual.
flang-info-include-translate-notUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-flang-info-include-translate-not)
flang-info-include-translate=C++ Joined RejectNegative MissingArgError(missing header name)Note a #include translation of a specific header.
flang-info-include-translate=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-flang-info-include-translate)
flang-info-module-cmiC++ Var(note_module_cmi_yes)Note Compiled Module Interface pathnames.
flang-info-module-cmiUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-flang-info-module-cmi)
flang-info-module-cmi=C++ Joined RejectNegative MissingArgError(missing module name)Note Compiled Module Interface pathname of a specific module or header-unit.
flang-info-module-cmi=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-flang-info-module-cmi)
flarge-source-filesCommon IgnoreDoes nothing.  Preserved for backward compatibility.
flate-combine-instructionsCommon Var(flag_late_combine_instructions) Optimization Init(0)Run two instruction combination passes late in the pass pipeline;one before register allocation and one after.
flate-combine-instructionsUrlSuffix(gcc/Optimize-Options.html#index-flate-combine-instructions)
flax-vector-conversionsC ObjC C++ ObjC++ Var(flag_lax_vector_conversions)Allow implicit conversions between vectors with differing numbers of subparts and/or differing element types.
flax-vector-conversionsUrlSuffix(gcc/C-Dialect-Options.html#index-flax-vector-conversions)
fleading-underscoreCommon Var(flag_leading_underscore) Init(-1)Give external symbols a leading underscore.
fleading-underscoreUrlSuffix(gcc/Code-Gen-Options.html#index-fleading-underscore)
flibs=Modula-2 Joinedspecify the library order, the libraries may be specified by a comma separated abbreviation: log,min,pim,iso or by directory names: m2log,m2min,m2pim,m2iso.
flifetime-dseCommon Var(flag_lifetime_dse,2) Init(2) OptimizationTell DSE that the storage for a C++ object is dead when the constructorstarts and when the destructor finishes.
flifetime-dseUrlSuffix(gcc/Optimize-Options.html#index-flifetime-dse)
flifetime-dse=Common Joined RejectNegative UInteger Var(flag_lifetime_dse) Optimization IntegerRange(0, 2)
flifetime-dse=UrlSuffix(gcc/Optimize-Options.html#index-flifetime-dse)
flimit-function-alignmentCommon Var(flag_limit_function_alignment) Optimization Init(0)
flinker-output=LTO Driver Joined RejectNegative Enum(lto_linker_output) Var(flag_lto_linker_output) Init(LTO_LINKER_OUTPUT_UNKNOWN)Set linker output type (used internally during LTO optimization).
flinker-output=UrlSuffix(gcc/Link-Options.html#index-flinker-output)
flive-patchingCommon RejectNegative Alias(flive-patching=,inline-clone) Optimization
flive-patchingUrlSuffix(gcc/Optimize-Options.html#index-flive-patching)
flive-patching=Common Joined RejectNegative Enum(live_patching_level) Var(flag_live_patching) Init(LIVE_PATCHING_NONE) Optimization-flive-patching=[inline-only-static|inline-clone]	Control IPAoptimizations to provide a safe compilation for live-patching.  At the sametime, provides multiple-level control on the enabled IPA optimizations.
flive-patching=UrlSuffix(gcc/Optimize-Options.html#index-flive-patching)
flive-range-shrinkageCommon Var(flag_live_range_shrinkage) Init(0) OptimizationRelief of register pressure through live range shrinkage.
flive-range-shrinkageUrlSuffix(gcc/Optimize-Options.html#index-flive-range-shrinkage)
flocal-ivarsObjC ObjC++ Var(flag_local_ivars) Init(1)Allow access to instance variables as if they were local declarations within instance method implementations.
flocal-ivarsUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-flocal-ivars)
flocation=Modula-2 Joinedset all location values to a specific value (internal switch)
floop-blockCommon Alias(floop-nest-optimize)Enable loop nest transforms.  Same as -floop-nest-optimize.
floop-blockUrlSuffix(gcc/Optimize-Options.html#index-floop-block)
floop-flattenCommon IgnoreDoes nothing. Preserved for backward compatibility.
floop-interchangeCommon Var(flag_loop_interchange) OptimizationEnable loop interchange on trees.
floop-interchangeUrlSuffix(gcc/Optimize-Options.html#index-floop-interchange)
floop-nest-optimizeCommon Var(flag_loop_nest_optimize) OptimizationEnable the loop nest optimizer.
floop-nest-optimizeUrlSuffix(gcc/Optimize-Options.html#index-floop-nest-optimize)
floop-optimizeCommon IgnoreDoes nothing.  Preserved for backward compatibility.
floop-parallelize-allCommon Var(flag_loop_parallelize_all) OptimizationMark all loops as parallel.
floop-parallelize-allUrlSuffix(gcc/Optimize-Options.html#index-floop-parallelize-all)
floop-strip-mineCommon Alias(floop-nest-optimize)Enable loop nest transforms.  Same as -floop-nest-optimize.
floop-strip-mineUrlSuffix(gcc/Optimize-Options.html#index-floop-strip-mine)
floop-unroll-and-jamCommon Var(flag_unroll_jam) OptimizationPerform unroll-and-jam on loops.
floop-unroll-and-jamUrlSuffix(gcc/Optimize-Options.html#index-floop-unroll-and-jam)
flra-rematCommon Var(flag_lra_remat) OptimizationDo CFG-sensitive rematerialization in LRA.
flra-rematUrlSuffix(gcc/Optimize-Options.html#index-flra-remat)
fltoCommonEnable link-time optimization.
fltoUrlSuffix(gcc/Optimize-Options.html#index-flto)
flto-compression-level=Common Joined RejectNegative UInteger Var(flag_lto_compression_level) Init(-1) IntegerRange(0, 19)Use zlib/zstd compression level <number> for IL.
flto-compression-level=UrlSuffix(gcc/Optimize-Options.html#index-flto-compression-level)
flto-incremental-cache-size=Common Joined RejectNegative UInteger Var(flag_lto_incremental_cache_size) Init(2048)Number of cache entries in incremental LTO after which to prune old entries.
flto-incremental=Common Joined Var(flag_lto_incremental)Enable incremental LTO, with its cache in given directory.
flto-odr-type-mergingCommon IgnoreDoes nothing.  Preserved for backward compatibility.
flto-partition=Common Joined RejectNegative Enum(lto_partition_model) Var(flag_lto_partition) Init(LTO_PARTITION_BALANCED)Specify the algorithm to partition symbols and vars at linktime.
flto-partition=UrlSuffix(gcc/Optimize-Options.html#index-flto-partition)
flto-reportCommon Var(flag_lto_report) Init(0)Report various link-time optimization statistics.
flto-reportUrlSuffix(gcc/Developer-Options.html#index-flto-report)
flto-report-wpaCommon Var(flag_lto_report_wpa) Init(0)Report various link-time optimization statistics for WPA only.
flto-report-wpaUrlSuffix(gcc/Developer-Options.html#index-flto-report-wpa)
flto=Common RejectNegative Joined Var(flag_lto)Link-time optimization with number of parallel jobs or jobserver.
flto=UrlSuffix(gcc/Optimize-Options.html#index-flto)
fltransLTO Var(flag_ltrans)Run the link-time optimizer in local transformation (LTRANS) mode.
fltrans-output-list=LTO Joined Var(ltrans_output_list)Specify a file to which a list of files output by LTRANS is written.
fm2-debug-trace=Modula-2 Joinedturn on internal debug tracing for quad,token,line,all (internal switch)
fm2-dump-decl=Modula-2 Joineddump Modula-2 decls to the filename stem specified
fm2-dump-filter=Modula-2 Joinedfilter the language dump using a comma separated list of procedures and modules
fm2-dump-gimple=Modula-2 Joineddump Modula-2 gimple to the filename stem specified
fm2-dump-quad=Modula-2 Joineddump Modula-2 quads to the filename stem specified
fm2-dump=Modula-2 Joineddump Modula-2 internal intemediate representation specified by: all,quad,decl,gimple
fm2-file-offset-bits=Modula-2 Joinedoverride the default 64 bit definition of SYSTEM.COFF_T with the argument specified
fm2-gModula-2generate extra nops to improve debugging, producing an instruction for every code related keyword
fm2-lower-caseModula-2generate error messages which render keywords in lower case
fm2-pathname=Modula-2 Joinedspecify the module mangled prefix name for all modules in the following include paths
fm2-pathnameIModula-2 Joined
fm2-pluginModula-2insert plugin to identify runtime errors at compiletime
fm2-prefix=Modula-2 Joinedspecify the module mangled prefix name
fm2-statisticsModula-2display statistics about the amount of source lines compiled and symbols used
fm2-strict-typeModula-2experimental flag to turn on the new strict type checker
fm2-whole-programModula-2compile all implementation modules and program module at once
fmacro-prefix-map=C ObjC C++ ObjC++ Joined RejectNegative-fmacro-prefix-map=<old>=<new>	Map one directory name to another in __FILE__, __BASE_FILE__, and __builtin_FILE().
fmacro-prefix-map=UrlSuffix(gcc/Preprocessor-Options.html#index-fmacro-prefix-map)
fmainD RejectNegativeGenerate a default D main() function when compiling.
fmainLangUrlSuffix_D(gdc/Runtime-Options.html#index-fmain)
fmalloc-dceCommon Var(flag_malloc_dce,2) Init(2) OptimizationAllow removal of malloc and free pairs when allocated block is unused.
fmalloc-dceUrlSuffix(gcc/Optimize-Options.html#index-fmalloc-dce)
fmalloc-dce=Common Joined RejectNegative UInteger Var(flag_malloc_dse) Optimization IntegerRange(0, 2)
fmalloc-dce=UrlSuffix(gcc/Optimize-Options.html#index-fmalloc-dce)
fmath-errnoCommon Var(flag_errno_math) Init(1) Optimization SetByCombinedSet errno after built-in math functions.
fmath-errnoUrlSuffix(gcc/Optimize-Options.html#index-fmath-errno)
fmax-array-constructor=Fortran RejectNegative Joined UInteger Var(flag_max_array_constructor) Init(65535)-fmax-array-constructor=<n>	Maximum number of objects in an array constructor.
fmax-array-constructor=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fmax-array-constructor)
fmax-errors=Common Joined RejectNegative UInteger Var(flag_max_errors)-fmax-errors=<number>	Maximum number of errors to report.
fmax-errors=UrlSuffix(gcc/Warning-Options.html#index-fmax-errors) LangUrlSuffix_D(gdc/Warnings.html#index-fmax-errors)
fmax-identifier-length=Fortran RejectNegative Joined UInteger-fmax-identifier-length=<n>	Maximum identifier length.
fmax-include-depth=C ObjC C++ ObjC++ Joined RejectNegative UIntegerfmax-include-depth=<number> Set the maximum depth of the nested #include.
fmax-include-depth=UrlSuffix(gcc/Preprocessor-Options.html#index-fmax-include-depth)
fmax-stack-var-size=Fortran RejectNegative Joined UInteger Var(flag_max_stack_var_size) Init(-2)-fmax-stack-var-size=<n>	Size in bytes of the largest array that will be put on the stack.
fmax-stack-var-size=LangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fmax-stack-var-size)
fmax-subrecord-length=Fortran RejectNegative Joined UInteger Var(flag_max_subrecord_length)-fmax-subrecord-length=<n>	Maximum length for subrecords.
fmem-reportCommon Var(mem_report)Report on permanent memory allocation.
fmem-reportUrlSuffix(gcc/Developer-Options.html#index-fmem-report)
fmem-report-wpaCommon Var(mem_report_wpa)Report on permanent memory allocation in WPA only.
fmem-report-wpaUrlSuffix(gcc/Developer-Options.html#index-fmem-report-wpa)
fmerge-all-constantsCommon Var(flag_merge_constants,2) Init(1)Attempt to merge identical constants and constant variables.
fmerge-all-constantsUrlSuffix(gcc/Optimize-Options.html#index-fmerge-all-constants)
fmerge-constantsCommon Var(flag_merge_constants,1)Attempt to merge identical constants across compilation units.
fmerge-constantsUrlSuffix(gcc/Optimize-Options.html#index-fmerge-constants)
fmerge-debug-stringsCommon Var(flag_merge_debug_strings) Init(1)Attempt to merge identical debug strings across compilation units.
fmerge-debug-stringsUrlSuffix(gcc/Debugging-Options.html#index-fmerge-debug-strings)
fmessage-length=Common RejectNegative Joined UInteger-fmessage-length=<number>	Limit diagnostics to <number> characters per line.  0 suppresses line-wrapping.
fmessage-length=UrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fmessage-length)
fmin-function-alignment=Common Joined RejectNegative UInteger Var(flag_min_function_alignment) OptimizationAlign the start of every function.
fmod=Modula-2 Joinedrecognize the specified suffix as implementation and module filenames
fmodule-file=D Joined RejectNegative-fmodule-file=<package.module>=<filespec>	use <filespec> as source file for <package.module>.
fmodule-file=LangUrlSuffix_D(gdc/Directory-Options.html#index-fmodule-file)
fmodule-headerC++ ObjC RejectNegative Var(flag_header_unit,0) IntegerEnable C++ header module (experimental).
fmodule-headerUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-header)
fmodule-header=C++ ObjC++ Joined RejectNegative Undocumented
fmodule-header=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-header)
fmodule-implicit-inlineC++ ObjC++ Var(flag_module_implicit_inline,0) IntegerMember functions defined within their class are inline in module purview.
fmodule-implicit-inlineUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-implicit-inline)
fmodule-lazyC++ ObjC++ Var(flag_module_lazy) Init(1)Enable lazy module importing.
fmodule-lazyUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-lazy)
fmodule-mapper=C++ ObjC++ Joined RejectNegative MissingArgError(missing mapper)Mapper for module to CMI files.
fmodule-mapper=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-mapper)
fmodule-onlyC++ ObjC RejectNegative Var(flag_module_only) IntegerOnly emit Compiled Module Interface.
fmodule-onlyUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodule-only)
fmodule-privateFortran Var(flag_module_private)Set default accessibility of module entities to PRIVATE.
fmodule-privateLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fmodule-private)
fmodule-version-ignoreC++ ObjC Var(flag_module_version_ignore) Integer
fmoduleinfoD Var(flag_moduleinfo)Generate ModuleInfo struct for output module.
fmoduleinfoLangUrlSuffix_D(gdc/Runtime-Options.html#index-fmoduleinfo)
fmodulesC++ ObjC++ Var(flag_modules) IntegerEnable C++20 Modules (experimental).
fmodulesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fmodules)
fmodules-tsC++ ObjC++ Alias(fmodules) Undocumented
fmodulo-schedCommon Var(flag_modulo_sched) OptimizationPerform SMS based modulo scheduling before the first scheduling pass.
fmodulo-schedUrlSuffix(gcc/Optimize-Options.html#index-fmodulo-sched)
fmodulo-sched-allow-regmovesCommon Var(flag_modulo_sched_allow_regmoves) OptimizationPerform SMS based modulo scheduling with register moves allowed.
fmodulo-sched-allow-regmovesUrlSuffix(gcc/Optimize-Options.html#index-fmodulo-sched-allow-regmoves)
fmove-loop-invariantsCommon Var(flag_move_loop_invariants) OptimizationMove loop invariant computations out of loops.
fmove-loop-invariantsUrlSuffix(gcc/Optimize-Options.html#index-fmove-loop-invariants)
fmove-loop-storesCommon Var(flag_move_loop_stores) OptimizationMove stores out of loops.
fmove-loop-storesUrlSuffix(gcc/Optimize-Options.html#index-fmove-loop-stores)
fms-extensionsC ObjC C++ ObjC++ Var(flag_ms_extensions)Don't warn about uses of Microsoft extensions.
fmudflapC ObjC C++ ObjC++ WarnRemoved
fmudflapirC ObjC C++ ObjC++ WarnRemoved
fmudflapthC ObjC C++ ObjC++ WarnRemoved
fmultiflagsCommon Driver RejectNegativeBuilding block for specs-based multilib-aware TFLAGS.
fmultiflagsUrlSuffix(gcc/Developer-Options.html#index-fmultiflags)
fname-mangling-version-C++ ObjC++ Joined WarnRemoved
fnew-abiC++ ObjC++ WarnRemoved
fnew-inheriting-ctorsC++ ObjC++ Var(flag_new_inheriting_ctors) Init(1)Implement C++17 inheriting constructor semantics.
fnew-inheriting-ctorsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fnew-inheriting-ctors)
fnew-ttp-matchingC++ ObjC++ Var(flag_new_ttp)Implement resolution of DR 150 for matching of template template arguments.
fnew-ttp-matchingUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fnew-ttp-matching)
fnext-runtimeObjC ObjC++ LTO RejectNegative Var(flag_next_runtime)Generate code for NeXT (Apple macOS) runtime environment.
fnext-runtimeUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fnext-runtime)
fnilModula-2turns on runtime checking to detect accessing data through a NIL value pointer
fnil-receiversObjC ObjC++ Var(flag_nil_receivers) Init(1)Assume that receivers of Objective-C messages may be nil.
fnil-receiversUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fnil-receivers)
fno-inline-intrinsicsFortran RejectNegative Enum(gfc_inlineable_intrinsics) Var(flag_inline_intrinsics, GFC_FLAG_INLINE_INTRINSIC_NONE) Undocumented
fno-inline-stringopsCommon RejectNegative Enum(ilsop_fn) Var(flag_inline_stringops, ILSOP_NONE) Enum(ilsop_fn) Optimization Undocumented
fnon-call-exceptionsCommon Var(flag_non_call_exceptions) OptimizationSupport synchronous non-call exceptions.
fnon-call-exceptionsUrlSuffix(gcc/Code-Gen-Options.html#index-fnon-call-exceptions)
fnonansi-builtinsC++ ObjC++ Var(flag_no_nonansi_builtin, 0)
fnonansi-builtinsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-nonansi-builtins)
fnonnull-objectsC++ ObjC++ WarnRemoved
fnothrow-optC++ ObjC++ Optimization Var(flag_nothrow_opt)Treat a throw() exception specification as noexcept to improve code size.
fnothrow-optUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fnothrow-opt)
fobjc-abi-version=ObjC ObjC++ LTO Joined RejectNegative UInteger Var(flag_objc_abi)Specify which ABI to use for Objective-C family code and meta-data generation.
fobjc-abi-version=UrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-abi-version)
fobjc-call-cxx-cdtorsObjC++ Var(flag_objc_call_cxx_cdtors)Generate special Objective-C methods to initialize/destroy non-POD C++ ivars, if needed.
fobjc-call-cxx-cdtorsUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-call-cxx-cdtors)
fobjc-direct-dispatchObjC ObjC++ Var(flag_objc_direct_dispatch)Allow fast jumps to the message dispatcher.
fobjc-direct-dispatchUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-direct-dispatch)
fobjc-exceptionsObjC ObjC++ Var(flag_objc_exceptions)Enable Objective-C exception and synchronization syntax.
fobjc-exceptionsUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-exceptions)
fobjc-gcObjC ObjC++ LTO Var(flag_objc_gc)Enable garbage collection (GC) in Objective-C/Objective-C++ programs.
fobjc-gcUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-gc)
fobjc-nilcheckObjC ObjC++ Var(flag_objc_nilcheck,1)Enable inline checks for nil receivers with the NeXT runtime and ABI version 2.
fobjc-nilcheckUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fobjc-nilcheck)
fobjc-sjlj-exceptionsObjC ObjC++ Var(flag_objc_sjlj_exceptions) Init(-1)Enable Objective-C setjmp exception handling runtime.
fobjc-std=objc1Modula-2
fobjc-std=objc1ObjC ObjC++ Var(flag_objc1_only)Conform to the Objective-C 1.0 language as implemented in GCC 4.0.
foffload-abi-host-opts=Common Joined MissingArgError(option missing after %qs)-foffload-abi-host-opts=<options>	Specify host ABI options.
foffload-abi=Common Joined RejectNegative Enum(offload_abi)-foffload-abi=[lp64|ilp32]	Set the ABI to use in an offload compiler.
foffload-options=Common Driver Joined MissingArgError(options or targets=options missing after %qs)-foffload-options=<targets>=<options>	Specify options for the offloading targets.
foffload-options=UrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-foffload-options)
foffload=Driver Joined MissingArgError(targets missing after %qs)
foffload=UrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-foffload)
fomit-frame-pointerCommon Var(flag_omit_frame_pointer) OptimizationWhen possible do not generate stack frames.
fomit-frame-pointerUrlSuffix(gcc/Optimize-Options.html#index-fomit-frame-pointer)
fonly=D Joined RejectNegativeProcess all modules specified on the command line, but only generate code for the module specified by the argument.
fonly=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fonly)
fopenaccC ObjC C++ ObjC++ LTO Var(flag_openacc)Enable OpenACC.
fopenaccFortran LTO
fopenaccUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenacc) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenacc)
fopenaccUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenacc) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenacc)
fopenacc-dim=C ObjC C++ ObjC++ LTO Joined Var(flag_openacc_dims)Specify default OpenACC compute dimensions.
fopenacc-dim=Fortran LTO Joined Var(flag_openacc_dims)
fopenacc-dim=UrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenacc-dim)
fopenacc-dim=UrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenacc-dim)
fopenmpC ObjC C++ ObjC++ LTO Var(flag_openmp)Enable OpenMP (implies -frecursive in Fortran).
fopenmpFortran LTO
fopenmpUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenmp)
fopenmpUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenmp)
fopenmp-allocatorsFortran Var(flag_openmp_allocators)Handle OpenMP allocators for allocatables and pointers.
fopenmp-allocatorsLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenmp-allocators)
fopenmp-simdC ObjC C++ ObjC++ Var(flag_openmp_simd)Enable OpenMP's SIMD directives.
fopenmp-simdFortran
fopenmp-simdUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp-simd) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenmp-simd)
fopenmp-simdUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp-simd) LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fopenmp-simd)
fopenmp-target-simd-cloneCommon Alias(fopenmp-target-simd-clone=,any,none)
fopenmp-target-simd-cloneUrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp-target-simd-clone)
fopenmp-target-simd-clone=Common Joined RejectNegative Enum(target_simd_clone_device) Var(flag_openmp_target_simd_clone) Init(OMP_TARGET_SIMD_CLONE_NONE) OptimizationGenerate SIMD clones for functions with the OpenMP declare target directive.
fopenmp-target-simd-clone=UrlSuffix(gcc/OpenMP-and-OpenACC-Options.html#index-fopenmp-target-simd-clone)
foperator-namesC++ ObjC++Recognize C++ keywords like \"compl\" and \"xor\".
foperator-namesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-operator-names)
fopt-infoCommon Var(flag_opt_info) OptimizationEnable all optimization info dumps on stderr.
fopt-infoUrlSuffix(gcc/Developer-Options.html#index-fopt-info)
fopt-info-Common Joined RejectNegative Var(common_deferred_options) Defer-fopt-info[-<type>=filename]	Dump compiler optimization details.
foptimize-crcCommon Var(flag_optimize_crc) OptimizationDetect loops calculating CRC and replace with faster implementation.If the target supports CRC instruction and the CRC loop uses the samepolynomial as the one used in the CRC instruction, directly replace with thecorresponding CRC instruction.Otherwise, if the target supports carry-less-multiplication instruction,generate CRC using it.If neither case applies, generate table-based CRC.
foptimize-crcUrlSuffix(gcc/Optimize-Options.html#index-foptimize-crc)
foptimize-register-moveCommon IgnoreDoes nothing. Preserved for backward compatibility.
foptimize-sibling-callsCommon Var(flag_optimize_sibling_calls) OptimizationOptimize sibling and tail recursive calls.
foptimize-sibling-callsUrlSuffix(gcc/Optimize-Options.html#index-foptimize-sibling-calls)
foptimize-strlenCommon Var(flag_optimize_strlen) OptimizationEnable string length optimizations on trees.
foptimize-strlenUrlSuffix(gcc/Optimize-Options.html#index-foptimize-strlen)
foptional-diagsC++ ObjC++ IgnoreDoes nothing.  Preserved for backward compatibility.
foptional-diagsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-optional-diags)
fpack-derivedFortran Var(flag_pack_derived)Try to lay out derived types as compactly as possible.
fpack-derivedLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fpack-derived)
fpack-structCommon Var(flag_pack_struct) OptimizationPack structure members together without holes.
fpack-structUrlSuffix(gcc/Code-Gen-Options.html#index-fpack-struct)
fpack-struct=Common RejectNegative Joined UInteger Optimization-fpack-struct=<number>	Set initial maximum structure member alignment.
fpack-struct=UrlSuffix(gcc/Code-Gen-Options.html#index-fpack-struct)
fpad-sourceFortran Var(flag_pad_source) Init(1)Pad shorter fixed form lines to line width with spaces.
fpad-sourceLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-fpad-source)
fpartial-inliningCommon Var(flag_partial_inlining) OptimizationPerform partial inlining.
fpartial-inliningUrlSuffix(gcc/Optimize-Options.html#index-fpartial-inlining)
fpatchable-function-entry=Common Var(flag_patchable_function_entry) Joined OptimizationInsert NOP instructions at each function entry.
fpatchable-function-entry=UrlSuffix(gcc/Instrumentation-Options.html#index-fpatchable-function-entry)
fpcc-struct-returnCommon Var(flag_pcc_struct_return,1) Init(DEFAULT_PCC_STRUCT_RETURN) OptimizationReturn small aggregates in memory, not registers.
fpch-depsC ObjC C++ ObjC++
fpch-depsUrlSuffix(gcc/Preprocessor-Options.html#index-fpch-deps)
fpch-preprocessC ObjC C++ ObjC++Look for and use PCH files even when preprocessing.
fpch-preprocessUrlSuffix(gcc/Preprocessor-Options.html#index-fpch-preprocess)
fpeel-loopsCommon Var(flag_peel_loops) OptimizationPerform loop peeling.
fpeel-loopsUrlSuffix(gcc/Optimize-Options.html#index-fpeel-loops)
fpeepholeCommon Var(flag_no_peephole,0) OptimizationEnable machine specific peephole optimizations.
fpeepholeUrlSuffix(gcc/Optimize-Options.html#index-fno-peephole)
fpeephole2Common Var(flag_peephole2) OptimizationEnable an RTL peephole pass before sched2.
fpeephole2UrlSuffix(gcc/Optimize-Options.html#index-fno-peephole2)
fpermissiveC ObjC C++ ObjC++ Var(flag_permissive)Downgrade conformance errors to warnings.
fpermissiveUrlSuffix(gcc/Warning-Options.html#index-fpermissive)
fpermitted-flt-eval-methods=Common Joined RejectNegative Enum(permitted_flt_eval_methods) Var(flag_permitted_flt_eval_methods) Init(PERMITTED_FLT_EVAL_METHODS_DEFAULT)-fpermitted-flt-eval-methods=[c11|ts-18661]	Specify which values of FLT_EVAL_METHOD are permitted.
fpermitted-flt-eval-methods=UrlSuffix(gcc/C-Dialect-Options.html#index-fpermitted-flt-eval-methods)
fpicCommon Var(flag_pic,1) Negative(fpie) Init(-1)Generate position-independent code if possible (small mode).
fpicUrlSuffix(gcc/Code-Gen-Options.html#index-fpic)
fpieCommon Var(flag_pie,1) Negative(fPIC) Init(-1)Generate position-independent code for executables if possible (small mode).
fpieUrlSuffix(gcc/Code-Gen-Options.html#index-fpie)
fpimModula-2use PIM [234] dialect of Modula-2
fpim2Modula-2use PIM 2 dialect of Modula-2
fpim3Modula-2use PIM 3 dialect of Modula-2
fpim4Modula-2use PIM 4 dialect of Modula-2
fplan9-extensionsC ObjC Var(flag_plan9_extensions)Enable Plan 9 language extensions.
fpltCommon Var(flag_plt) Init(1) OptimizationUse PLT for PIC calls (-fno-plt: load the address from GOT at call site).
fpltUrlSuffix(gcc/Code-Gen-Options.html#index-fno-plt)
fplugin-arg-Common Joined RejectNegative Var(common_deferred_options) Defer-fplugin-arg-<name>-<key>[=<value>]	Specify argument <key>=<value> for plugin <name>.
fplugin=Common Joined RejectNegative Var(common_deferred_options) DeferSpecify a plugin to load.
fplugin=UrlSuffix(gcc/Overall-Options.html#index-fplugin)
fpositive-mod-floor-divModula-2force positive result from MOD and DIV result floor
fpost-ipa-mem-reportCommon Var(post_ipa_mem_report)Report on memory allocation before interprocedural optimization.
fpost-ipa-mem-reportUrlSuffix(gcc/Developer-Options.html#index-fpost-ipa-mem-report)
fpostconditionsD Var(flag_postconditions)Generate code for postcondition contracts.
fpostconditionsLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-postconditions)
fpre-include=Fortran RejectNegative Joined Var(flag_pre_include) UndocumentedPath to header file that should be pre-included before each compilation unit.
fpre-ipa-mem-reportCommon Var(pre_ipa_mem_report)Report on memory allocation before interprocedural optimization.
fpre-ipa-mem-reportUrlSuffix(gcc/Developer-Options.html#index-fpre-ipa-mem-report)
fpreconditionsD Var(flag_preconditions)Generate code for precondition contracts.
fpreconditionsLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-preconditions)
fpredictive-commoningCommon Var(flag_predictive_commoning) OptimizationRun predictive commoning optimization.
fpredictive-commoningUrlSuffix(gcc/Optimize-Options.html#index-fpredictive-commoning)
fprefetch-loop-arraysCommon Var(flag_prefetch_loop_arrays) Init(-1) OptimizationGenerate prefetch instructions, if available, for arrays in loops.
fprefetch-loop-arraysUrlSuffix(gcc/Optimize-Options.html#index-fprefetch-loop-arrays)
fpreprocessedC ObjC C++ ObjC++Treat the input file as already preprocessed.
fpreprocessedFortran
fpreprocessedModula-2
fpreprocessedUrlSuffix(gcc/Preprocessor-Options.html#index-fpreprocessed)
fpreprocessedUrlSuffix(gcc/Preprocessor-Options.html#index-fpreprocessed)
fpreprocessedUrlSuffix(gcc/Preprocessor-Options.html#index-fpreprocessed)
fpretty-templatesC++ ObjC++ Var(flag_pretty_templates) Init(1)Do not pretty-print template specializations as the template signature followed by the arguments.
fpretty-templatesUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-pretty-templates)
fpreview=allD RejectNegativeTurn on all upcoming D language features.
fpreview=bitfieldsD RejectNegativeImplement D bit-fields.
fpreview=dip1000D RejectNegativeImplement DIP1000: Scoped pointers.
fpreview=dip1008D RejectNegativeImplement DIP1008: Allow exceptions in @nogc code.
fpreview=dip1021D RejectNegativeImplement DIP1021: Mutable function arguments.
fpreview=dtorfieldsD RejectNegativeDestruct fields of partially constructed objects.
fpreview=fieldwiseD RejectNegativeUse field-wise comparisons for struct equality.
fpreview=fixaliasthisD RejectNegativeWhen a symbol is resolved, check `alias this' scope before going to upper scopes.
fpreview=fiximmutableconvD RejectNegativeDisallow unsound immutable conversions that were formerly incorrectly permitted.
fpreview=inD RejectNegativeImplement 'in' parameters to mean scope const.
fpreview=inclusiveincontractsD RejectNegativeImplement 'in' contracts of overridden methods to be a superset of parent contract.
fpreview=nosharedaccessD RejectNegativeDisable access to shared memory objects.
fpreview=rvaluerefparamD RejectNegativeEnable rvalue arguments to ref parameters.
fpreview=saferD RejectNegativeEnable safety checks on all functions by default.
fpreview=systemvariablesD RejectNegativeDisable access to variables marked `@system' from @safe code.
fprintf-return-valueC ObjC C++ ObjC++ LTO Optimization Var(flag_printf_return_value) Init(1)Treat known sprintf return values as constants.
fprintf-return-valueUrlSuffix(gcc/Optimize-Options.html#index-fno-printf-return-value)
fprofileCommon Var(profile_flag)Enable basic program profiling code.
fprofile-abs-pathCommon Var(profile_abs_path_flag)Generate absolute source path names for gcov.
fprofile-abs-pathUrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-abs-path)
fprofile-arcsCommon Var(profile_arc_flag)Insert arc-based program profiling code.
fprofile-correctionCommon Var(flag_profile_correction)Enable correction of flow inconsistent profile data input.
fprofile-correctionUrlSuffix(gcc/Optimize-Options.html#index-fprofile-correction)
fprofile-dir=Common Joined RejectNegative Var(profile_data_prefix)Set the top-level directory for storing the profile data.The default is 'pwd'.
fprofile-dir=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-dir)
fprofile-exclude-files=Common Joined RejectNegative Var(flag_profile_exclude_files)Instrument only functions from files whose name does not match any of the regular expressions (separated by semi-colons).
fprofile-exclude-files=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-exclude-files)
fprofile-filter-files=Common Joined RejectNegative Var(flag_profile_filter_files)Instrument only functions from files whose name matches any of the regular expressions (separated by semi-colons).
fprofile-filter-files=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-filter-files)
fprofile-generateCommonEnable common options for generating profile info for profile feedback directed optimizations.
fprofile-generateUrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-generate)
fprofile-generate=Common Joined RejectNegativeEnable common options for generating profile info for profile feedback directed optimizations, and set -fprofile-dir=.
fprofile-generate=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-generate)
fprofile-info-sectionCommon RejectNegativeRegister the profile information in the .gcov_info section instead of using a constructor/destructor.
fprofile-info-sectionUrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-info-section)
fprofile-info-section=Common Joined RejectNegative Var(profile_info_section)Register the profile information in the specified section instead of using a constructor/destructor.
fprofile-info-section=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-info-section)
fprofile-note=Common Joined RejectNegative Var(profile_note_location)Select the name for storing the profile note file.
fprofile-note=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-note)
fprofile-partial-trainingCommon Var(flag_profile_partial_training) OptimizationDo not assume that functions never executed during the train run are cold.
fprofile-partial-trainingUrlSuffix(gcc/Optimize-Options.html#index-fprofile-partial-training)
fprofile-prefix-map=Common Joined RejectNegative Var(common_deferred_options) Defer-fprofile-prefix-map=<old>=<new>	Map one directory name to another in GCOV coverage result.
fprofile-prefix-map=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-prefix-map)
fprofile-prefix-path=Common Joined RejectNegative Var(profile_prefix_path)Remove prefix from absolute path before mangling name for -fprofile-generate= and -fprofile-use=.
fprofile-prefix-path=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-prefix-path)
fprofile-reorder-functionsCommon Var(flag_profile_reorder_functions) OptimizationEnable function reordering that improves code placement.
fprofile-reorder-functionsUrlSuffix(gcc/Optimize-Options.html#index-fprofile-reorder-functions)
fprofile-reportCommon Var(profile_report)Report on consistency of profile.
fprofile-reportUrlSuffix(gcc/Developer-Options.html#index-fprofile-report)
fprofile-reproducible=Common Joined RejectNegative Var(flag_profile_reproducible) Enum(profile_reproducibility) Init(PROFILE_REPRODUCIBILITY_SERIAL)-fprofile-reproducible=[serial|parallel-runs|multithreaded]	Control level of reproducibility of profile gathered by -fprofile-generate.
fprofile-reproducible=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-reproducible)
fprofile-update=Common Joined RejectNegative Enum(profile_update) Var(flag_profile_update) Init(PROFILE_UPDATE_SINGLE)-fprofile-update=[single|atomic|prefer-atomic]	Set the profile update method.
fprofile-update=UrlSuffix(gcc/Instrumentation-Options.html#index-fprofile-update)
fprofile-useCommon Var(flag_profile_use)Enable common options for performing profile feedback directed optimizations.
fprofile-useUrlSuffix(gcc/Optimize-Options.html#index-fprofile-use)
fprofile-use=Common Joined RejectNegativeEnable common options for performing profile feedback directed optimizations, and set -fprofile-dir=.
fprofile-use=UrlSuffix(gcc/Optimize-Options.html#index-fprofile-use)
fprofile-valuesCommon Var(flag_profile_values)Insert code to profile values of expressions.
fprofile-valuesUrlSuffix(gcc/Optimize-Options.html#index-fprofile-values)
fprotect-parensFortran Var(flag_protect_parens) Init(-1)Protect parentheses in expressions.
fprotect-parensLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fno-protect-parens)
fpthreadModula-2link against the pthread library (default on)
fqModula-2internal compiler debugging information, dump the list of quadruples
frandom-seedCommon Var(common_deferred_options) Defer
frandom-seedUrlSuffix(gcc/Developer-Options.html#index-frandom-seed)
frandom-seed=Common Joined RejectNegative Var(common_deferred_options) Defer-frandom-seed=<string>	Make compile reproducible using <string>.
frandom-seed=UrlSuffix(gcc/Developer-Options.html#index-frandom-seed)
frangeModula-2turns on all range checking for numerical values
frange-checkFortran Var(flag_range_check) Init(1)Enable range checking during compilation.
frange-checkLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-frange-check)
frange-for-ext-tempsC++ ObjC++ Var(flag_range_for_ext_temps)Enable lifetime extension of range based for temporaries.
frange-for-ext-tempsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-frange-for-ext-temps)
freal-4-real-10Fortran RejectNegative Var(flag_real4_kind,10)Interpret any REAL(4) as a REAL(10).
freal-4-real-10LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-4-real-10)
freal-4-real-16Fortran RejectNegative Var(flag_real4_kind,16)Interpret any REAL(4) as a REAL(16).
freal-4-real-16LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-4-real-16)
freal-4-real-8Fortran RejectNegative Var(flag_real4_kind,8)Interpret any REAL(4) as a REAL(8).
freal-4-real-8LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-4-real-8)
freal-8-real-10Fortran RejectNegative Var(flag_real8_kind,10)Interpret any REAL(8) as a REAL(10).
freal-8-real-10LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-8-real-10)
freal-8-real-16Fortran RejectNegative Var(flag_real8_kind,16)Interpret any REAL(8) as a REAL(16).
freal-8-real-16LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-8-real-16)
freal-8-real-4Fortran RejectNegative Var(flag_real8_kind,4)Interpret any REAL(8) as a REAL(4).
freal-8-real-4LangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-freal-8-real-4)
frealloc-lhsFortran Var(flag_realloc_lhs) Init(-1)Reallocate the LHS in assignments.
frealloc-lhsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-frealloc-lhs)
freciprocal-mathCommon Var(flag_reciprocal_math) SetByCombined OptimizationSame as -fassociative-math for expressions which include division.
freciprocal-mathUrlSuffix(gcc/Optimize-Options.html#index-freciprocal-math)
frecord-gcc-switchesCommon Var(flag_record_gcc_switches)Record gcc command line switches in the object file.
frecord-gcc-switchesUrlSuffix(gcc/Code-Gen-Options.html#index-frecord-gcc-switches)
frecord-marker=4Fortran RejectNegative Var(flag_record_marker,4)Use a 4-byte record marker for unformatted files.
frecord-marker=8Fortran RejectNegative Var(flag_record_marker,8)Use an 8-byte record marker for unformatted files.
frecursiveFortran Var(flag_recursive)Allocate local variables on the stack to allow indirect recursion.
frecursiveLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-frecursive)
freeCommon Var(flag_ree) Init(0) OptimizationTurn on Redundant Extensions Elimination pass.
freeUrlSuffix(gcc/Optimize-Options.html#index-free-1)
freg-struct-returnCommon NegativeAlias Alias(fpcc_struct_return) OptimizationReturn small aggregates in registers.
freg-struct-returnUrlSuffix(gcc/Code-Gen-Options.html#index-freg-struct-return)
fregmoveCommon IgnoreDoes nothing. Preserved for backward compatibility.
freleaseDCompile release version.
freleaseLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-release)
frename-registersCommon Var(flag_rename_registers) Optimization EnabledBy(funroll-loops)Perform a register renaming optimization pass.
frename-registersUrlSuffix(gcc/Optimize-Options.html#index-frename-registers)
freorder-blocksCommon Var(flag_reorder_blocks) OptimizationReorder basic blocks to improve code placement.
freorder-blocksUrlSuffix(gcc/Optimize-Options.html#index-freorder-blocks)
freorder-blocks-algorithm=Common Joined RejectNegative Enum(reorder_blocks_algorithm) Var(flag_reorder_blocks_algorithm) Init(REORDER_BLOCKS_ALGORITHM_SIMPLE) Optimization-freorder-blocks-algorithm=[simple|stc]	Set the used basic block reordering algorithm.
freorder-blocks-algorithm=UrlSuffix(gcc/Optimize-Options.html#index-freorder-blocks-algorithm)
freorder-blocks-and-partitionCommon Var(flag_reorder_blocks_and_partition) OptimizationReorder basic blocks and partition into hot and cold sections.
freorder-blocks-and-partitionUrlSuffix(gcc/Optimize-Options.html#index-freorder-blocks-and-partition)
freorder-functionsCommon Var(flag_reorder_functions) OptimizationReorder functions to improve code placement.
freorder-functionsUrlSuffix(gcc/Optimize-Options.html#index-freorder-functions)
frepack-arraysFortran Var(flag_repack_arrays)Copy array sections into a contiguous block on procedure entry.
frepack-arraysLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-frepack-arrays)
freplace-objc-classesObjC ObjC++ LTO Var(flag_replace_objc_classes)Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime.
freplace-objc-classesUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-freplace-objc-classes)
frepoC++ ObjC++ WarnRemovedRemoved in GCC 10.  This switch has no effect.
freport-bugCommon Driver Var(flag_report_bug)Collect and dump debug information into temporary file if ICE in C/C++compiler occurred.
freport-bugUrlSuffix(gcc/Developer-Options.html#index-freport-bug)
frequire-return-statementGo Var(go_require_return_statement) Init(1) WarningFunctions which return values must end with return statements.
frerun-cse-after-loopCommon Var(flag_rerun_cse_after_loop) OptimizationAdd a common subexpression elimination pass after loop optimizations.
frerun-cse-after-loopUrlSuffix(gcc/Optimize-Options.html#index-frerun-cse-after-loop)
frerun-loop-optCommon IgnoreDoes nothing.  Preserved for backward compatibility.
freschedule-modulo-scheduled-loopsCommon Var(flag_resched_modulo_sched) OptimizationEnable/Disable the traditional scheduling in loops that already passed modulo scheduling.
freschedule-modulo-scheduled-loopsUrlSuffix(gcc/Optimize-Options.html#index-freschedule-modulo-scheduled-loops)
fresolution=LTO JoinedThe resolution file.
freturnModula-2turns on runtime checking for functions which finish without executing a RETURN statement
frevert=allD RejectNegativeTurn off all revertable D language features.
frevert=dip1000D RejectNegativeRevert DIP1000: Scoped pointers.
frevert=dtorfieldsD RejectNegativeDon't destruct fields of partially constructed objects.
frevert=intpromoteD RejectNegativeDon't use C-style integral promotion for unary '+', '-' and '~'.
frounding-mathCommon Var(flag_rounding_math) Optimization SetByCombinedDisable optimizations that assume default FP rounding behavior.
frounding-mathUrlSuffix(gcc/Optimize-Options.html#index-frounding-math)
frttiC++ ObjC++ Optimization Var(flag_rtti) Init(1)Generate run time type descriptor information.
frttiD
frttiUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-rtti) LangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-rtti)
frttiUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-rtti) LangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-rtti)
fruntime-modules=Modula-2 Joinedspecify the list of runtime modules and their initialization order
frust-borrowcheckRust Var(flag_borrowcheck)Use the WIP borrow checker.
frust-cfg=Rust Joined RejectNegative-frust-cfg=<name>             Set a config expansion option
frust-compile-until=Rust Joined RejectNegative Enum(frust_compile_until) Var(flag_rust_compile_until)-frust-compile-until=[ast|attributecheck|expansion|astvalidation|featuregating|nameresolution|lowering|typecheck|privacy|unsafety|const|borrowcheck|compilation|end]             The pipeline will run up until this stage when compiling Rust code
frust-crate-type=Rust Joined RejectNegative Enum(frust_crate_type) Var(flag_rust_crate_type)-frust-crate-type=[bin|lib|rlib|dylib|cdylib|staticlib|proc-macro]     Crate type to emit
frust-crate=Rust Joined RejectNegative-frust-crate=<name>             Set the crate name for the compilation
frust-debugRust Var(flag_rust_debug)Dump various Rust front end internals.
frust-dump-Rust Joined RejectNegative-frust-dump-<type>              Dump Rust frontend internal information.
frust-edition=Rust Joined RejectNegative Enum(frust_edition) Var(flag_rust_edition)-frust-edition=[2015|2018|2021]             Edition to use when compiling rust code
frust-embed-metadataRust Var(flag_rust_embed_metadata)Enable embedding metadata directly into object files
frust-extern=Rust RejectNegative Joined-frust-extern=              Specify where an external library is located
frust-incomplete-and-experimental-compiler-do-not-useRust Var(flag_rust_experimental)Enable experimental compilation of Rust files at your own risk
frust-mangling=Rust Joined RejectNegative Enum(frust_mangling) Var(flag_rust_mangling)-frust-mangling=[legacy|v0]     Version to use for name mangling
frust-max-recursion-depth=Rust RejectNegative Type(int) Var(rust_max_recursion_depth) Init(64)-frust-max-recursion-depth=<integer>
frust-metadata-output=Rust Joined RejectNegative-frust-metadata-output=<path.rox>  Path to output crate metadata
frust-name-resolution-2.0Rust Var(flag_name_resolution_2_0)Use the temporary and experimental name resolution pipeline instead of the stable one
fsanitize-address-use-after-scopeCommon Driver Var(flag_sanitize_address_use_after_scope) Init(0)
fsanitize-address-use-after-scopeUrlSuffix(gcc/Instrumentation-Options.html#index-fsanitize-address-use-after-scope)
fsanitize-coverage=Common Joined Enum(sanitize_coverage) Var(flag_sanitize_coverage) EnumBitSetSelect type of coverage sanitization.
fsanitize-recoverCommonThis switch is deprecated; use -fsanitize-recover= instead.
fsanitize-recoverUrlSuffix(gcc/Instrumentation-Options.html#index-fno-sanitize-recover)
fsanitize-recover=Common JoinedAfter diagnosing undefined behavior attempt to continue execution.
fsanitize-recover=UrlSuffix(gcc/Instrumentation-Options.html#index-fno-sanitize-recover)
fsanitize-sections=Common Joined RejectNegative Var(common_deferred_options) Defer-fsanitize-sections=<sec1,sec2,...>	Sanitize global variablesin user-defined sections.
fsanitize-sections=UrlSuffix(gcc/Instrumentation-Options.html#index-fsanitize-sections)
fsanitize-trapCommon Driver
fsanitize-trapUrlSuffix(gcc/Instrumentation-Options.html#index-fno-sanitize-trap)
fsanitize-trap=Common Driver JoinedUse traps instead of diagnostics of undefined behavior sanitizers.
fsanitize-trap=UrlSuffix(gcc/Instrumentation-Options.html#index-fno-sanitize-trap)
fsanitize-undefined-trap-on-errorCommon Driver Alias(fsanitize-trap)This switch is deprecated; use -fsanitize-trap= instead.
fsanitize-undefined-trap-on-errorUrlSuffix(gcc/Instrumentation-Options.html#index-fsanitize-undefined-trap-on-error)
fsanitize=Common Driver JoinedSelect what to sanitize.
fsave-mixins=D Joined RejectNegative-fsave-mixins=<filename>	Expand and save mixins to file specified by <filename>.
fsave-mixins=LangUrlSuffix_D(gdc/Code-Generation.html#index-fsave-mixins)
fsave-optimization-recordCommon Var(flag_save_optimization_record) OptimizationWrite a SRCFILE.opt-record.json file detailing what optimizations were performed.
fsave-optimization-recordUrlSuffix(gcc/Developer-Options.html#index-fsave-optimization-record)
fscaffold-cModula-2generate a C source scaffold for the current module being compiled
fscaffold-c++Modula-2generate a C++ source scaffold for the current module being compiled
fscaffold-dynamicModula-2the modules initialization order is dynamically determined by M2RTS and application dependencies
fscaffold-mainModula-2generate the main function
fscaffold-staticModula-2generate static scaffold initialization and finalization for every module inside main
fsched-critical-path-heuristicCommon Var(flag_sched_critical_path_heuristic) Init(1) OptimizationEnable the critical path heuristic in the scheduler.
fsched-critical-path-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-critical-path-heuristic)
fsched-dep-count-heuristicCommon Var(flag_sched_dep_count_heuristic) Init(1) OptimizationEnable the dependent count heuristic in the scheduler.
fsched-dep-count-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-dep-count-heuristic)
fsched-group-heuristicCommon Var(flag_sched_group_heuristic) Init(1) OptimizationEnable the group heuristic in the scheduler.
fsched-group-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-group-heuristic)
fsched-interblockCommon Var(flag_schedule_interblock) Init(1) OptimizationEnable scheduling across basic blocks.
fsched-interblockUrlSuffix(gcc/Optimize-Options.html#index-fno-sched-interblock)
fsched-last-insn-heuristicCommon Var(flag_sched_last_insn_heuristic) Init(1) OptimizationEnable the last instruction heuristic in the scheduler.
fsched-last-insn-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-last-insn-heuristic)
fsched-pressureCommon Var(flag_sched_pressure) Init(0) OptimizationEnable register pressure sensitive insn scheduling.
fsched-pressureUrlSuffix(gcc/Optimize-Options.html#index-fsched-pressure)
fsched-rank-heuristicCommon Var(flag_sched_rank_heuristic) Init(1) OptimizationEnable the rank heuristic in the scheduler.
fsched-rank-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-rank-heuristic)
fsched-specCommon Var(flag_schedule_speculative) Init(1) OptimizationAllow speculative motion of non-loads.
fsched-specUrlSuffix(gcc/Optimize-Options.html#index-fno-sched-spec)
fsched-spec-insn-heuristicCommon Var(flag_sched_spec_insn_heuristic) Init(1) OptimizationEnable the speculative instruction heuristic in the scheduler.
fsched-spec-insn-heuristicUrlSuffix(gcc/Optimize-Options.html#index-fsched-spec-insn-heuristic)
fsched-spec-loadCommon Var(flag_schedule_speculative_load) OptimizationAllow speculative motion of some loads.
fsched-spec-loadUrlSuffix(gcc/Optimize-Options.html#index-fsched-spec-load)
fsched-spec-load-dangerousCommon Var(flag_schedule_speculative_load_dangerous) OptimizationAllow speculative motion of more loads.
fsched-spec-load-dangerousUrlSuffix(gcc/Optimize-Options.html#index-fsched-spec-load-dangerous)
fsched-stalled-insnsCommon Var(flag_sched_stalled_insns) Optimization UIntegerAllow premature scheduling of queued insns.
fsched-stalled-insnsUrlSuffix(gcc/Optimize-Options.html#index-fsched-stalled-insns)
fsched-stalled-insns-depCommon Var(flag_sched_stalled_insns_dep,1) Init(1) Optimization UIntegerSet dependence distance checking in premature scheduling of queued insns.
fsched-stalled-insns-depUrlSuffix(gcc/Optimize-Options.html#index-fsched-stalled-insns-dep)
fsched-stalled-insns-dep=Common RejectNegative Joined UInteger Optimization-fsched-stalled-insns-dep=<number>	Set dependence distance checking in premature scheduling of queued insns.
fsched-stalled-insns-dep=UrlSuffix(gcc/Optimize-Options.html#index-fsched-stalled-insns-dep)
fsched-stalled-insns=Common RejectNegative Joined UInteger Optimization-fsched-stalled-insns=<number>	Set number of queued insns that can be prematurely scheduled.
fsched-stalled-insns=UrlSuffix(gcc/Optimize-Options.html#index-fsched-stalled-insns)
fsched-verbose=Common RejectNegative Joined UInteger Var(sched_verbose_param) Init(1)-fsched-verbose=<number>	Set the verbosity level of the scheduler.
fsched-verbose=UrlSuffix(gcc/Developer-Options.html#index-fsched-verbose)
fsched2-use-superblocksCommon Var(flag_sched2_use_superblocks) OptimizationIf scheduling post reload, do superblock scheduling.
fsched2-use-superblocksUrlSuffix(gcc/Optimize-Options.html#index-fsched2-use-superblocks)
fsched2-use-tracesCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fschedule-fusionCommon Var(flag_schedule_fusion) Init(2) OptimizationPerform a target dependent instruction fusion optimization pass.
fschedule-fusionUrlSuffix(gcc/Optimize-Options.html#index-fschedule-fusion)
fschedule-insnsCommon Var(flag_schedule_insns) OptimizationReschedule instructions before register allocation.
fschedule-insnsUrlSuffix(gcc/Optimize-Options.html#index-fschedule-insns)
fschedule-insns2Common Var(flag_schedule_insns_after_reload) OptimizationReschedule instructions after register allocation.
fschedule-insns2UrlSuffix(gcc/Optimize-Options.html#index-fschedule-insns2)
fsearch-include-pathC ObjC C++ ObjC++Look for the main source file on the include path.
fsearch-include-pathUrlSuffix(gcc/Preprocessor-Options.html#index-fsearch-include-path)
fsearch-include-path=C++ ObjC++ Joined RejectNegative Undocumented
fsearch-include-path=UrlSuffix(gcc/Preprocessor-Options.html#index-fsearch-include-path)
fsecond-underscoreFortran Var(flag_second_underscore) Init(-1)Append a second underscore if the name already contains an underscore.
fsecond-underscoreLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fsecond-underscore)
fsection-anchorsCommon Var(flag_section_anchors) OptimizationAccess data in the same section from shared anchor points.
fsection-anchorsUrlSuffix(gcc/Optimize-Options.html#index-fsection-anchors)
fseeCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fsel-sched-pipeliningCommon Var(flag_sel_sched_pipelining) Init(0) OptimizationPerform software pipelining of inner loops during selective scheduling.
fsel-sched-pipeliningUrlSuffix(gcc/Optimize-Options.html#index-fsel-sched-pipelining)
fsel-sched-pipelining-outer-loopsCommon Var(flag_sel_sched_pipelining_outer_loops) Init(0) OptimizationPerform software pipelining of outer loops during selective scheduling.
fsel-sched-pipelining-outer-loopsUrlSuffix(gcc/Optimize-Options.html#index-fsel-sched-pipelining-outer-loops)
fsel-sched-reschedule-pipelinedCommon Var(flag_sel_sched_reschedule_pipelined) Init(0) OptimizationReschedule pipelined regions without pipelining.
fselective-schedulingCommon Var(flag_selective_scheduling) OptimizationSchedule instructions using selective scheduling algorithm.
fselective-schedulingUrlSuffix(gcc/Optimize-Options.html#index-fselective-scheduling)
fselective-scheduling2Common Var(flag_selective_scheduling2) OptimizationRun selective scheduling after reload.
fselective-scheduling2UrlSuffix(gcc/Optimize-Options.html#index-fselective-scheduling2)
fself-test=Common Undocumented Joined Var(flag_self_test)Run self-tests, using the given path to locate test files.
fsemantic-interpositionCommon Var(flag_semantic_interposition) Init(1) OptimizationAllow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker.
fsemantic-interpositionUrlSuffix(gcc/Optimize-Options.html#index-fsemantic-interposition)
fsharedModula-2generate a shared library from the module
fshort-enumsAda AdaWhy AdaSCILUse the narrowest integer type possible for enumeration types.
fshort-enumsC ObjC C++ ObjC++ LTO Optimization Var(flag_short_enums)Use the narrowest integer type possible for enumeration types.
fshort-enumsFortran Var(flag_short_enums)
fshort-enumsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fshort-enums)
fshort-enumsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fshort-enums)
fshort-enumsLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fshort-enums)
fshort-wcharC ObjC C++ ObjC++ LTO Optimization Var(flag_short_wchar)Force the underlying type for \"wchar_t\" to be \"unsigned short\".
fshort-wcharUrlSuffix(gcc/Code-Gen-Options.html#index-fshort-wchar)
fshow-columnCommon Var(flag_show_column) Init(1)Show column numbers in diagnostics, when available.  Default on.
fshow-columnUrlSuffix(gcc/Diagnostic-Message-Formatting-Options.html#index-fno-show-column)
fshrink-wrapCommon Var(flag_shrink_wrap) OptimizationEmit function prologues only before parts of the function that need it,rather than at the top of the function.
fshrink-wrapUrlSuffix(gcc/Optimize-Options.html#index-fshrink-wrap)
fshrink-wrap-separateCommon Var(flag_shrink_wrap_separate) Init(1) OptimizationShrink-wrap parts of the prologue and epilogue separately.
fshrink-wrap-separateUrlSuffix(gcc/Optimize-Options.html#index-fshrink-wrap-separate)
fsign-zeroFortran Var(flag_sign_zero) Init(1)Apply negative sign to zero values.
fsign-zeroLangUrlSuffix_Fortran(gfortran/Runtime-Options.html#index-fsign-zero)
fsignaling-nansCommon Var(flag_signaling_nans) Optimization SetByCombinedDisable optimizations observable by IEEE signaling NaNs.
fsignaling-nansUrlSuffix(gcc/Optimize-Options.html#index-fsignaling-nans)
fsigned-bitfieldsC ObjC C++ ObjC++ Var(flag_signed_bitfields) Init(1)When \"signed\" or \"unsigned\" is not given make the bitfield signed.
fsigned-charAda AdaWhy AdaSCILMake \"char\" signed by default.
fsigned-charC ObjC C++ ObjC++ LTO Var(flag_signed_char)Make \"char\" signed by default.
fsigned-zerosCommon Var(flag_signed_zeros) Init(1) Optimization SetByCombinedDisable floating point optimizations that ignore the IEEE signedness of zero.
fsigned-zerosUrlSuffix(gcc/Optimize-Options.html#index-fno-signed-zeros)
fsimd-cost-model=Common Joined RejectNegative Enum(vect_cost_model) Var(flag_simd_cost_model) Init(VECT_COST_MODEL_UNLIMITED) Optimization-fsimd-cost-model=[unlimited|dynamic|cheap|very-cheap]	Specifies the vectorization cost model for code marked with a simd directive.
fsimd-cost-model=UrlSuffix(gcc/Optimize-Options.html#index-fsimd-cost-model)
fsingle-precision-constantCommon Var(flag_single_precision_constant) OptimizationConvert floating point constants to single precision constants.
fsingle-precision-constantUrlSuffix(gcc/Optimize-Options.html#index-fsingle-precision-constant)
fsized-deallocationC++ ObjC++ Var(flag_sized_deallocation) Init(-1)Enable C++14 sized deallocation support.
fsized-deallocationUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fsized-deallocation)
fsoft-check-allModula-2turns on all software runtime checking (an abbreviation for -fnil -frange -findex -fwholediv -fcase -freturn -fwholevalue -ffloatvalue)
fsourcesModula-2display the location of module source files as they are compiled
fsplit-ivs-in-unrollerCommon Var(flag_split_ivs_in_unroller) Init(1) OptimizationSplit lifetimes of induction variables when loops are unrolled.
fsplit-ivs-in-unrollerUrlSuffix(gcc/Optimize-Options.html#index-fsplit-ivs-in-unroller)
fsplit-loopsCommon Var(flag_split_loops) OptimizationPerform loop splitting.
fsplit-loopsUrlSuffix(gcc/Optimize-Options.html#index-fsplit-loops)
fsplit-pathsCommon Var(flag_split_paths) Init(0) OptimizationSplit paths leading to loop backedges.
fsplit-pathsUrlSuffix(gcc/Optimize-Options.html#index-fsplit-paths)
fsplit-stackCommon Var(flag_split_stack) Init(-1)Generate discontiguous stack frames.
fsplit-stackUrlSuffix(gcc/Instrumentation-Options.html#index-fsplit-stack)
fsplit-wide-typesCommon Var(flag_split_wide_types) OptimizationSplit wide types into independent registers.
fsplit-wide-typesUrlSuffix(gcc/Optimize-Options.html#index-fsplit-wide-types)
fsplit-wide-types-earlyCommon Var(flag_split_wide_types_early) OptimizationSplit wide types into independent registers earlier.
fsplit-wide-types-earlyUrlSuffix(gcc/Optimize-Options.html#index-fsplit-wide-types-early)
fsquangleC++ ObjC++ WarnRemoved
fssa-backpropCommon Var(flag_ssa_backprop) Init(1) OptimizationEnable backward propagation of use properties at the SSA level.
fssa-backpropUrlSuffix(gcc/Optimize-Options.html#index-fssa-backprop)
fssa-phioptCommon Var(flag_ssa_phiopt) OptimizationOptimize conditional patterns using SSA PHI nodes.
fssa-phioptUrlSuffix(gcc/Optimize-Options.html#index-fssa-phiopt)
fsso-struct=C ObjC Joined RejectNegative Enum(sso_struct) Var(default_sso) Init(SSO_NATIVE)-fsso-struct=[big-endian|little-endian|native]	Set the default scalar storage order.
fsso-struct=UrlSuffix(gcc/C-Dialect-Options.html#index-fsso-struct)
fstack-arraysFortran Var(flag_stack_arrays) Init(-1)Put all local arrays on stack.
fstack-arraysLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fstack-arrays)
fstack-checkCommon Alias(fstack-check=, specific, no)Insert stack checking code into the program.  Same as -fstack-check=specific.
fstack-checkUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-check)
fstack-check=Common RejectNegative Joined Optimization-fstack-check=[no|generic|specific]	Insert stack checking code into the program.
fstack-check=UrlSuffix(gcc/Instrumentation-Options.html#index-fstack-check)
fstack-clash-protectionCommon Var(flag_stack_clash_protection) OptimizationInsert code to probe each page of stack space as it is allocated to protectfrom stack-clash style attacks.
fstack-clash-protectionUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-clash-protection)
fstack-limitCommon Var(common_deferred_options) Defer
fstack-limitUrlSuffix(gcc/Instrumentation-Options.html#index-fno-stack-limit)
fstack-limit-register=Common RejectNegative Joined Var(common_deferred_options) Defer-fstack-limit-register=<register>	Trap if the stack goes past <register>.
fstack-limit-register=UrlSuffix(gcc/Instrumentation-Options.html#index-fstack-limit-register)
fstack-limit-symbol=Common RejectNegative Joined Var(common_deferred_options) Defer-fstack-limit-symbol=<name>	Trap if the stack goes past symbol <name>.
fstack-limit-symbol=UrlSuffix(gcc/Instrumentation-Options.html#index-fstack-limit-symbol)
fstack-protectorCommon Var(flag_stack_protect, 1) Init(-1) OptimizationUse propolice as a stack protection method.
fstack-protectorUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-protector)
fstack-protector-allCommon RejectNegative Var(flag_stack_protect, 2) Init(-1) OptimizationUse a stack protection method for every function.
fstack-protector-allUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-protector-all)
fstack-protector-explicitCommon RejectNegative Var(flag_stack_protect, 4) OptimizationUse stack protection method only for functions with the stack_protect attribute.
fstack-protector-explicitUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-protector-explicit)
fstack-protector-strongCommon RejectNegative Var(flag_stack_protect, 3) Init(-1) OptimizationUse a smart stack protection method for certain functions.
fstack-protector-strongUrlSuffix(gcc/Instrumentation-Options.html#index-fstack-protector-strong)
fstack-reuse=Common Joined RejectNegative Enum(stack_reuse_level) Var(flag_stack_reuse) Init(SR_ALL) Optimization-fstack-reuse=[all|named_vars|none]	Set stack reuse level for local variables.
fstack-usageCommon RejectNegative Var(flag_stack_usage)Output stack usage information on a per-function basis.
fstack-usageUrlSuffix(gcc/Developer-Options.html#index-fstack-usage)
fstatsC++ ObjC++ Var(flag_detailed_statistics)Display statistics accumulated during compilation.
fstatsUrlSuffix(gcc/Developer-Options.html#index-fstats)
fstdarg-optCommon Var(flag_stdarg_opt) Init(1) OptimizationOptimize amount of stdarg registers saved to stack at start of function.
fstdarg-optUrlSuffix(gcc/Optimize-Options.html#index-fstdarg-opt)
fstore-mergingCommon Var(flag_store_merging) OptimizationMerge adjacent stores.
fstore-mergingUrlSuffix(gcc/Optimize-Options.html#index-fstore-merging)
fstrength-reduceCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fstrict-aliasingCommon Var(flag_strict_aliasing) OptimizationAssume strict aliasing rules apply.
fstrict-aliasingUrlSuffix(gcc/Optimize-Options.html#index-fstrict-aliasing)
fstrict-enumsC++ ObjC++ Optimization Var(flag_strict_enums)Assume that values of enumeration type are always within the minimum range of that type.
fstrict-enumsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fstrict-enums)
fstrict-flex-arraysC C++ Common Alias(fstrict-flex-arrays=,3,0)
fstrict-flex-arraysUrlSuffix(gcc/C-Dialect-Options.html#index-fno-strict-flex-arrays)
fstrict-flex-arrays=C C++ Common Joined RejectNegative UInteger Var(flag_strict_flex_arrays) Init(0) IntegerRange(0,3)-fstrict-flex-arrays=<level>    Control when to treat the trailing array of a structure as a flexible array member for the purposes of accessing the elements of such an array. The default is treating all trailing arrays of structures as flexible array members.
fstrict-flex-arrays=UrlSuffix(gcc/C-Dialect-Options.html#index-fno-strict-flex-arrays)
fstrict-overflowCommonTreat signed overflow as undefined.  Negated as -fwrapv -fwrapv-pointer.
fstrict-overflowUrlSuffix(gcc/Code-Gen-Options.html#index-fstrict-overflow)
fstrict-prototypeC++ ObjC++ WarnRemoved
fstrict-volatile-bitfieldsCommon Var(flag_strict_volatile_bitfields) Init(-1) OptimizationForce bitfield accesses to match their type width.
fstrict-volatile-bitfieldsUrlSuffix(gcc/Code-Gen-Options.html#index-fstrict-volatile-bitfields)
fstrong-eval-orderC++ ObjC++ Common Alias(fstrong-eval-order=, all, none)Follow the C++17 evaluation order requirements for assignment expressions,shift, member function calls, etc.
fstrong-eval-orderUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fstrong-eval-order)
fstrong-eval-order=C++ ObjC++ Common Var(flag_strong_eval_order) Joined Enum(strong_eval_order) RejectNegative Init(-1)Follow the C++17 evaluation order requirements for assignment expressions,shift, member function calls, etc.
fstrong-eval-order=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fstrong-eval-order)
fstrub=allCommon RejectNegative Var(flag_strub, 3)Enable stack scrubbing for all viable functions.
fstrub=allUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003dall)
fstrub=at-callsCommon RejectNegative Var(flag_strub, 1)Enable at-calls stack scrubbing for all viable functions.
fstrub=at-callsUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003dat-calls)
fstrub=disableCommon RejectNegative Var(flag_strub, 0)Disable stack scrub entirely, disregarding strub attributes.
fstrub=disableUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003ddisable)
fstrub=internalCommon RejectNegative Var(flag_strub, 2)Enable internal stack scrubbing for all viable functions.
fstrub=internalUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003dinternal)
fstrub=relaxedCommon RejectNegative Var(flag_strub, -3) Init(-3)Restore default strub mode: as per attributes, with relaxed checking.
fstrub=relaxedUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003drelaxed)
fstrub=strictCommon RejectNegative Var(flag_strub, -4)Enable stack scrub as per attributes, with strict call checking.
fstrub=strictUrlSuffix(gcc/Instrumentation-Options.html#index-fstrub_003dstrict)
fswigModula-2create a swig interface file for the module
fswitch-errorsD Var(flag_switch_errors)Generate code for switches without a default case.
fswitch-errorsLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-switch-errors)
fsync-libcallsCommon Var(flag_sync_libcalls) Init(1)Implement __atomic operations via libcalls to legacy __sync functions.
fsync-libcallsUrlSuffix(gcc/Code-Gen-Options.html#index-fsync-libcalls)
fsyntax-onlyCommon Var(flag_syntax_only)Check for syntax errors, then stop.
fsyntax-onlyUrlSuffix(gcc/Warning-Options.html#index-fsyntax-only) LangUrlSuffix_D(gdc/Warnings.html#index-fno-syntax-only) LangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-fsyntax-only)
ftabstop=Common Joined RejectNegative UInteger-ftabstop=<number>      Distance between tab stops for column reporting.
ftabstop=UrlSuffix(gcc/Preprocessor-Options.html#index-ftabstop)
ftail-call-workaroundFortran Alias(ftail-call-workaround=,1,0)
ftail-call-workaround=Fortran RejectNegative Joined UInteger IntegerRange(0, 2) Var(flag_tail_call_workaround) Init(1)Disallow tail call optimization when a calling routine may have omitted character lengths.
ftarget-helpCommon Driver Alias(-target-help)
ftemplate-backtrace-limit=C++ ObjC++ Joined RejectNegative UInteger Var(template_backtrace_limit) Init(10)Set the maximum number of template instantiation notes for a single warning or error.
ftemplate-backtrace-limit=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-ftemplate-backtrace-limit)
ftemplate-depth-C++ ObjC++ Joined RejectNegative Undocumented Alias(ftemplate-depth=)
ftemplate-depth=C++ ObjC++ Joined RejectNegative UInteger-ftemplate-depth=<number>	Specify maximum template instantiation depth.
ftemplate-depth=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-ftemplate-depth)
ftest-coverageCommon Var(flag_test_coverage)Create data files needed by \"gcov\".
ftest-coverageUrlSuffix(gcc/Instrumentation-Options.html#index-ftest-coverage)
ftest-forall-tempFortran Var(flag_test_forall_temp) Init(0)Force creation of temporary to test infrequently-executed forall code.
ftest-forall-tempLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-ftest-forall-temp)
fthis-is-variableC++ ObjC++ WarnRemoved
fthread-jumpsCommon Var(flag_thread_jumps) OptimizationPerform jump threading optimizations.
fthread-jumpsUrlSuffix(gcc/Optimize-Options.html#index-fthread-jumps)
fthreadsafe-staticsC++ ObjC++ Optimization Var(flag_threadsafe_statics) Init(1)-fno-threadsafe-statics	Do not generate thread-safe code for initializing local statics.
fthreadsafe-staticsUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-threadsafe-statics)
ftime-reportCommon Var(time_report)Report the time taken by each compiler pass.
ftime-reportUrlSuffix(gcc/Developer-Options.html#index-ftime-report)
ftime-report-detailsCommon Var(time_report_details)Record times taken by sub-phases separately.
ftime-report-detailsUrlSuffix(gcc/Developer-Options.html#index-ftime-report-details)
ftls-model=Common Joined RejectNegative Enum(tls_model) Var(flag_tls_default) Init(TLS_MODEL_GLOBAL_DYNAMIC)-ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec]	Set the default thread-local storage code generation model.
ftls-model=UrlSuffix(gcc/Code-Gen-Options.html#index-ftls-model)
ftoplevel-reorderCommon Var(flag_toplevel_reorder) Init(2) OptimizationReorder top level functions, variables, and asms.
ftoplevel-reorderUrlSuffix(gcc/Optimize-Options.html#index-fno-toplevel-reorder)
ftracerCommon Var(flag_tracer) OptimizationPerform superblock formation via tail duplication.
ftracerUrlSuffix(gcc/Optimize-Options.html#index-ftracer)
ftrack-macro-expansionC ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger
ftrack-macro-expansionUrlSuffix(gcc/Preprocessor-Options.html#index-ftrack-macro-expansion)
ftrack-macro-expansion=C ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger-ftrack-macro-expansion=<0|1|2>	Track locations of tokens coming from macro expansion and display them in error messages.
ftrack-macro-expansion=UrlSuffix(gcc/Preprocessor-Options.html#index-ftrack-macro-expansion)
ftrampoline-impl=Common Joined RejectNegative Enum(trampoline_impl) Var(flag_trampoline_impl) Init(HEAP_TRAMPOLINES_INIT ? TRAMPOLINE_IMPL_HEAP : TRAMPOLINE_IMPL_STACK)Whether trampolines are generated in executable memory rather thanexecutable stack.
ftrampoline-impl=UrlSuffix(gcc/Code-Gen-Options.html#index-ftrampoline-impl)
ftrampolinesCommon Var(flag_trampolines) Init(HEAP_TRAMPOLINES_INIT)For targets that normally need trampolines for nested functions, alwaysgenerate them instead of using descriptors.
ftrampolinesUrlSuffix(gcc/Code-Gen-Options.html#index-ftrampolines)
ftransition=allD RejectNegativeList information on all D language transitions.
ftransition=fieldD RejectNegativeList all non-mutable fields which occupy an object instance.
ftransition=inD RejectNegativeList all usages of 'in' on parameter.
ftransition=nogcD RejectNegativeList all hidden GC allocations.
ftransition=templatesD RejectNegativeList statistics on template instantiations.
ftransition=tlsD RejectNegativeList all variables going into thread local storage.
ftrapping-mathCommon Var(flag_trapping_math) Init(1) Optimization SetByCombinedAssume floating-point operations can trap.
ftrapping-mathUrlSuffix(gcc/Optimize-Options.html#index-fno-trapping-math)
ftrapvCommon Var(flag_trapv) OptimizationTrap for signed overflow in addition, subtraction and multiplication.
ftrapvUrlSuffix(gcc/Code-Gen-Options.html#index-ftrapv)
ftree-bit-ccpCommon Var(flag_tree_bit_ccp) OptimizationEnable SSA-BIT-CCP optimization on trees.
ftree-bit-ccpUrlSuffix(gcc/Optimize-Options.html#index-ftree-bit-ccp)
ftree-builtin-call-dceCommon Var(flag_tree_builtin_call_dce) Init(0) OptimizationEnable conditional dead code elimination for builtin calls.
ftree-builtin-call-dceUrlSuffix(gcc/Optimize-Options.html#index-ftree-builtin-call-dce)
ftree-ccpCommon Var(flag_tree_ccp) OptimizationEnable SSA-CCP optimization on trees.
ftree-ccpUrlSuffix(gcc/Optimize-Options.html#index-ftree-ccp)
ftree-chCommon Var(flag_tree_ch) OptimizationEnable loop header copying on trees.
ftree-chUrlSuffix(gcc/Optimize-Options.html#index-ftree-ch)
ftree-coalesce-inlined-varsCommon Ignore RejectNegativeDoes nothing.  Preserved for backward compatibility.
ftree-coalesce-varsCommon Var(flag_tree_coalesce_vars) OptimizationEnable SSA coalescing of user variables.
ftree-coalesce-varsUrlSuffix(gcc/Optimize-Options.html#index-ftree-coalesce-vars)
ftree-copy-propCommon Var(flag_tree_copy_prop) OptimizationEnable copy propagation on trees.
ftree-copy-propUrlSuffix(gcc/Optimize-Options.html#index-ftree-copy-prop)
ftree-copyrenameCommon IgnoreDoes nothing.  Preserved for backward compatibility.
ftree-cselimCommon Var(flag_tree_cselim) OptimizationTransform condition stores into unconditional ones.
ftree-dceCommon Var(flag_tree_dce) OptimizationEnable SSA dead code elimination optimization on trees.
ftree-dceUrlSuffix(gcc/Optimize-Options.html#index-ftree-dce)
ftree-dominator-optsCommon Var(flag_tree_dom) OptimizationEnable dominator optimizations.
ftree-dominator-optsUrlSuffix(gcc/Optimize-Options.html#index-ftree-dominator-opts)
ftree-dseCommon Var(flag_tree_dse) OptimizationEnable dead store elimination.
ftree-dseUrlSuffix(gcc/Optimize-Options.html#index-ftree-dse)
ftree-forwpropCommon Var(flag_tree_forwprop) Init(1) OptimizationEnable forward propagation on trees.
ftree-forwpropUrlSuffix(gcc/Optimize-Options.html#index-ftree-forwprop)
ftree-freCommon Var(flag_tree_fre) OptimizationEnable Full Redundancy Elimination (FRE) on trees.
ftree-freUrlSuffix(gcc/Optimize-Options.html#index-ftree-fre)
ftree-loop-distribute-patternsCommon Var(flag_tree_loop_distribute_patterns) OptimizationEnable loop distribution for patterns transformed into a library call.
ftree-loop-distribute-patternsUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-distribute-patterns)
ftree-loop-distributionCommon Var(flag_tree_loop_distribution) OptimizationEnable loop distribution on trees.
ftree-loop-distributionUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-distribution)
ftree-loop-if-convertCommon Var(flag_tree_loop_if_convert) Init(-1) OptimizationConvert conditional jumps in innermost loops to branchless equivalents.
ftree-loop-if-convertUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-if-convert)
ftree-loop-if-convert-storesCommon IgnoreDoes nothing. Preserved for backward compatibility.
ftree-loop-imCommon Var(flag_tree_loop_im) Init(1) OptimizationEnable loop invariant motion on trees.
ftree-loop-imUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-im)
ftree-loop-ivcanonCommon Var(flag_tree_loop_ivcanon) Init(1) OptimizationCreate canonical induction variables in loops.
ftree-loop-ivcanonUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-ivcanon)
ftree-loop-linearCommon Alias(floop-nest-optimize)Enable loop nest transforms.  Same as -floop-nest-optimize.
ftree-loop-linearUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-linear)
ftree-loop-optimizeCommon Var(flag_tree_loop_optimize) Init(1) OptimizationEnable loop optimizations on tree level.
ftree-loop-optimizeUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-optimize)
ftree-loop-vectorizeCommon Var(flag_tree_loop_vectorize) Optimization EnabledBy(ftree-vectorize)Enable loop vectorization on trees.
ftree-loop-vectorizeUrlSuffix(gcc/Optimize-Options.html#index-ftree-loop-vectorize)
ftree-lrsCommon Var(flag_tree_live_range_split) OptimizationPerform live range splitting during the SSA->normal pass.
ftree-parallelize-loops=Common Joined RejectNegative UInteger Var(flag_tree_parallelize_loops) Init(1) Optimization-ftree-parallelize-loops=<number>	Enable automatic parallelization of loops.
ftree-parallelize-loops=UrlSuffix(gcc/Optimize-Options.html#index-ftree-parallelize-loops)
ftree-partial-preCommon Var(flag_tree_partial_pre) OptimizationIn SSA-PRE optimization on trees, enable partial-partial redundancy elimination.
ftree-partial-preUrlSuffix(gcc/Optimize-Options.html#index-ftree-partial-pre)
ftree-phipropCommon Var(flag_tree_phiprop) Init(1) OptimizationEnable hoisting loads from conditional pointers.
ftree-phipropUrlSuffix(gcc/Optimize-Options.html#index-ftree-phiprop)
ftree-preCommon Var(flag_tree_pre) OptimizationEnable SSA-PRE optimization on trees.
ftree-preUrlSuffix(gcc/Optimize-Options.html#index-ftree-pre)
ftree-ptaCommon Var(flag_tree_pta) OptimizationPerform function-local points-to analysis on trees.
ftree-ptaUrlSuffix(gcc/Optimize-Options.html#index-ftree-pta)
ftree-reassocCommon Var(flag_tree_reassoc) Init(1) OptimizationEnable reassociation on tree level.
ftree-reassocUrlSuffix(gcc/Optimize-Options.html#index-ftree-reassoc)
ftree-saliasCommon IgnoreDoes nothing.  Preserved for backward compatibility.
ftree-scev-cpropCommon Var(flag_tree_scev_cprop) Init(1) OptimizationEnable copy propagation of scalar-evolution information.
ftree-scev-cpropUrlSuffix(gcc/Optimize-Options.html#index-ftree-scev-cprop)
ftree-sinkCommon Var(flag_tree_sink) OptimizationEnable SSA code sinking on trees.
ftree-sinkUrlSuffix(gcc/Optimize-Options.html#index-ftree-sink)
ftree-slp-vectorizeCommon Var(flag_tree_slp_vectorize) Optimization EnabledBy(ftree-vectorize)Enable basic block vectorization (SLP) on trees.
ftree-slp-vectorizeUrlSuffix(gcc/Optimize-Options.html#index-ftree-slp-vectorize)
ftree-slsrCommon Var(flag_tree_slsr) OptimizationPerform straight-line strength reduction.
ftree-slsrUrlSuffix(gcc/Optimize-Options.html#index-ftree-slsr)
ftree-sraCommon Var(flag_tree_sra) OptimizationPerform scalar replacement of aggregates.
ftree-sraUrlSuffix(gcc/Optimize-Options.html#index-ftree-sra)
ftree-store-ccpCommon IgnoreDoes nothing.  Preserved for backward compatibility.
ftree-store-copy-propCommon IgnoreDoes nothing.  Preserved for backward compatibility.
ftree-switch-conversionCommon Var(flag_tree_switch_conversion) OptimizationPerform conversions of switch initializations.
ftree-switch-conversionUrlSuffix(gcc/Optimize-Options.html#index-ftree-switch-conversion)
ftree-tail-mergeCommon Var(flag_tree_tail_merge) OptimizationEnable tail merging on trees.
ftree-tail-mergeUrlSuffix(gcc/Optimize-Options.html#index-ftree-tail-merge)
ftree-terCommon Var(flag_tree_ter) OptimizationReplace temporary expressions in the SSA->normal pass.
ftree-terUrlSuffix(gcc/Optimize-Options.html#index-ftree-ter)
ftree-vect-loop-versionCommon IgnoreDoes nothing. Preserved for backward compatibility.
ftree-vectorizeCommon Var(flag_tree_vectorize) OptimizationEnable vectorization on trees.
ftree-vectorizeUrlSuffix(gcc/Optimize-Options.html#index-ftree-vectorize)
ftree-vectorizer-verbose=Common Joined RejectNegative IgnoreDoes nothing.  Preserved for backward compatibility.
ftree-vrpCommon Var(flag_tree_vrp) Init(0) OptimizationPerform Value Range Propagation on trees.
ftree-vrpUrlSuffix(gcc/Optimize-Options.html#index-ftree-vrp)
ftrivial-auto-var-init=Common Joined RejectNegative Enum(auto_init_type) Var(flag_auto_var_init) Init(AUTO_INIT_UNINITIALIZED) Optimization-ftrivial-auto-var-init=[uninitialized|pattern|zero]	Add initializations to automatic variables.
ftrivial-auto-var-init=UrlSuffix(gcc/Optimize-Options.html#index-ftrivial-auto-var-init)
funbounded-by-referenceModula-2optimize non var unbounded parameters by passing it by reference, providing it is not written to within the callee procedure.
funconstrained-commonsCommon Var(flag_unconstrained_commons) OptimizationAssume common declarations may be overridden with ones with a largertrailing array.
funconstrained-commonsUrlSuffix(gcc/Optimize-Options.html#index-funconstrained-commons)
funderscoringFortran Var(flag_underscoring) Init(1)Append underscores to externally visible names.
funderscoringLangUrlSuffix_Fortran(gfortran/Code-Gen-Options.html#index-fno-underscoring)
funit-at-a-timeCommon Var(flag_unit_at_a_time) Init(1)Compile whole compilation unit at a time.
funit-at-a-timeUrlSuffix(gcc/Optimize-Options.html#index-funit-at-a-time)
funittestDCompile in unittest code.
funittestLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-unittest)
funreachable-trapsCommon Var(flag_unreachable_traps) OptimizationTrap on __builtin_unreachable instead of using it for optimization.
funreachable-trapsUrlSuffix(gcc/Optimize-Options.html#index-funreachable-traps)
funroll-all-loopsCommon Var(flag_unroll_all_loops) OptimizationPerform loop unrolling for all loops.
funroll-all-loopsUrlSuffix(gcc/Optimize-Options.html#index-funroll-all-loops)
funroll-completely-grow-sizeUndocumented Var(flag_cunroll_grow_size) Optimization
funroll-loopsCommon Var(flag_unroll_loops) Optimization EnabledBy(funroll-all-loops)Perform loop unrolling when iteration count is known.
funroll-loopsUrlSuffix(gcc/Optimize-Options.html#index-funroll-loops)
funsafe-loop-optimizationsCommon IgnoreDoes nothing.  Preserved for backward compatibility.
funsafe-math-optimizationsCommon Var(flag_unsafe_math_optimizations) Optimization SetByCombinedAllow math optimizations that may violate IEEE or ISO standards.
funsafe-math-optimizationsUrlSuffix(gcc/Optimize-Options.html#index-funsafe-math-optimizations)
funsignedFortran Var(flag_unsigned)Experimental unsigned numbers.
funsignedLangUrlSuffix_Fortran(gfortran/Fortran-Dialect-Options.html#index-funsigned)
funsigned-bitfieldsC ObjC C++ ObjC++ Var(flag_signed_bitfields, 0)When \"signed\" or \"unsigned\" is not given make the bitfield unsigned.
funsigned-charAda AdaWhy AdaSCILMake \"char\" unsigned by default.
funsigned-charC ObjC C++ ObjC++ LTO Var(flag_signed_char, 0)Make \"char\" unsigned by default.
funswitch-loopsCommon Var(flag_unswitch_loops) OptimizationPerform loop unswitching.
funswitch-loopsUrlSuffix(gcc/Optimize-Options.html#index-funswitch-loops)
funwind-tablesCommon Var(flag_unwind_tables) OptimizationJust generate unwind tables for exception handling.
funwind-tablesUrlSuffix(gcc/Code-Gen-Options.html#index-funwind-tables)
fuse-cxa-atexitC++ ObjC++ Var(flag_use_cxa_atexit) Init(DEFAULT_USE_CXA_ATEXIT)Use __cxa_atexit to register destructors.
fuse-cxa-atexitUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fuse-cxa-atexit)
fuse-cxa-get-exception-ptrC++ ObjC++ Var(flag_use_cxa_get_exception_ptr) Init(2)Use __cxa_get_exception_ptr in exception handling.
fuse-cxa-get-exception-ptrUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-use-cxa-get-exception-ptr)
fuse-ld=bfdCommon Driver Negative(fuse-ld=gold)Use the bfd linker instead of the default linker.
fuse-ld=bfdUrlSuffix(gcc/Link-Options.html#index-fuse-ld_003dbfd)
fuse-ld=goldCommon Driver Negative(fuse-ld=bfd)Use the gold linker instead of the default linker.
fuse-ld=goldUrlSuffix(gcc/Link-Options.html#index-fuse-ld_003dgold)
fuse-ld=lldCommon Driver Negative(fuse-ld=lld)Use the lld LLVM linker instead of the default linker.
fuse-ld=lldUrlSuffix(gcc/Link-Options.html#index-fuse-ld_003dlld)
fuse-ld=moldCommon Driver Negative(fuse-ld=mold)Use the Modern linker (MOLD) linker instead of the default linker.
fuse-ld=moldUrlSuffix(gcc/Link-Options.html#index-fuse-ld_003dmold)
fuse-linker-pluginCommon Undocumented Var(flag_use_linker_plugin)
fuse-linker-pluginUrlSuffix(gcc/Optimize-Options.html#index-fuse-linker-plugin)
fuse-list=Modula-2 Joinedorders the initialization/finalizations for scaffold-static or force linking of modules if scaffold-dynamic
fvar-trackingCommon Var(flag_var_tracking) PerFunction EnabledBy(fvar-tracking-uninit)Perform variable tracking.
fvar-trackingUrlSuffix(gcc/Debugging-Options.html#index-fvar-tracking)
fvar-tracking-assignmentsCommon Var(flag_var_tracking_assignments) PerFunctionPerform variable tracking by annotating assignments.
fvar-tracking-assignmentsUrlSuffix(gcc/Debugging-Options.html#index-fno-var-tracking-assignments)
fvar-tracking-assignments-toggleCommon Var(flag_var_tracking_assignments_toggle) PerFunctionToggle -fvar-tracking-assignments.
fvar-tracking-assignments-toggleUrlSuffix(gcc/Developer-Options.html#index-fno-var-tracking-assignments-toggle)
fvar-tracking-uninitCommon Var(flag_var_tracking_uninit) PerFunctionPerform variable tracking and also tag variables that are uninitialized.
fvariable-expansion-in-unrollerCommon Var(flag_variable_expansion_in_unroller) OptimizationApply variable expansion when loops are unrolled.
fvariable-expansion-in-unrollerUrlSuffix(gcc/Optimize-Options.html#index-fvariable-expansion-in-unroller)
fvect-cost-modelCommon Alias(fvect-cost-model=,dynamic,unlimited)Enables the dynamic vectorizer cost model.  Preserved for backward compatibility.
fvect-cost-modelUrlSuffix(gcc/Optimize-Options.html#index-fvect-cost-model)
fvect-cost-model=Common Joined RejectNegative Enum(vect_cost_model) Var(flag_vect_cost_model) Init(VECT_COST_MODEL_DEFAULT) Optimization-fvect-cost-model=[unlimited|dynamic|cheap|very-cheap]	Specifies the cost model for vectorization.
fvect-cost-model=UrlSuffix(gcc/Optimize-Options.html#index-fvect-cost-model)
fverbose-asmCommon Var(flag_verbose_asm)Add extra commentary to assembler output.
fverbose-asmUrlSuffix(gcc/Code-Gen-Options.html#index-fverbose-asm)
fversionCommon Driver Alias(-version)
fversionLangUrlSuffix_D(gdc/Runtime-Options.html#index-fversion)
fversionLangUrlSuffix_D(gdc/Runtime-Options.html#index-fversion)
fversionModula-2
fversion-loops-for-stridesCommon Var(flag_version_loops_for_strides) OptimizationVersion loops based on whether indices have a stride of one.
fversion-loops-for-stridesUrlSuffix(gcc/Optimize-Options.html#index-fversion-loops-for-strides)
fversion=D Joined RejectNegative-fversion=<ident>	Compile in version code identified by <ident>.
fversion=LangUrlSuffix_D(gdc/Runtime-Options.html#index-fversion)
fvisibility-inlines-hiddenC++ ObjC++Marks all inlined functions and methods as having hidden visibility.
fvisibility-inlines-hiddenUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fvisibility-inlines-hidden)
fvisibility-ms-compatC++ ObjC++ Var(flag_visibility_ms_compat)Changes visibility to match Microsoft Visual Studio by default.
fvisibility-ms-compatUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fvisibility-ms-compat)
fvisibility=Common Joined RejectNegative Enum(symbol_visibility) Var(default_visibility) Init(VISIBILITY_DEFAULT)-fvisibility=[default|internal|hidden|protected]	Set the default symbol visibility.
fvisibility=UrlSuffix(gcc/Code-Gen-Options.html#index-fvisibility)
fvptCommon Var(flag_value_profile_transformations) OptimizationUse expression value profiles in optimizations.
fvptUrlSuffix(gcc/Optimize-Options.html#index-fvpt)
fvtable-gcC++ ObjC++ WarnRemovedNo longer supported.
fvtable-thunksC++ ObjC++ WarnRemoved No longer supported.
fvtable-verify=Common Joined RejectNegative Enum(vtv_priority) Var(flag_vtable_verify) Init(VTV_NO_PRIORITY)Validate vtable pointers before using them.
fvtable-verify=UrlSuffix(gcc/Instrumentation-Options.html#index-fvtable-verify)
fvtv-countsCommon Var(flag_vtv_counts)Output vtable verification counters.
fvtv-countsUrlSuffix(gcc/Instrumentation-Options.html#index-fvtv-counts)
fvtv-debugCommon Var(flag_vtv_debug)Output vtable verification pointer sets information.
fvtv-debugUrlSuffix(gcc/Instrumentation-Options.html#index-fvtv-debug)
fweakC++ ObjC++ Var(flag_weak) Init(1)Emit common-like symbols as weak symbols.
fweakUrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-fno-weak)
fweak-templatesD Var(flag_weak_templates) Init(1)Emit template instantiations as weak symbols.
fweak-templatesLangUrlSuffix_D(gdc/Runtime-Options.html#index-fno-weak-templates)
fwebCommon Var(flag_web) Optimization EnabledBy(funroll-loops)Construct webs and split unrelated uses of single variable.
fwebUrlSuffix(gcc/Optimize-Options.html#index-fweb)
fwhole-fileFortran IgnoreDoes nothing.  Preserved for backward compatibility.
fwhole-programCommon Var(flag_whole_program) Init(0)Perform whole program optimizations.
fwhole-programUrlSuffix(gcc/Optimize-Options.html#index-fwhole-program)
fwholedivModula-2turns on all division and modulus by zero checking for ordinal values
fwholevalueModula-2turns on runtime checking to check whether a whole number will exceed range
fwide-exec-charset=C ObjC C++ ObjC++ Joined RejectNegative-fwide-exec-charset=<cset>	Convert all wide strings and character constants to character set <cset>.
fwide-exec-charset=UrlSuffix(gcc/Preprocessor-Options.html#index-fwide-exec-charset)
fworking-directoryC ObjC C++ ObjC++ Var(flag_working_directory) Init(-1)Generate a #line directive pointing at the current working directory.
fworking-directoryFortran
fworking-directoryModula-2
fworking-directoryUrlSuffix(gcc/Preprocessor-Options.html#index-fno-working-directory) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-fworking-directory)
fworking-directoryUrlSuffix(gcc/Preprocessor-Options.html#index-fno-working-directory) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-fworking-directory)
fworking-directoryUrlSuffix(gcc/Preprocessor-Options.html#index-fno-working-directory) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-fworking-directory)
fwpaLTO DriverRun the link-time optimizer in whole program analysis (WPA) mode.
fwpa=LTO Driver RejectNegative Joined Var(flag_wpa)Whole program analysis (WPA) mode with number of parallel jobs specified.
fwrapvCommon Var(flag_wrapv) OptimizationAssume signed arithmetic overflow wraps around.
fwrapvUrlSuffix(gcc/Code-Gen-Options.html#index-fwrapv)
fwrapv-pointerCommon Var(flag_wrapv_pointer) OptimizationAssume pointer overflow wraps around.
fwrapv-pointerUrlSuffix(gcc/Code-Gen-Options.html#index-fwrapv-pointer)
fxrefC++ ObjC++ WarnRemovedNo longer supported.
fzeeCommon IgnoreDoes nothing.  Preserved for backward compatibility.
fzero-call-used-regs=Common RejectNegative JoinedClear call-used registers upon function return.
fzero-call-used-regs=UrlSuffix(gcc/Optimize-Options.html#index-fzero-call-used-regs)
fzero-init-padding-bits=Common Joined RejectNegative Enum(zero_init_padding_bits_kind) Var(flag_zero_init_padding_bits) Init(ZERO_INIT_PADDING_BITS_STANDARD)-fzero-init-padding-bits=[standard|unions|all]	Zero padding bits in initializers.
fzero-initialized-in-bssCommon Var(flag_zero_initialized_in_bss) Init(1)Put zero initialized data in the bss section.
fzero-initialized-in-bssUrlSuffix(gcc/Optimize-Options.html#index-fno-zero-initialized-in-bss)
fzero-linkObjC ObjC++ Var(flag_zero_link)Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode.
fzero-linkUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-fzero-link)
gCommon Driver RejectNegative JoinedOrMissingGenerate debug information in default format.
gUrlSuffix(gcc/Debugging-Options.html#index-g)
gantAda AdaWhy AdaSCIL Driver Joined Undocumented RejectNegativeCatch typos.
gas-loc-supportCommon Driver Var(dwarf2out_as_loc_support)Assume assembler support for (DWARF2+) .loc directives.
gas-loc-supportUrlSuffix(gcc/Debugging-Options.html#index-gas-loc-support)
gas-locview-supportCommon Driver Var(dwarf2out_as_locview_support)Assume assembler support for view in (DWARF2+) .loc directives.
gas-locview-supportUrlSuffix(gcc/Debugging-Options.html#index-gas-locview-support)
gbtfCommon Driver RejectNegative JoinedOrMissingGenerate BTF debug information at default level.
gbtfUrlSuffix(gcc/Debugging-Options.html#index-gbtf)
gcodeviewCommon Driver JoinedOrMissingGenerate debug information in CodeView format.
gcodeviewUrlSuffix(gcc/Debugging-Options.html#index-gcodeview)
gcoffCommon Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gcoff1Common Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gcoff2Common Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gcoff3Common Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gcolumn-infoCommon Driver Var(debug_column_info,1) Init(1)Record DW_AT_decl_column and DW_AT_call_column in DWARF.
gcolumn-infoUrlSuffix(gcc/Debugging-Options.html#index-gcolumn-info)
gctfCommon Driver RejectNegative JoinedOrMissingGenerate CTF debug information at default level.
gctfUrlSuffix(gcc/Debugging-Options.html#index-gctf)
gdescribe-diesCommon Driver Var(flag_describe_dies) Init(0)Add description attributes to some DWARF DIEs that have no name attribute.
gdescribe-diesUrlSuffix(gcc/Debugging-Options.html#index-gdescribe-dies)
gdwarfCommon Driver JoinedOrMissing RejectNegativeGenerate debug information in default version of DWARF format.
gdwarfUrlSuffix(gcc/Debugging-Options.html#index-gdwarf)
gdwarf-Common Driver Joined UInteger Var(dwarf_version) Init(DWARF_VERSION_DEFAULT) RejectNegativeGenerate debug information in DWARF v2 (or later) format.
gdwarf32Common Driver Var(dwarf_offset_size,4) Init(4) RejectNegativeUse 32-bit DWARF format when emitting DWARF debug information.
gdwarf32UrlSuffix(gcc/Debugging-Options.html#index-gdwarf32)
gdwarf64Common Driver Var(dwarf_offset_size,8) RejectNegativeUse 64-bit DWARF format when emitting DWARF debug information.
gdwarf64UrlSuffix(gcc/Debugging-Options.html#index-gdwarf64)
gen-declsObjC ObjC++ Driver Var(flag_gen_declaration) RejectNegativeDump declarations to a .decl file.
gen-declsUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-gen-decls)
ggdbCommon Driver JoinedOrMissing RejectNegativeGenerate debug information in default extended format.
ggdbUrlSuffix(gcc/Debugging-Options.html#index-ggdb)
ggnu-pubnamesCommon Driver Negative(gno-pubnames) Var(debug_generate_pub_sections, 2)Generate DWARF pubnames and pubtypes sections with GNU extensions.
ggnu-pubnamesUrlSuffix(gcc/Debugging-Options.html#index-ggnu-pubnames)
gimple-statsLTODump Var(flag_lto_gimple_stats)Dump the statistics of gimple statements.
ginline-pointsCommon Driver Var(debug_inline_points)Generate extended entry point information for inlined functions.
ginline-pointsUrlSuffix(gcc/Debugging-Options.html#index-ginline-points)
ginternal-reset-location-viewsCommon Driver Var(debug_internal_reset_location_views) Init(2)Compute locview reset points based on insn length estimates.
ginternal-reset-location-viewsUrlSuffix(gcc/Debugging-Options.html#index-ginternal-reset-location-views)
gnatAda AdaWhy AdaSCIL Driver Joined RejectNegative-gnat<options>	Specify options to GNAT.
gnatOAda AdaWhy AdaSCIL Driver Separate RejectNegativeSet name of output ALI file (internal switch).
gno-RejectNegative Joined Undocumented
gno-pubnamesCommon Driver Negative(gpubnames) Var(debug_generate_pub_sections, 0) Init(-1)Don't generate DWARF pubnames and pubtypes sections.
gprune-btfCommon Driver Var(debug_prune_btf) Init(0)Generate pruned BTF when emitting BTF info.
gprune-btfUrlSuffix(gcc/Debugging-Options.html#index-gprune-btf)
gpubnamesCommon Driver Negative(ggnu-pubnames) Var(debug_generate_pub_sections, 1)Generate DWARF pubnames and pubtypes sections.
gpubnamesUrlSuffix(gcc/Debugging-Options.html#index-gpubnames)
grecord-gcc-switchesCommon Driver Var(dwarf_record_gcc_switches) Init(1)Record gcc command line switches in DWARF DW_AT_producer.
grecord-gcc-switchesUrlSuffix(gcc/Debugging-Options.html#index-grecord-gcc-switches)
gsplit-dwarfCommon Driver Var(dwarf_split_debug_info) Init(0)Generate debug information in separate .dwo files.
gsplit-dwarfUrlSuffix(gcc/Debugging-Options.html#index-gsplit-dwarf)
gstabsCommon Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gstabs+Common Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gstatement-frontiersCommon Driver Var(debug_nonbind_markers_p) PerFunctionEmit progressive recommended breakpoint locations.
gstatement-frontiersUrlSuffix(gcc/Debugging-Options.html#index-gstatement-frontiers)
gstrict-dwarfCommon Driver Var(dwarf_strict) Init(0)Don't emit DWARF additions beyond selected version.
gstrict-dwarfUrlSuffix(gcc/Debugging-Options.html#index-gstrict-dwarf)
gtoggleCommon Driver Var(flag_gtoggle)Toggle debug information generation.
gtoggleUrlSuffix(gcc/Developer-Options.html#index-gtoggle)
gvariable-location-viewsCommon Driver Var(debug_variable_location_views, 1)Augment variable location lists with progressive views.
gvariable-location-viewsUrlSuffix(gcc/Debugging-Options.html#index-gvariable-location-views)
gvariable-location-views=incompat5Common Driver RejectNegative Var(debug_variable_location_views, -1) Init(2)
gvariable-location-views=incompat5UrlSuffix(gcc/Debugging-Options.html#index-gvariable-location-views_003dincompat5)
gvmsCommon Driver JoinedOrMissing RejectNegativeGenerate debug information in VMS format.
gvmsUrlSuffix(gcc/Debugging-Options.html#index-gvms)
gxcoffCommon Driver WarnRemovedDoes nothing.  Preserved for backward compatibility.
gxcoff+Common Driver JoinedOrMissing  WarnRemovedDoes nothing.  Preserved for backward compatibility.
gzCommon DriverGenerate compressed debug sections.
gzUrlSuffix(gcc/Debugging-Options.html#index-gz)
gz=Common Driver RejectNegative Joined Enum(compressed_debug_sections)-gz=<format>	Generate compressed debug sections in format <format>.
gz=UrlSuffix(gcc/Debugging-Options.html#index-gz)
hDriver Joined Separate
helpLTODump Var(flag_lto_dump_tool_help)Dump the dump tool command line options.
helpUrlSuffix(gcc/Overall-Options.html#index-help)
idirafterC ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-idirafter <dir>	Add <dir> to the end of the system include path.
idirafterFortran Joined Separate
idirafterModula-2
idirafterUrlSuffix(gcc/Directory-Options.html#index-idirafter) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-idirafter)
idirafterUrlSuffix(gcc/Directory-Options.html#index-idirafter) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-idirafter)
idirafterUrlSuffix(gcc/Directory-Options.html#index-idirafter) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-idirafter)
imacrosC ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)-imacros <file>	Accept definition of macros in <file>.
imacrosUrlSuffix(gcc/Preprocessor-Options.html#index-imacros)
imultiarchCommon Joined Separate RejectDriver Var(imultiarch) Init(0)-imultiarch <dir>	Set <dir> to be the multiarch include subdirectory.
imultilibC ObjC C++ ObjC++ Joined Separate-imultilib <dir>	Set <dir> to be the multilib include subdirectory.
imultilibD Joined Separate
imultilibFortran Joined Separate
imultilibModula-2
imultilibUrlSuffix(gcc/Directory-Options.html#index-imultilib) LangUrlSuffix_D(gdc/Directory-Options.html#index-imultilib) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-imultilib)
imultilibUrlSuffix(gcc/Directory-Options.html#index-imultilib) LangUrlSuffix_D(gdc/Directory-Options.html#index-imultilib) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-imultilib)
imultilibUrlSuffix(gcc/Directory-Options.html#index-imultilib) LangUrlSuffix_D(gdc/Directory-Options.html#index-imultilib) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-imultilib)
imultilibUrlSuffix(gcc/Directory-Options.html#index-imultilib) LangUrlSuffix_D(gdc/Directory-Options.html#index-imultilib) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-imultilib)
includeC ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)-include <file>	Include the contents of <file> before other files.
includeUrlSuffix(gcc/Preprocessor-Options.html#index-include)
iplugindir=Common Joined Var(plugindir_string) Init(0)-iplugindir=<dir>	Set <dir> to be the default plugin directory.
iplugindir=UrlSuffix(gcc/Directory-Options.html#index-iplugindir_003d)
iprefixC ObjC C++ ObjC++ Joined Separate-iprefix <path>	Specify <path> as a prefix for next two options.
iprefixD Joined Separate
iprefixFortran Joined Separate
iprefixModula-2
iprefixUrlSuffix(gcc/Directory-Options.html#index-iprefix) LangUrlSuffix_D(gdc/Directory-Options.html#index-iprefix) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iprefix)
iprefixUrlSuffix(gcc/Directory-Options.html#index-iprefix) LangUrlSuffix_D(gdc/Directory-Options.html#index-iprefix) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iprefix)
iprefixUrlSuffix(gcc/Directory-Options.html#index-iprefix) LangUrlSuffix_D(gdc/Directory-Options.html#index-iprefix) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iprefix)
iprefixUrlSuffix(gcc/Directory-Options.html#index-iprefix) LangUrlSuffix_D(gdc/Directory-Options.html#index-iprefix) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iprefix)
iquoteC ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-iquote <dir>	Add <dir> to the end of the quote include path.
iquoteFortran Joined Separate
iquoteModula-2
iquoteUrlSuffix(gcc/Directory-Options.html#index-iquote) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iquote)
iquoteUrlSuffix(gcc/Directory-Options.html#index-iquote) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iquote)
iquoteUrlSuffix(gcc/Directory-Options.html#index-iquote) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-iquote)
isysrootC ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-isysroot <dir>	Set <dir> to be the system root directory.
isysrootD Joined Separate
isysrootFortran Joined Separate
isysrootModula-2
isysrootUrlSuffix(gcc/Directory-Options.html#index-isysroot) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isysroot)
isysrootUrlSuffix(gcc/Directory-Options.html#index-isysroot) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isysroot)
isysrootUrlSuffix(gcc/Directory-Options.html#index-isysroot) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isysroot)
isysrootUrlSuffix(gcc/Directory-Options.html#index-isysroot) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isysroot)
isystemC ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)-isystem <dir>	Add <dir> to the start of the system include path.
isystemD Joined Separate
isystemFortran Joined Separate
isystemModula-2
isystemUrlSuffix(gcc/Directory-Options.html#index-isystem) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isystem)
isystemUrlSuffix(gcc/Directory-Options.html#index-isystem) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isystem)
isystemUrlSuffix(gcc/Directory-Options.html#index-isystem) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isystem)
isystemUrlSuffix(gcc/Directory-Options.html#index-isystem) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-isystem)
iwithprefixC ObjC C++ ObjC++ Joined Separate-iwithprefix <dir>	Add <dir> to the end of the system include path.
iwithprefixUrlSuffix(gcc/Directory-Options.html#index-iwithprefix)
iwithprefixbeforeC ObjC C++ ObjC++ Joined Separate-iwithprefixbefore <dir>	Add <dir> to the end of the main include path.
iwithprefixbeforeUrlSuffix(gcc/Directory-Options.html#index-iwithprefixbefore)
k8DriverSynonym of -gnatk8.
lDriver Joined Separate
lUrlSuffix(gcc/Link-Options.html#index-l)
lang-asmC Undocumented RejectDriver
listLTODump Var(flag_lto_dump_list)Call the dump function for variables and function in IL.
m128bit-long-doubleTarget RejectNegative Mask(128BIT_LONG_DOUBLE) Savesizeof(long double) is 16.
m128bit-long-doubleUrlSuffix(gcc/x86-Options.html#index-m128bit-long-double)
m16Target RejectNegative Negative(m32) Mask(CODE16) InverseMask(ISA_64BIT) Var(ix86_isa_flags) SaveGenerate 16bit i386 code.
m16UrlSuffix(gcc/x86-Options.html#index-m16)
m32Target RejectNegative Negative(m64) InverseMask(ISA_64BIT) Var(ix86_isa_flags) SaveGenerate 32bit i386 code.
m32UrlSuffix(gcc/x86-Options.html#index-m32-2)
m3dnowTarget Mask(ISA_3DNOW) Var(ix86_isa_flags) SaveSupport 3DNow! built-in functions.
m3dnowUrlSuffix(gcc/x86-Options.html#index-m3dnow)
m3dnowaTarget Mask(ISA_3DNOW_A) Var(ix86_isa_flags) SaveSupport Athlon 3Dnow! built-in functions.
m3dnowaUrlSuffix(gcc/x86-Options.html#index-m3dnowa)
m64Target RejectNegative Negative(mx32) Mask(ABI_64) Var(ix86_isa_flags) SaveGenerate 64bit x86-64 code.
m64UrlSuffix(gcc/x86-Options.html#index-m64-4)
m80387Target Mask(80387) SaveUse hardware fp.
m80387UrlSuffix(gcc/x86-Options.html#index-m80387)
m8bit-idivTarget Mask(USE_8BIT_IDIV) SaveExpand 32bit/64bit integer divide into 8bit unsigned integer divide with run-time check.
m8bit-idivUrlSuffix(gcc/x86-Options.html#index-m8bit-idiv)
m96bit-long-doubleTarget RejectNegative InverseMask(128BIT_LONG_DOUBLE) Savesizeof(long double) is 12.
m96bit-long-doubleUrlSuffix(gcc/x86-Options.html#index-m96bit-long-double)
mabi=Target RejectNegative Joined Var(ix86_abi) Enum(calling_abi) Init(SYSV_ABI)Generate code that conforms to the given ABI.
mabi=UrlSuffix(gcc/x86-Options.html#index-mabi-7)
mabmTarget Mask(ISA_ABM) Var(ix86_isa_flags) SaveSupport code generation of Advanced Bit Manipulation (ABM) instructions.
mabmUrlSuffix(gcc/x86-Options.html#index-mabm)
maccumulate-outgoing-argsTarget Mask(ACCUMULATE_OUTGOING_ARGS) SaveReserve space for outgoing arguments in the function prologue.
maccumulate-outgoing-argsUrlSuffix(gcc/x86-Options.html#index-maccumulate-outgoing-args-1)
maddress-mode=Target RejectNegative Joined Enum(pmode) Var(ix86_pmode) Init(PMODE_SI)Use given address mode.
madxTarget Mask(ISA_ADX) Var(ix86_isa_flags) SaveSupport flag-preserving add-carry instructions.
madxUrlSuffix(gcc/x86-Options.html#index-madx)
maesTarget Mask(ISA_AES) Var(ix86_isa_flags) SaveSupport AES built-in functions and code generation.
maesUrlSuffix(gcc/x86-Options.html#index-maes)
malign-data=Target RejectNegative Joined Var(ix86_align_data_type) Enum(ix86_align_data) Init(ix86_align_data_type_compat)Use the given data alignment.
malign-data=UrlSuffix(gcc/x86-Options.html#index-malign-data-1)
malign-doubleTarget Mask(ALIGN_DOUBLE) SaveAlign some doubles on dword boundary.
malign-doubleUrlSuffix(gcc/x86-Options.html#index-malign-double)
malign-functions=Target RejectNegative Joined UIntegerFunction starts are aligned to this power of 2.
malign-jumps=Target RejectNegative Joined UIntegerJump targets are aligned to this power of 2.
malign-loops=Target RejectNegative Joined UIntegerLoop code aligned to this power of 2.
malign-stringopsTarget RejectNegative InverseMask(NO_ALIGN_STRINGOPS, ALIGN_STRINGOPS) SaveAlign destination of the string operations.
malign-stringopsUrlSuffix(gcc/x86-Options.html#index-malign-stringops)
mamx-avx512Target Mask(ISA2_AMX_AVX512) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX10.1-512,AVX10.2-512 and AMX-AVX512 built-in functions and code generation.
mamx-avx512UrlSuffix(gcc/x86-Options.html#index-mamx-avx512)
mamx-bf16Target Mask(ISA2_AMX_BF16) Var(ix86_isa_flags2) SaveSupport AMX-BF16 built-in functions and code generation.
mamx-bf16UrlSuffix(gcc/x86-Options.html#index-mamx-bf16)
mamx-complexTarget Mask(ISA2_AMX_COMPLEX) Var(ix86_isa_flags2) SaveSupport AMX-COMPLEX built-in functions and code generation.
mamx-complexUrlSuffix(gcc/x86-Options.html#index-mamx-complex)
mamx-fp16Target Mask(ISA2_AMX_FP16) Var(ix86_isa_flags2) SaveSupport AMX-FP16 built-in functions and code generation.
mamx-fp16UrlSuffix(gcc/x86-Options.html#index-mamx-fp16)
mamx-fp8Target Mask(ISA2_AMX_FP8) Var(ix86_isa_flags2) SaveSupport AMX-FP8 built-in functions and code generation.
mamx-fp8UrlSuffix(gcc/x86-Options.html#index-mamx-fp8)
mamx-int8Target Mask(ISA2_AMX_INT8) Var(ix86_isa_flags2) SaveSupport AMX-INT8 built-in functions and code generation.
mamx-int8UrlSuffix(gcc/x86-Options.html#index-mamx-int8)
mamx-movrsTarget Mask(ISA2_AMX_MOVRS) Var(ix86_isa_flags2) SaveSupport AMX-MOVRS built-in functions and code generation.
mamx-movrsUrlSuffix(gcc/x86-Options.html#index-mamx-movrs)
mamx-tf32Target Mask(ISA2_AMX_TF32) Var(ix86_isa_flags2) SaveSupport AMX-TF32 built-in functions and code generation.
mamx-tf32UrlSuffix(gcc/x86-Options.html#index-mamx-tf32)
mamx-tileTarget Mask(ISA2_AMX_TILE) Var(ix86_isa_flags2) SaveSupport AMX-TILE built-in functions and code generation.
mamx-tileUrlSuffix(gcc/x86-Options.html#index-mamx-tile)
mamx-transposeTarget Mask(ISA2_AMX_TRANSPOSE) Var(ix86_isa_flags2) SaveSupport AMX-TRANSPOSE built-in functions and code generation.
mamx-transposeUrlSuffix(gcc/x86-Options.html#index-mamx-transpose)
mandroidTarget Mask(ANDROID) Var(flag_android) Init(ANDROID_DEFAULT ? OPTION_MASK_ANDROID : 0)Generate code for the Android platform.
mandroidUrlSuffix(gcc/GNU_002fLinux-Options.html#index-mandroid)
mapx-features=Target Undocumented Joined Enum(apx_features) EnumSet Var(ix86_apx_features) Init(apx_none) Save
mapx-inline-asm-use-gpr32Target Var(ix86_apx_inline_asm_use_gpr32) Init(0)Enable GPR32 in inline asm when APX_F enabled.
mapx-inline-asm-use-gpr32UrlSuffix(gcc/x86-Options.html#index-mapx-inline-asm-use-gpr32)
mapxfTarget Mask(ISA2_APX_F) Var(ix86_isa_flags2) SaveSupport code generation for APX features, including EGPR, PUSH2POP2,NDD, PPX, NF, CCMP and ZU.
mapxfUrlSuffix(gcc/x86-Options.html#index-mapxf)
march=Target RejectNegative Negative(march=) Joined Var(ix86_arch_string)Generate code for given CPU.
march=UrlSuffix(gcc/x86-Options.html#index-march-15)
masm=Target RejectNegative Joined Enum(asm_dialect) Var(ix86_asm_dialect) Init(ASM_ATT)Use given assembler dialect.
mavxTarget Mask(ISA_AVX) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 and AVX built-in functions and code generation.
mavxUrlSuffix(gcc/x86-Options.html#index-mavx)
mavx10.1-256Target Mask(ISA2_AVX10_1_256) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2,and AVX10.1 built-in functions and code generation.
mavx10.1-256UrlSuffix(gcc/x86-Options.html#index-mavx10_002e1-256)
mavx10.1-512Target Mask(ISA2_AVX10_1_512) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2,and AVX10.1-512 built-in functions and code generation.
mavx10.1-512UrlSuffix(gcc/x86-Options.html#index-mavx10_002e1-512)
mavx10.2Target Mask(ISA2_AVX10_2_512) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2,AVX10.1-512 and AVX10.2-512 built-in functions and code generation.
mavx10.2UrlSuffix(gcc/x86-Options.html#index-mavx10_002e2)
mavx10.2-256Target RejectNegative Mask(ISA2_AVX10_2_256) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2,AVX10.1 and AVX10.2 built-in functions and code generation.
mavx10.2-256UrlSuffix(gcc/x86-Options.html#index-mavx10_002e2-256)
mavx10.2-512Target RejectNegative Alias(mavx10.2)Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2,AVX10.1-512 and AVX10.2-512 built-in functions and code generation.
mavx10.2-512UrlSuffix(gcc/x86-Options.html#index-mavx10_002e2-512)
mavx2Target Mask(ISA_AVX2) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and AVX2 built-in functions and code generation.
mavx2UrlSuffix(gcc/x86-Options.html#index-mavx2)
mavx256-split-unaligned-loadTarget Mask(AVX256_SPLIT_UNALIGNED_LOAD) SaveSplit 32-byte AVX unaligned load.
mavx256-split-unaligned-loadUrlSuffix(gcc/x86-Options.html#index-mavx256-split-unaligned-load)
mavx256-split-unaligned-storeTarget Mask(AVX256_SPLIT_UNALIGNED_STORE) SaveSplit 32-byte AVX unaligned store.
mavx256-split-unaligned-storeUrlSuffix(gcc/x86-Options.html#index-mavx256-split-unaligned-store)
mavx512bf16Target Mask(ISA2_AVX512BF16) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F andAVX512BF16 built-in functions and code generation.
mavx512bf16UrlSuffix(gcc/x86-Options.html#index-mavx512bf16)
mavx512bitalgTarget Mask(ISA_AVX512BITALG) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512BITALG built-in functions and code generation.
mavx512bitalgUrlSuffix(gcc/x86-Options.html#index-mavx512bitalg)
mavx512bwTarget Mask(ISA_AVX512BW) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512BW built-in functions and code generation.
mavx512bwUrlSuffix(gcc/x86-Options.html#index-mavx512bw)
mavx512cdTarget Mask(ISA_AVX512CD) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512CD built-in functions and code generation.
mavx512cdUrlSuffix(gcc/x86-Options.html#index-mavx512cd)
mavx512dqTarget Mask(ISA_AVX512DQ) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512DQ built-in functions and code generation.
mavx512dqUrlSuffix(gcc/x86-Options.html#index-mavx512dq)
mavx512fTarget Mask(ISA_AVX512F) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F built-in functions and code generation.
mavx512fUrlSuffix(gcc/x86-Options.html#index-mavx512f)
mavx512fp16Target Mask(ISA2_AVX512FP16) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512-FP16 built-in functions and code generation.
mavx512fp16UrlSuffix(gcc/x86-Options.html#index-mavx512fp16)
mavx512ifmaTarget Mask(ISA_AVX512IFMA) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512IFMA built-in functions and code generation.
mavx512ifmaUrlSuffix(gcc/x86-Options.html#index-mavx512ifma)
mavx512vbmiTarget Mask(ISA_AVX512VBMI) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VBMI built-in functions and code generation.
mavx512vbmiUrlSuffix(gcc/x86-Options.html#index-mavx512vbmi)
mavx512vbmi2Target Mask(ISA_AVX512VBMI2) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VBMI2 built-in functions and code generation.
mavx512vbmi2UrlSuffix(gcc/x86-Options.html#index-mavx512vbmi2)
mavx512vlTarget Mask(ISA_AVX512VL) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VL built-in functions and code generation.
mavx512vlUrlSuffix(gcc/x86-Options.html#index-mavx512vl)
mavx512vnniTarget Mask(ISA_AVX512VNNI) Var(ix86_isa_flags) SaveSupport AVX512VNNI built-in functions and code generation.
mavx512vnniUrlSuffix(gcc/x86-Options.html#index-mavx512vnni)
mavx512vp2intersectTarget Mask(ISA2_AVX512VP2INTERSECT) Var(ix86_isa_flags2) SaveSupport AVX512VP2INTERSECT built-in functions and code generation.
mavx512vp2intersectUrlSuffix(gcc/x86-Options.html#index-mavx512vp2intersect)
mavx512vpopcntdqTarget Mask(ISA_AVX512VPOPCNTDQ) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VPOPCNTDQ built-in functions and code generation.
mavx512vpopcntdqUrlSuffix(gcc/x86-Options.html#index-mavx512vpopcntdq)
mavxifmaTarget Mask(ISA2_AVXIFMA) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, andAVXIFMA built-in functions and code generation.
mavxifmaUrlSuffix(gcc/x86-Options.html#index-mavxifma)
mavxneconvertTarget Mask(ISA2_AVXNECONVERT) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, andAVXNECONVERT build-in functions and code generation.
mavxneconvertUrlSuffix(gcc/x86-Options.html#index-mavxneconvert)
mavxvnniTarget Mask(ISA2_AVXVNNI) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, andAVXVNNI built-in functions and code generation.
mavxvnniUrlSuffix(gcc/x86-Options.html#index-mavxvnni)
mavxvnniint16Target Mask(ISA2_AVXVNNIINT16) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 andAVXVNNIINT16 built-in functions and code generation.
mavxvnniint16UrlSuffix(gcc/x86-Options.html#index-mavxvnniint16)
mavxvnniint8Target Mask(ISA2_AVXVNNIINT8) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 andAVXVNNIINT8 built-in functions and code generation.
mavxvnniint8UrlSuffix(gcc/x86-Options.html#index-mavxvnniint8)
mbionicTarget RejectNegative Var(linux_libc,LIBC_BIONIC) Init(DEFAULT_LIBC) Negative(mglibc)Use Bionic C library.
mbionicUrlSuffix(gcc/GNU_002fLinux-Options.html#index-mbionic)
mbmiTarget Mask(ISA_BMI) Var(ix86_isa_flags) SaveSupport BMI built-in functions and code generation.
mbmiUrlSuffix(gcc/x86-Options.html#index-mbmi)
mbmi2Target Mask(ISA_BMI2) Var(ix86_isa_flags) SaveSupport BMI2 built-in functions and code generation.
mbmi2UrlSuffix(gcc/x86-Options.html#index-mbmi2)
mbranch-cost=Target RejectNegative Joined UInteger Var(ix86_branch_cost) IntegerRange(0, 5)Branches are this expensive (arbitrary units).
mcall-ms2sysv-xloguesTarget Mask(CALL_MS2SYSV_XLOGUES) SaveUse libgcc stubs to save and restore registers clobbered by 64-bit Microsoft to System V ABI calls.
mcall-ms2sysv-xloguesUrlSuffix(gcc/x86-Options.html#index-mcall-ms2sysv-xlogues)
mcet-switchTarget Var(flag_cet_switch) Init(0)Turn on CET instrumentation for switch statements that use a jump table andan indirect jump.
mcet-switchUrlSuffix(gcc/x86-Options.html#index-mcet-switch)
mcldTarget Mask(CLD) SaveGenerate cld instruction in the function prologue.
mcldUrlSuffix(gcc/x86-Options.html#index-mcld)
mcldemoteTarget Mask(ISA2_CLDEMOTE) Var(ix86_isa_flags2) SaveSupport CLDEMOTE built-in functions and code generation.
mcldemoteUrlSuffix(gcc/x86-Options.html#index-mcldemote)
mclflushoptTarget Mask(ISA_CLFLUSHOPT) Var(ix86_isa_flags) SaveSupport CLFLUSHOPT instructions.
mclflushoptUrlSuffix(gcc/x86-Options.html#index-mclflushopt)
mclwbTarget Mask(ISA_CLWB) Var(ix86_isa_flags) SaveSupport CLWB instruction.
mclwbUrlSuffix(gcc/x86-Options.html#index-mclwb)
mclzeroTarget Mask(ISA2_CLZERO) Var(ix86_isa_flags2) SaveSupport CLZERO built-in functions and code generation.
mclzeroUrlSuffix(gcc/x86-Options.html#index-mclzero)
mcmodel=Target RejectNegative Joined Enum(cmodel) Var(ix86_cmodel) Init(CM_32)Use given x86-64 code model.
mcmodel=UrlSuffix(gcc/x86-Options.html#index-mcmodel_003d-7)
mcmpccxaddTarget Mask(ISA2_CMPCCXADD) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, andCMPCCXADD build-in functions and code generation.
mcmpccxaddUrlSuffix(gcc/x86-Options.html#index-mcmpccxadd)
mcpu=Target RejectNegative Joined Undocumented Alias(mtune=) Warn(%<-mcpu=%> is deprecated; use %<-mtune=%> or %<-march=%> instead)
mcpu=UrlSuffix(gcc/x86-Options.html#index-mcpu-14)
mcrc32Target Mask(ISA_CRC32) Var(ix86_isa_flags) SaveSupport code generation of crc32 instruction.
mcrc32UrlSuffix(gcc/x86-Options.html#index-mcrc32)
mcx16Target Mask(ISA2_CX16) Var(ix86_isa_flags2) SaveSupport code generation of cmpxchg16b instruction.
mcx16UrlSuffix(gcc/x86-Options.html#index-mcx16)
mdaz-ftzTargetSet the FTZ and DAZ Flags.
mdaz-ftzUrlSuffix(gcc/x86-Options.html#index-mdaz-ftz)
mdirect-extern-accessTarget Var(ix86_direct_extern_access) Init(1)Do not use GOT to access external symbols.
mdirect-extern-accessUrlSuffix(gcc/x86-Options.html#index-mdirect-extern-access-1)
mdispatch-schedulerTarget RejectNegative Var(flag_dispatch_scheduler)Do dispatch scheduling if processor is bdver1, bdver2, bdver3, bdver4or znver1 and Haifa scheduling is selected.
mdump-tune-featuresTarget RejectNegative Var(ix86_dump_tunes)
mdump-tune-featuresUrlSuffix(gcc/x86-Options.html#index-mdump-tune-features)
menqcmdTarget Mask(ISA2_ENQCMD) Var(ix86_isa_flags2) SaveSupport ENQCMD built-in functions and code generation.
menqcmdUrlSuffix(gcc/x86-Options.html#index-menqcmd)
mevex512Target Mask(ISA2_EVEX512) Var(ix86_isa_flags2) SaveSupport 512 bit vector built-in functions and code generation.
mevex512UrlSuffix(gcc/x86-Options.html#index-mevex512)
mf16cTarget Mask(ISA_F16C) Var(ix86_isa_flags) SaveSupport F16C built-in functions and code generation.
mf16cUrlSuffix(gcc/x86-Options.html#index-mf16c)
mfancy-math-387Target RejectNegative InverseMask(NO_FANCY_MATH_387, USE_FANCY_MATH_387) SaveGenerate sin, cos, sqrt for FPU.
mfancy-math-387UrlSuffix(gcc/x86-Options.html#index-mfancy-math-387)
mfentryTarget Save Var(flag_fentry)Emit profiling counter call at function entry before prologue.
mfentryUrlSuffix(gcc/x86-Options.html#index-mfentry)
mfentry-name=Target RejectNegative Joined Var(fentry_name)Set name of __fentry__ symbol called at function entry.
mfentry-name=UrlSuffix(gcc/x86-Options.html#index-mfentry-name)
mfentry-section=Target RejectNegative Joined Var(fentry_section)Set name of section to record mrecord-mcount calls.
mfentry-section=UrlSuffix(gcc/x86-Options.html#index-mfentry-section)
mfmaTarget Mask(ISA_FMA) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation.
mfmaUrlSuffix(gcc/x86-Options.html#index-mfma)
mfma4Target Mask(ISA_FMA4) Var(ix86_isa_flags) SaveSupport FMA4 built-in functions and code generation.
mfma4UrlSuffix(gcc/x86-Options.html#index-mfma4)
mforce-drapTarget Var(ix86_force_drap)Always use Dynamic Realigned Argument Pointer (DRAP) to realign stack.
mforce-indirect-callTarget Var(flag_force_indirect_call) Init(0)Make all function calls indirect.
mforce-indirect-callUrlSuffix(gcc/x86-Options.html#index-mforce-indirect-call)
mfp-ret-in-387Target Mask(FLOAT_RETURNS) SaveReturn values of functions in FPU registers.
mfp-ret-in-387UrlSuffix(gcc/x86-Options.html#index-mfp-ret-in-387)
mfpmath=Target RejectNegative Joined Var(ix86_fpmath) Enum(fpmath_unit) Init(FPMATH_387) SaveGenerate floating point mathematics using given instruction set.
mfsgsbaseTarget Mask(ISA_FSGSBASE) Var(ix86_isa_flags) SaveSupport FSGSBASE built-in functions and code generation.
mfsgsbaseUrlSuffix(gcc/x86-Options.html#index-mfsgsbase)
mfunction-return=Target RejectNegative Joined Enum(indirect_branch) Var(ix86_function_return) Init(indirect_branch_keep)Convert function return to call and return thunk.
mfunction-return=UrlSuffix(gcc/x86-Options.html#index-mfunction-return)
mfused-maddTarget Undocumented Alias(ffp-contract=, fast, off) Warn(%<-mfused-madd%> is deprecated; use %<-ffp-contract=%> instead)
mfxsrTarget Mask(ISA_FXSR) Var(ix86_isa_flags) SaveSupport FXSAVE and FXRSTOR instructions.
mfxsrUrlSuffix(gcc/x86-Options.html#index-mfxsr)
mgatherTarget Alias(mtune-ctrl=, use_gather, ^use_gather)Enable vectorization for gather instruction.
mgeneral-regs-onlyTarget RejectNegative Mask(GENERAL_REGS_ONLY) Var(ix86_target_flags) SaveGenerate code which uses only the general registers.
mgeneral-regs-onlyUrlSuffix(gcc/x86-Options.html#index-mgeneral-regs-only-2)
mgfniTarget Mask(ISA_GFNI) Var(ix86_isa_flags) SaveSupport GFNI built-in functions and code generation.
mgfniUrlSuffix(gcc/x86-Options.html#index-mgfni)
mglibcTarget RejectNegative Var(linux_libc,LIBC_GLIBC) Negative(muclibc)Use GNU C library.
mglibcUrlSuffix(gcc/GNU_002fLinux-Options.html#index-mglibc)
mhard-floatTarget RejectNegative Mask(80387) SaveUse hardware fp.
mhard-floatUrlSuffix(gcc/x86-Options.html#index-mhard-float-11)
mharden-sls=Target RejectNegative Joined Enum(harden_sls) Var(ix86_harden_sls) Init(harden_sls_none)Generate code to mitigate against straight line speculation.
mharden-sls=UrlSuffix(gcc/x86-Options.html#index-mharden-sls-1)
mhleTarget Mask(ISA2_HLE) Var(ix86_isa_flags2) SaveSupport Hardware Lock Elision prefixes.
mhleUrlSuffix(gcc/x86-Options.html#index-mhle)
mhresetTarget Mask(ISA2_HRESET) Var(ix86_isa_flags2) SaveSupport HRESET built-in functions and code generation.
mhresetUrlSuffix(gcc/x86-Options.html#index-mhreset)
miamcuTarget Mask(IAMCU)Generate code that conforms to Intel MCU psABI.
miamcuUrlSuffix(gcc/x86-Options.html#index-miamcu)
mieee-fpTarget Mask(IEEE_FP) SaveUse IEEE math for fp comparisons.
mieee-fpUrlSuffix(gcc/x86-Options.html#index-mieee-fp)
mincoming-stack-boundary=Target RejectNegative Joined UInteger Var(ix86_incoming_stack_boundary_arg)Assume incoming stack aligned to this power of 2.
mincoming-stack-boundary=UrlSuffix(gcc/x86-Options.html#index-mincoming-stack-boundary)
mindirect-branch-cs-prefixTarget Var(ix86_indirect_branch_cs_prefix) Init(0)Add CS prefix to call and jmp to indirect thunk with branch target in r8-r15 registers.
mindirect-branch-cs-prefixUrlSuffix(gcc/x86-Options.html#index-mindirect-branch-cs-prefix)
mindirect-branch-registerTarget Var(ix86_indirect_branch_register) Init(0)Force indirect call and jump via register.
mindirect-branch-registerUrlSuffix(gcc/x86-Options.html#index-mindirect-branch-register)
mindirect-branch=Target RejectNegative Joined Enum(indirect_branch) Var(ix86_indirect_branch) Init(indirect_branch_keep)Convert indirect call and jump to call and return thunks.
mindirect-branch=UrlSuffix(gcc/x86-Options.html#index-mindirect-branch)
minline-all-stringopsTarget Mask(INLINE_ALL_STRINGOPS) SaveInline all known string operations.
minline-all-stringopsUrlSuffix(gcc/x86-Options.html#index-minline-all-stringops)
minline-stringops-dynamicallyTarget Mask(INLINE_STRINGOPS_DYNAMICALLY) SaveInline memset/memcpy string operations, but perform inline version only for small blocks.
minline-stringops-dynamicallyUrlSuffix(gcc/x86-Options.html#index-minline-stringops-dynamically)
minstrument-return=Target RejectNegative Joined Enum(instrument_return) Var(ix86_instrument_return) Init(instrument_return_none)Instrument function exit in instrumented functions with __fentry__.
minstrument-return=UrlSuffix(gcc/x86-Options.html#index-minstrument-return)
mintel-syntaxTarget Undocumented Alias(masm=, intel, att) Warn(%<-mintel-syntax%> and %<-mno-intel-syntax%> are deprecated; use %<-masm=intel%> and %<-masm=att%> instead)
mklTarget Mask(ISA2_KL) Var(ix86_isa_flags2) SaveSupport KL built-in functions and code generation.
mklUrlSuffix(gcc/x86-Options.html#index-mkl)
mlam=Target RejectNegative Joined Enum(lam_type) Var(ix86_lam_type) Init(lam_none)-mlam=[none|u48|u57] Instrument meta data position in user data pointers.
mlam=UrlSuffix(gcc/x86-Options.html#index-mlam)
mlarge-data-threshold=Target RejectNegative Joined UInteger Var(ix86_section_threshold) Init(DEFAULT_LARGE_SECTION_THRESHOLD)-mlarge-data-threshold=<number>	Data greater than given threshold will go into a large data section in x86-64 medium and large code models.
mlarge-data-threshold=UrlSuffix(gcc/x86-Options.html#index-mlarge-data-threshold)
mlong-double-128Target RejectNegative Negative(mlong-double-80) Mask(LONG_DOUBLE_128) InverseMask(LONG_DOUBLE_64) SaveUse 128-bit long double.
mlong-double-128UrlSuffix(gcc/x86-Options.html#index-mlong-double-128-1)
mlong-double-64Target RejectNegative Negative(mlong-double-128) Mask(LONG_DOUBLE_64) InverseMask(LONG_DOUBLE_128) SaveUse 64-bit long double.
mlong-double-64UrlSuffix(gcc/x86-Options.html#index-mlong-double-64-1)
mlong-double-80Target RejectNegative Negative(mlong-double-64) InverseMask(LONG_DOUBLE_64) SaveUse 80-bit long double.
mlong-double-80UrlSuffix(gcc/x86-Options.html#index-mlong-double-80)
mlwpTarget Mask(ISA_LWP) Var(ix86_isa_flags) SaveSupport LWP built-in functions and code generation.
mlwpUrlSuffix(gcc/x86-Options.html#index-mlwp)
mlzcntTarget Mask(ISA_LZCNT) Var(ix86_isa_flags) SaveSupport LZCNT built-in function and code generation.
mlzcntUrlSuffix(gcc/x86-Options.html#index-mlzcnt)
mmanual-endbrTarget Var(flag_manual_endbr) Init(0)Insert ENDBR instruction at function entry only via cf_check attributefor CET instrumentation.
mmanual-endbrUrlSuffix(gcc/x86-Options.html#index-mmanual-endbr)
mmemcpy-strategy=Target RejectNegative Joined Var(ix86_tune_memcpy_strategy)Specify memcpy expansion strategy when expected size is known.
mmemset-strategy=Target RejectNegative Joined Var(ix86_tune_memset_strategy)Specify memset expansion strategy when expected size is known.
mmitigate-ropTarget WarnRemoved
mmmxTarget Mask(ISA_MMX) Var(ix86_isa_flags) SaveSupport MMX built-in functions.
mmmxUrlSuffix(gcc/x86-Options.html#index-mmmx)
mmovbeTarget Mask(ISA2_MOVBE) Var(ix86_isa_flags2) SaveSupport code generation of movbe instruction.
mmovbeUrlSuffix(gcc/x86-Options.html#index-mmovbe)
mmovdir64bTarget Mask(ISA2_MOVDIR64B) Var(ix86_isa_flags2) SaveSupport MOVDIR64B built-in functions and code generation.
mmovdir64bUrlSuffix(gcc/x86-Options.html#index-mmovdir64b)
mmovdiriTarget Mask(ISA_MOVDIRI) Var(ix86_isa_flags) SaveSupport MOVDIRI built-in functions and code generation.
mmovdiriUrlSuffix(gcc/x86-Options.html#index-mmovdiri)
mmove-max=Target RejectNegative Joined Var(ix86_move_max) Enum(prefer_vector_width) Init(PVW_NONE) SaveMaximum number of bits that can be moved from memory to memory efficiently.
mmove-max=UrlSuffix(gcc/x86-Options.html#index-mmove-max)
mmovrsTarget Mask(ISA2_MOVRS) Var(ix86_isa_flags2) SaveSupport MOVRS built-in functions and code generation.
mmovrsUrlSuffix(gcc/x86-Options.html#index-mmovrs)
mmpxTarget WarnRemovedRemoved in GCC 9.  This switch has no effect.
mms-bitfieldsTarget Mask(MS_BITFIELD_LAYOUT) SaveUse native (MS) bitfield layout.
mms-bitfieldsUrlSuffix(gcc/x86-Options.html#index-mms-bitfields)
mmuslTarget RejectNegative Var(linux_libc,LIBC_MUSL) Negative(mbionic)Use musl C library.
mmuslUrlSuffix(gcc/GNU_002fLinux-Options.html#index-mmusl)
mmwaitTarget Mask(ISA2_MWAIT) Var(ix86_isa_flags2) SaveSupport MWAIT and MONITOR built-in functions and code generation.
mmwaitUrlSuffix(gcc/x86-Options.html#index-mmwait)
mmwaitxTarget Mask(ISA2_MWAITX) Var(ix86_isa_flags2) SaveSupport MWAITX and MONITORX built-in functions and code generation.
mmwaitxUrlSuffix(gcc/x86-Options.html#index-mmwaitx)
mneededTarget Var(ix86_needed) SaveEmit GNU_PROPERTY_X86_ISA_1_NEEDED GNU property.
mneededUrlSuffix(gcc/x86-Options.html#index-mneeded)
mno-align-stringopsTarget RejectNegative Mask(NO_ALIGN_STRINGOPS) Undocumented Save
mno-align-stringopsUrlSuffix(gcc/x86-Options.html#index-mno-align-stringops)
mno-defaultTarget RejectNegative Var(ix86_tune_no_default)Clear all tune features.
mno-defaultUrlSuffix(gcc/x86-Options.html#index-mno-default)
mno-fancy-math-387Target RejectNegative Mask(NO_FANCY_MATH_387) Undocumented Save
mno-fancy-math-387UrlSuffix(gcc/x86-Options.html#index-mno-fancy-math-387)
mno-push-argsTarget RejectNegative Mask(NO_PUSH_ARGS) Undocumented Save
mno-push-argsUrlSuffix(gcc/x86-Options.html#index-mno-push-args)
mno-red-zoneTarget RejectNegative Mask(NO_RED_ZONE) Undocumented Save
mno-red-zoneUrlSuffix(gcc/x86-Options.html#index-mno-red-zone)
mno-sse4Target RejectNegative InverseMask(ISA_SSE4_1) Var(ix86_isa_flags) SaveDo not support SSE4.1 and SSE4.2 built-in functions and code generation.
mnop-mcountTarget Var(flag_nop_mcount)Generate mcount/__fentry__ calls as nops. To activate they need to bepatched in.
mnop-mcountUrlSuffix(gcc/x86-Options.html#index-mnop-mcount)
mnoreturn-no-callee-saved-registersTarget Var(ix86_noreturn_no_callee_saved_registers)Optimize noreturn functions by not saving callee-saved registers used in the function.
mnoreturn-no-callee-saved-registersUrlSuffix(gcc/x86-Options.html#index-mnoreturn-no-callee-saved-registers)
momit-leaf-frame-pointerTarget Mask(OMIT_LEAF_FRAME_POINTER) SaveOmit the frame pointer in leaf functions.
momit-leaf-frame-pointerUrlSuffix(gcc/x86-Options.html#index-momit-leaf-frame-pointer-2)
mpartial-vector-fp-mathTarget Var(ix86_partial_vec_fp_math) Init(1)Enable floating-point status flags setting SSE vector operations on partial vectors.
mpartial-vector-fp-mathUrlSuffix(gcc/x86-Options.html#index-mpartial-vector-fp-math)
mpc32Target RejectNegativeSet 80387 floating-point precision to 32-bit.
mpc32UrlSuffix(gcc/x86-Options.html#index-mpc32)
mpc64Target RejectNegativeSet 80387 floating-point precision to 64-bit.
mpc64UrlSuffix(gcc/x86-Options.html#index-mpc64)
mpc80Target RejectNegativeSet 80387 floating-point precision to 80-bit.
mpc80UrlSuffix(gcc/x86-Options.html#index-mpc80)
mpclmulTarget Mask(ISA_PCLMUL) Var(ix86_isa_flags) SaveSupport PCLMUL built-in functions and code generation.
mpclmulUrlSuffix(gcc/x86-Options.html#index-mpclmul)
mpcommitTarget WarnRemoved
mpconfigTarget Mask(ISA2_PCONFIG) Var(ix86_isa_flags2) SaveSupport PCONFIG built-in functions and code generation.
mpconfigUrlSuffix(gcc/x86-Options.html#index-mpconfig)
mpkuTarget Mask(ISA_PKU) Var(ix86_isa_flags) SaveSupport PKU built-in functions and code generation.
mpkuUrlSuffix(gcc/x86-Options.html#index-mpku)
mpopcntTarget Mask(ISA_POPCNT) Var(ix86_isa_flags) SaveSupport code generation of popcnt instruction.
mpopcntUrlSuffix(gcc/x86-Options.html#index-mpopcnt)
mprefer-avx128Target Alias(mprefer-vector-width=, 128, 256)Use 128-bit AVX instructions instead of 256-bit AVX instructions in the auto-vectorizer.
mprefer-avx128UrlSuffix(gcc/x86-Options.html#index-mprefer-avx128)
mprefer-vector-width=Target RejectNegative Joined Var(prefer_vector_width_type) Enum(prefer_vector_width) Init(PVW_NONE) SaveUse given register vector width instructions instead of maximum register width in the auto-vectorizer.
mprefer-vector-width=UrlSuffix(gcc/x86-Options.html#index-mprefer-vector-width)
mpreferred-stack-boundary=Target RejectNegative Joined UInteger Var(ix86_preferred_stack_boundary_arg)Attempt to keep stack aligned to this power of 2.
mpreferred-stack-boundary=UrlSuffix(gcc/x86-Options.html#index-mpreferred-stack-boundary-1)
mprefetchiTarget Mask(ISA2_PREFETCHI) Var(ix86_isa_flags2) SaveSupport PREFETCHI built-in functions and code generation.
mprefetchiUrlSuffix(gcc/x86-Options.html#index-mprefetchi)
mprfchwTarget Mask(ISA_PRFCHW) Var(ix86_isa_flags) SaveSupport PREFETCHW instruction.
mprfchwUrlSuffix(gcc/x86-Options.html#index-mprfchw)
mptwriteTarget Mask(ISA2_PTWRITE) Var(ix86_isa_flags2) SaveSupport PTWRITE built-in functions and code generation.
mptwriteUrlSuffix(gcc/x86-Options.html#index-mptwrite)
mpush-argsTarget InverseMask(NO_PUSH_ARGS, PUSH_ARGS) SaveUse push instructions to save outgoing arguments.
mpush-argsUrlSuffix(gcc/x86-Options.html#index-mpush-args)
mraointTarget Mask(ISA2_RAOINT) Var(ix86_isa_flags2) SaveSupport RAOINT built-in functions and code generation.
mraointUrlSuffix(gcc/x86-Options.html#index-mraoint)
mrdpidTarget Mask(ISA2_RDPID) Var(ix86_isa_flags2) SaveSupport RDPID built-in functions and code generation.
mrdpidUrlSuffix(gcc/x86-Options.html#index-mrdpid)
mrdrndTarget Mask(ISA_RDRND) Var(ix86_isa_flags) SaveSupport RDRND built-in functions and code generation.
mrdrndUrlSuffix(gcc/x86-Options.html#index-mrdrnd)
mrdseedTarget Mask(ISA_RDSEED) Var(ix86_isa_flags) SaveSupport RDSEED instruction.
mrdseedUrlSuffix(gcc/x86-Options.html#index-mrdseed)
mrecipTarget Mask(RECIP) SaveGenerate reciprocals instead of divss and sqrtss.
mrecipUrlSuffix(gcc/x86-Options.html#index-mrecip-2)
mrecip=Target RejectNegative Joined Var(ix86_recip_name)Control generation of reciprocal estimates.
mrecip=UrlSuffix(gcc/x86-Options.html#index-mrecip-2)
mrecord-mcountTarget Var(flag_record_mcount)Generate __mcount_loc section with all mcount or __fentry__ calls.
mrecord-mcountUrlSuffix(gcc/x86-Options.html#index-mrecord-mcount)
mrecord-returnTarget Var(ix86_flag_record_return) Init(0)Generate a __return_loc section pointing to all return instrumentation code.
mrecord-returnUrlSuffix(gcc/x86-Options.html#index-mrecord-return)
mred-zoneTarget RejectNegative InverseMask(NO_RED_ZONE, RED_ZONE) SaveUse red-zone in the x86-64 code.
mred-zoneUrlSuffix(gcc/x86-Options.html#index-mred-zone)
mregparm=Target RejectNegative Joined UInteger Var(ix86_regparm)Number of registers used to pass integer arguments.
mregparm=UrlSuffix(gcc/x86-Options.html#index-mregparm)
mrelax-cmpxchg-loopTarget Mask(RELAX_CMPXCHG_LOOP) SaveRelax cmpxchg loop for atomic_fetch_{or,xor,and,nand} by adding load and cmp before cmpxchg, execute pause and loop back to load and compare if load value is not expected.
mrelax-cmpxchg-loopUrlSuffix(gcc/x86-Options.html#index-mrelax-cmpxchg-loop)
mrtdTarget Mask(RTD) SaveAlternate calling convention.
mrtdUrlSuffix(gcc/x86-Options.html#index-mrtd-1)
mrtmTarget Mask(ISA_RTM) Var(ix86_isa_flags) SaveSupport RTM built-in functions and code generation.
mrtmUrlSuffix(gcc/x86-Options.html#index-mrtm)
msahfTarget Mask(ISA_SAHF) Var(ix86_isa_flags) SaveSupport code generation of sahf instruction in 64bit x86-64 code.
msahfUrlSuffix(gcc/x86-Options.html#index-msahf)
mscatterTarget Alias(mtune-ctrl=, use_scatter, ^use_scatter)Enable vectorization for scatter instruction.
mserializeTarget Mask(ISA2_SERIALIZE) Var(ix86_isa_flags2) SaveSupport SERIALIZE built-in functions and code generation.
mserializeUrlSuffix(gcc/x86-Options.html#index-mserialize)
msgxTarget Mask(ISA2_SGX) Var(ix86_isa_flags2) SaveSupport SGX built-in functions and code generation.
msgxUrlSuffix(gcc/x86-Options.html#index-msgx)
mshaTarget Mask(ISA_SHA) Var(ix86_isa_flags) SaveSupport SHA1 and SHA256 built-in functions and code generation.
mshaUrlSuffix(gcc/x86-Options.html#index-msha)
msha512Target Mask(ISA2_SHA512) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX andSHA512 built-in functions and code generation.
msha512UrlSuffix(gcc/x86-Options.html#index-msha512)
mshstkTarget Mask(ISA_SHSTK) Var(ix86_isa_flags) SaveEnable shadow stack built-in functions from Control-flow EnforcementTechnology (CET).
mshstkUrlSuffix(gcc/x86-Options.html#index-mshstk)
mskip-rax-setupTarget Var(flag_skip_rax_setup)Skip setting up RAX register when passing variable arguments.
mskip-rax-setupUrlSuffix(gcc/x86-Options.html#index-mskip-rax-setup)
msm3Target Mask(ISA2_SM3) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX andSM3 built-in functions and code generation.
msm3UrlSuffix(gcc/x86-Options.html#index-msm3)
msm4Target Mask(ISA2_SM4) Var(ix86_isa_flags2) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX andSM4 built-in functions and code generation.
msm4UrlSuffix(gcc/x86-Options.html#index-msm4)
msoft-floatTarget InverseMask(80387) SaveDo not use hardware fp.
msoft-floatUrlSuffix(gcc/x86-Options.html#index-msoft-float-16)
msseTarget Mask(ISA_SSE) Var(ix86_isa_flags) SaveSupport MMX and SSE built-in functions and code generation.
msseUrlSuffix(gcc/x86-Options.html#index-msse)
msse2Target Mask(ISA_SSE2) Var(ix86_isa_flags) SaveSupport MMX, SSE and SSE2 built-in functions and code generation.
msse2UrlSuffix(gcc/x86-Options.html#index-msse2)
msse2avxTarget Var(ix86_sse2avx)Encode SSE instructions with VEX prefix.
msse2avxUrlSuffix(gcc/x86-Options.html#index-msse2avx)
msse3Target Mask(ISA_SSE3) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2 and SSE3 built-in functions and code generation.
msse3UrlSuffix(gcc/x86-Options.html#index-msse3)
msse4Target RejectNegative Mask(ISA_SSE4_2) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation.
msse4UrlSuffix(gcc/x86-Options.html#index-msse4)
msse4.1Target Mask(ISA_SSE4_1) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 built-in functions and code generation.
msse4.1UrlSuffix(gcc/x86-Options.html#index-msse4_002e1)
msse4.2Target Mask(ISA_SSE4_2) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation.
msse4.2UrlSuffix(gcc/x86-Options.html#index-msse4_002e2)
msse4aTarget Mask(ISA_SSE4A) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3 and SSE4A built-in functions and code generation.
msse4aUrlSuffix(gcc/x86-Options.html#index-msse4a)
msse5Target Undocumented Alias(mavx) Warn(%<-msse5%> was removed)
msseregparmTarget RejectNegative Mask(SSEREGPARM) SaveUse SSE register passing conventions for SF and DF mode.
msseregparmUrlSuffix(gcc/x86-Options.html#index-msseregparm)
mssse3Target Mask(ISA_SSSE3) Var(ix86_isa_flags) SaveSupport MMX, SSE, SSE2, SSE3 and SSSE3 built-in functions and code generation.
mssse3UrlSuffix(gcc/x86-Options.html#index-mssse3)
mstack-arg-probeTarget Mask(STACK_PROBE) SaveEnable stack probing.
mstack-protector-guard-offset=Target Save RejectNegative Joined Integer Var(ix86_stack_protector_guard_offset_str)Use the given offset for addressing the stack-protector guard.
mstack-protector-guard-offset=UrlSuffix(gcc/x86-Options.html#index-mstack-protector-guard-offset-4)
mstack-protector-guard-reg=Target Save RejectNegative Joined Var(ix86_stack_protector_guard_reg_str)Use the given base register for addressing the stack-protector guard.
mstack-protector-guard-reg=UrlSuffix(gcc/x86-Options.html#index-mstack-protector-guard-reg-3)
mstack-protector-guard-symbol=Target Save RejectNegative Joined Integer Var(ix86_stack_protector_guard_symbol_str)Use the given symbol for addressing the stack-protector guard.
mstack-protector-guard-symbol=UrlSuffix(gcc/x86-Options.html#index-mstack-protector-guard-symbol)
mstack-protector-guard=Target RejectNegative Joined Enum(stack_protector_guard) Var(ix86_stack_protector_guard) Init(SSP_TLS)Use given stack-protector guard.
mstack-protector-guard=UrlSuffix(gcc/x86-Options.html#index-mstack-protector-guard-4)
mstackrealignTarget Var(ix86_force_align_arg_pointer)Realign stack in prologue.
mstackrealignUrlSuffix(gcc/x86-Options.html#index-mstackrealign)
mstore-max=Target RejectNegative Joined Var(ix86_store_max) Enum(prefer_vector_width) Init(PVW_NONE) SaveMaximum number of bits that can be stored to memory efficiently.
mstore-max=UrlSuffix(gcc/x86-Options.html#index-mstore-max)
mstringop-strategy=Target RejectNegative Joined Enum(stringop_alg) Var(ix86_stringop_alg) Init(no_stringop)Chose strategy to generate stringop using.
mstvTarget Mask(STV) SaveDisable Scalar to Vector optimization pass transforming 64-bit integercomputations into a vector ones.
mtbmTarget Mask(ISA_TBM) Var(ix86_isa_flags) SaveSupport TBM built-in functions and code generation.
mtbmUrlSuffix(gcc/x86-Options.html#index-mtbm)
mtls-dialect=Target RejectNegative Joined Var(ix86_tls_dialect) Enum(tls_dialect) Init(TLS_DIALECT_GNU)Use given thread-local storage dialect.
mtls-dialect=UrlSuffix(gcc/x86-Options.html#index-mtls-dialect-2)
mtls-direct-seg-refsTarget Mask(TLS_DIRECT_SEG_REFS)Use direct references against %gs when accessing tls data.
mtls-direct-seg-refsUrlSuffix(gcc/x86-Options.html#index-mtls-direct-seg-refs)
mtsxldtrkTarget Mask(ISA2_TSXLDTRK) Var(ix86_isa_flags2) SaveSupport TSXLDTRK built-in functions and code generation.
mtsxldtrkUrlSuffix(gcc/x86-Options.html#index-mtsxldtrk)
mtune-ctrl=Target RejectNegative Joined Var(ix86_tune_ctrl_string)Fine grain control of tune features.
mtune=Target RejectNegative Negative(mtune=) Joined Var(ix86_tune_string)Schedule code for given CPU.
mtune=UrlSuffix(gcc/x86-Options.html#index-mtune-17)
muclibcTarget RejectNegative Var(linux_libc,LIBC_UCLIBC) Negative(mmusl)Use uClibc C library.
muclibcUrlSuffix(gcc/GNU_002fLinux-Options.html#index-muclibc)
muintrTarget Mask(ISA2_UINTR) Var(ix86_isa_flags2) SaveSupport UINTR built-in functions and code generation.
muintrUrlSuffix(gcc/x86-Options.html#index-muintr)
munroll-only-small-loopsTarget Var(ix86_unroll_only_small_loops) Init(0) OptimizationEnable conservative small loop unrolling.
munroll-only-small-loopsUrlSuffix(gcc/x86-Options.html#index-munroll-only-small-loops)
musermsrTarget Mask(ISA2_USER_MSR) Var(ix86_isa_flags2) SaveSupport USER_MSR built-in functions and code generation.
musermsrUrlSuffix(gcc/x86-Options.html#index-musermsr)
mvaesTarget Mask(ISA2_VAES) Var(ix86_isa_flags2) SaveSupport VAES built-in functions and code generation.
mvaesUrlSuffix(gcc/x86-Options.html#index-mvaes)
mveclibabi=Target RejectNegative Joined Var(ix86_veclibabi_type) Enum(ix86_veclibabi) Init(ix86_veclibabi_type_none)Vector library ABI to use.
mveclibabi=UrlSuffix(gcc/x86-Options.html#index-mveclibabi-1)
mvect8-ret-in-memTarget Mask(VECT8_RETURNS) SaveReturn 8-byte vectors in memory.
mvect8-ret-in-memUrlSuffix(gcc/x86-Options.html#index-mvect8-ret-in-mem)
mvpclmulqdqTarget Mask(ISA_VPCLMULQDQ) Var(ix86_isa_flags) SaveSupport VPCLMULQDQ built-in functions and code generation.
mvpclmulqdqUrlSuffix(gcc/x86-Options.html#index-mvpclmulqdq)
mvzeroupperTarget Mask(VZEROUPPER) SaveGenerate vzeroupper instruction before a transfer of control flow out ofthe function.
mvzeroupperUrlSuffix(gcc/x86-Options.html#index-mvzeroupper)
mwaitpkgTarget Mask(ISA2_WAITPKG) Var(ix86_isa_flags2) SaveSupport WAITPKG built-in functions and code generation.
mwaitpkgUrlSuffix(gcc/x86-Options.html#index-mwaitpkg)
mwbnoinvdTarget Mask(ISA2_WBNOINVD) Var(ix86_isa_flags2) SaveSupport WBNOINVD built-in functions and code generation.
mwbnoinvdUrlSuffix(gcc/x86-Options.html#index-mwbnoinvd)
mwideklTarget Mask(ISA2_WIDEKL) Var(ix86_isa_flags2) SaveSupport WIDEKL built-in functions and code generation.
mwideklUrlSuffix(gcc/x86-Options.html#index-mwidekl)
mx32Target RejectNegative Negative(m16) Mask(ABI_X32) Var(ix86_isa_flags) SaveGenerate 32bit x86-64 code.
mx32UrlSuffix(gcc/x86-Options.html#index-mx32)
mxopTarget Mask(ISA_XOP) Var(ix86_isa_flags) SaveSupport XOP built-in functions and code generation.
mxopUrlSuffix(gcc/x86-Options.html#index-mxop)
mxsaveTarget Mask(ISA_XSAVE) Var(ix86_isa_flags) SaveSupport XSAVE and XRSTOR instructions.
mxsaveUrlSuffix(gcc/x86-Options.html#index-mxsave)
mxsavecTarget Mask(ISA_XSAVEC) Var(ix86_isa_flags) SaveSupport XSAVEC instructions.
mxsavecUrlSuffix(gcc/x86-Options.html#index-mxsavec)
mxsaveoptTarget Mask(ISA_XSAVEOPT) Var(ix86_isa_flags) SaveSupport XSAVEOPT instruction.
mxsaveoptUrlSuffix(gcc/x86-Options.html#index-mxsaveopt)
mxsavesTarget Mask(ISA_XSAVES) Var(ix86_isa_flags) SaveSupport XSAVES and XRSTORS instructions.
mxsavesUrlSuffix(gcc/x86-Options.html#index-mxsaves)
nDriver
name-sortLTODump Var(flag_lto_name_sort)Sort the symbols alphabetically.
no-canonical-prefixesDriver
no-canonical-prefixesUrlSuffix(gcc/Directory-Options.html#index-no-canonical-prefixes)
no-integrated-cppDriver
no-integrated-cppUrlSuffix(gcc/Preprocessor-Options.html#index-no-integrated-cpp)
no-pieDriver RejectNegative Negative(shared)Don't create a dynamically linked position independent executable.
no-pieUrlSuffix(gcc/Link-Options.html#index-no-pie)
nocppFortran Negative(cpp)Disable preprocessing.
nodefaultlibsDriver
nodefaultlibsUrlSuffix(gcc/Link-Options.html#index-nodefaultlibs)
nolibcDriver
nolibcUrlSuffix(gcc/Link-Options.html#index-nolibc)
nophoboslibDriverDo not link the standard D library in the compilation.
nophoboslibLangUrlSuffix_D(gdc/Linking.html#index-nophoboslib)
nostartfilesDriver
nostartfilesUrlSuffix(gcc/Link-Options.html#index-nostartfiles)
nostdincAda AdaWhy AdaSCIL RejectNegative
nostdincC ObjC C++ ObjC++Do not search standard system include directories (those specified with -isystem will still be used).
nostdincD
nostdincFortran
nostdincUrlSuffix(gcc/Directory-Options.html#index-nostdinc) LangUrlSuffix_D(gdc/Directory-Options.html#index-nostdinc) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-nostdinc)
nostdincUrlSuffix(gcc/Directory-Options.html#index-nostdinc) LangUrlSuffix_D(gdc/Directory-Options.html#index-nostdinc) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-nostdinc)
nostdincUrlSuffix(gcc/Directory-Options.html#index-nostdinc) LangUrlSuffix_D(gdc/Directory-Options.html#index-nostdinc) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-nostdinc)
nostdincUrlSuffix(gcc/Directory-Options.html#index-nostdinc) LangUrlSuffix_D(gdc/Directory-Options.html#index-nostdinc) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-nostdinc)
nostdinc++C++ ObjC++Do not search standard system include directories for C++.
nostdlibAda AdaWhy AdaSCILDo not look for object files in standard path.
nostdlibDriver
nostdlibUrlSuffix(gcc/Link-Options.html#index-nostdlib)
nostdlibUrlSuffix(gcc/Link-Options.html#index-nostdlib)
nostdlib++Driver
nostdlib++UrlSuffix(gcc/Link-Options.html#index-nostdlib_002b_002b)
oC ObjC C++ ObjC++ Joined Separate
oCommon Driver Joined Separate Var(asm_file_name) MissingArgError(missing filename after %qs)-o <file>	Place output into <file>.
oFortran Joined Separate
oGo Joined Separate
oRust Joined Separate
oUrlSuffix(gcc/Overall-Options.html#index-o)
oUrlSuffix(gcc/Overall-Options.html#index-o)
oUrlSuffix(gcc/Overall-Options.html#index-o)
oUrlSuffix(gcc/Overall-Options.html#index-o)
oUrlSuffix(gcc/Overall-Options.html#index-o)
objectsLTODump Var(flag_lto_dump_objects)Dump the details of LTO objects.
pCommon Var(profile_flag)Enable function profiling.
pUrlSuffix(gcc/Instrumentation-Options.html#index-p)
pass-exit-codesDriver Var(pass_exit_codes)
pass-exit-codesUrlSuffix(gcc/Overall-Options.html#index-pass-exit-codes)
pedanticC ObjC C++ ObjC++ Alias(Wpedantic)
pedanticCommon Alias(Wpedantic)
pedanticLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-pedantic)
pedanticLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-pedantic)
pedantic-errorsCommon Var(flag_pedantic_errors)Like -pedantic but issue them as errors.
pedantic-errorsLangUrlSuffix_Fortran(gfortran/Error-and-Warning-Options.html#index-pedantic-errors)
pgDriver
pgUrlSuffix(gcc/Instrumentation-Options.html#index-pg)
pieDriver RejectNegative Negative(no-pie)Create a dynamically linked position independent executable.
pieUrlSuffix(gcc/Link-Options.html#index-pie)
pipeDriver Var(use_pipes)
pipeUrlSuffix(gcc/Overall-Options.html#index-pipe)
posixDriver
print-file-name=Driver JoinedOrMissing Var(print_file_name)
print-file-name=UrlSuffix(gcc/Developer-Options.html#index-print-file-name)
print-libgcc-file-nameDriver
print-libgcc-file-nameUrlSuffix(gcc/Developer-Options.html#index-print-libgcc-file-name)
print-multi-directoryDriver Var(print_multi_directory)
print-multi-directoryUrlSuffix(gcc/Developer-Options.html#index-print-multi-directory)
print-multi-libDriver Var(print_multi_lib)
print-multi-libUrlSuffix(gcc/Developer-Options.html#index-print-multi-lib)
print-multi-os-directoryDriver Var(print_multi_os_directory)
print-multi-os-directoryUrlSuffix(gcc/Developer-Options.html#index-print-multi-os-directory)
print-multiarchDriver Var(print_multiarch)
print-multiarchUrlSuffix(gcc/Developer-Options.html#index-print-multiarch)
print-objc-runtime-infoObjC ObjC++Generate C header of platform-specific features.
print-objc-runtime-infoUrlSuffix(gcc/Objective-C-and-Objective-C_002b_002b-Dialect-Options.html#index-print-objc-runtime-info)
print-prog-name=Driver JoinedOrMissing Var(print_prog_name)
print-prog-name=UrlSuffix(gcc/Developer-Options.html#index-print-prog-name)
print-search-dirsDriver Var(print_search_dirs)
print-search-dirsUrlSuffix(gcc/Developer-Options.html#index-print-search-dirs)
print-sysrootDriver Var(print_sysroot)
print-sysrootUrlSuffix(gcc/Developer-Options.html#index-print-sysroot)
print-sysroot-headers-suffixDriver Var(print_sysroot_headers_suffix)
print-sysroot-headers-suffixUrlSuffix(gcc/Developer-Options.html#index-print-sysroot-headers-suffix)
print-valueLTODump Var(flag_lto_print_value)Print the initial values of the variables.
profileDriver
pthreadDriver
quietCommon Var(quiet_flag) RejectDriverDo not display functions compiled or elapsed time.
rDriver
rUrlSuffix(gcc/Link-Options.html#index-r)
rdynamicDriver
rdynamicUrlSuffix(gcc/Link-Options.html#index-rdynamic)
remapC ObjC C++ ObjC++Remap file names when including files.
remapUrlSuffix(gcc/Preprocessor-Options.html#index-remap)
reverse-sortLTODump Var(flag_lto_reverse_sort)Display the symbols in reverse order.
sDriver
sUrlSuffix(gcc/Link-Options.html#index-s)
save-tempsDriver
save-tempsModula-2save temporary preprocessed files
save-tempsUrlSuffix(gcc/Developer-Options.html#index-save-temps)
save-tempsUrlSuffix(gcc/Developer-Options.html#index-save-temps)
save-temps=Driver Joined
save-temps=Modula-2 Joinedsave temporary preprocessed files
save-temps=UrlSuffix(gcc/Developer-Options.html#index-save-temps)
save-temps=UrlSuffix(gcc/Developer-Options.html#index-save-temps)
sharedDriver RejectNegative Negative(static-pie)Create a shared library.
sharedUrlSuffix(gcc/Link-Options.html#index-shared)
shared-libgccDriver
shared-libgccUrlSuffix(gcc/Link-Options.html#index-shared-libgcc)
shared-libphobosDriverLink the standard D library dynamically in the compilation.
shared-libphobosLangUrlSuffix_D(gdc/Linking.html#index-shared-libphobos)
size-sortLTODump Var(flag_lto_size_sort)Sort the symbols according to size.
specsDriver Separate Alias(specs=)
specsUrlSuffix(gcc/Overall-Options.html#index-specs)
specs=Driver Joined
specs=UrlSuffix(gcc/Overall-Options.html#index-specs)
staticDriver
static-libasanDriver
static-libasanUrlSuffix(gcc/Link-Options.html#index-static-libasan)
static-libgccDriver
static-libgccUrlSuffix(gcc/Link-Options.html#index-static-libgcc)
static-libgfortranDriver
static-libgfortranDriverStatically link the GNU Fortran helper library (libgfortran).
static-libgfortranLangUrlSuffix_Fortran(gfortran/Link-Options.html#index-static-libgfortran)
static-libgfortranLangUrlSuffix_Fortran(gfortran/Link-Options.html#index-static-libgfortran)
static-libgm2Driver
static-libgm2DriverLink the standard Modula-2 libraries statically in the compilation.
static-libgoDriver
static-libhwasanDriver
static-liblsanDriver
static-liblsanUrlSuffix(gcc/Link-Options.html#index-static-liblsan)
static-libmpxDriver WarnRemovedRemoved in GCC 9.  This switch has no effect.
static-libmpxwrappersDriver WarnRemovedRemoved in GCC 9.  This switch has no effect.
static-libphobosDriver
static-libphobosDriverLink the standard D library statically in the compilation.
static-libphobosLangUrlSuffix_D(gdc/Linking.html#index-static-libphobos)
static-libphobosLangUrlSuffix_D(gdc/Linking.html#index-static-libphobos)
static-libquadmathDriver
static-libquadmathDriverStatically link the GCC Quad-Precision Math Library (libquadmath).
static-libquadmathLangUrlSuffix_Fortran(gfortran/Link-Options.html#index-static-libquadmath)
static-libquadmathLangUrlSuffix_Fortran(gfortran/Link-Options.html#index-static-libquadmath)
static-libstdc++Driver
static-libstdc++UrlSuffix(gcc/Link-Options.html#index-static-libstdc_002b_002b)
static-libtsanDriver
static-libtsanUrlSuffix(gcc/Link-Options.html#index-static-libtsan)
static-libubsanDriver
static-libubsanUrlSuffix(gcc/Link-Options.html#index-static-libubsan)
static-pieDriver RejectNegative Negative(pie)Create a static position independent executable.
static-pieUrlSuffix(gcc/Link-Options.html#index-static-pie)
std=c++03C++ ObjC++ Alias(std=c++98)Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum.
std=c++0xC++ ObjC++ Alias(std=c++11) UndocumentedDeprecated in favor of -std=c++11.
std=c++11C++ ObjC++Conform to the ISO 2011 C++ standard.
std=c++14C++ ObjC++Conform to the ISO 2014 C++ standard.
std=c++17C++ ObjC++Conform to the ISO 2017 C++ standard.
std=c++1yC++ ObjC++ Alias(std=c++14) UndocumentedDeprecated in favor of -std=c++14.
std=c++1zC++ ObjC++ Alias(std=c++17) UndocumentedDeprecated in favor of -std=c++17.
std=c++20C++ ObjC++Conform to the ISO 2020 C++ standard (experimental and incomplete support).
std=c++23C++ ObjC++Conform to the ISO 2023 C++ standard (published in 2024; experimental and incomplete support).
std=c++26C++ ObjC++ UndocumentedConform to the ISO 2026 C++ draft standard (experimental and incomplete support).
std=c++2aC++ ObjC++ Alias(std=c++20) UndocumentedConform to the ISO 2020 C++ standard (experimental and incomplete support).
std=c++2bC++ ObjC++ Alias(std=c++23) UndocumentedConform to the ISO 2023 C++ standard (published in 2024; experimental and incomplete support).
std=c++2cC++ ObjC++ Alias(std=c++26)Conform to the ISO 2026 C++ draft standard (experimental and incomplete support).
std=c++98C++ ObjC++Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum.
std=c11C ObjCConform to the ISO 2011 C standard.
std=c17C ObjCConform to the ISO 2017 C standard (published in 2018).
std=c18C ObjC Alias(std=c17)Conform to the ISO 2017 C standard (published in 2018).
std=c1xC ObjC Alias(std=c11)Deprecated in favor of -std=c11.
std=c23C ObjCConform to the ISO 2023 C standard (published in 2024).
std=c2xC ObjC Alias(std=c23)Deprecated in favor of -std=c23.
std=c2yC ObjCConform to the ISO 202Y C standard draft (experimental and incomplete support).
std=c89C ObjC Alias(std=c90)Conform to the ISO 1990 C standard.
std=c90C ObjCConform to the ISO 1990 C standard.
std=c99C ObjCConform to the ISO 1999 C standard.
std=c9xC ObjC Alias(std=c99)Deprecated in favor of -std=c99.
std=f2003FortranConform to the ISO Fortran 2003 standard.
std=f2008FortranConform to the ISO Fortran 2008 standard.
std=f2008tsFortranConform to the ISO Fortran 2008 standard including TS 29113.
std=f2018FortranConform to the ISO Fortran 2018 standard.
std=f2023FortranConform to the ISO Fortran 2023 standard.
std=f202yFortranEnable experimental Fortran 202y features.
std=f95FortranConform to the ISO Fortran 95 standard.
std=gnuFortranConform to nothing in particular.
std=gnu++03C++ ObjC++ Alias(std=gnu++98)Conform to the ISO 1998 C++ standard revised by the 2003 technicalcorrigendum with GNU extensions.
std=gnu++0xC++ ObjC++ Alias(std=gnu++11) UndocumentedDeprecated in favor of -std=gnu++11.
std=gnu++11C++ ObjC++Conform to the ISO 2011 C++ standard with GNU extensions.
std=gnu++14C++ ObjC++Conform to the ISO 2014 C++ standard with GNU extensions.
std=gnu++17C++ ObjC++Conform to the ISO 2017 C++ standard with GNU extensions.
std=gnu++1yC++ ObjC++ Alias(std=gnu++14) UndocumentedDeprecated in favor of -std=gnu++14.
std=gnu++1zC++ ObjC++ Alias(std=gnu++17) UndocumentedDeprecated in favor of -std=gnu++17.
std=gnu++20C++ ObjC++Conform to the ISO 2020 C++ standard with GNU extensions (experimental and incomplete support).
std=gnu++23C++ ObjC++Conform to the ISO 2023 C++ standard with GNU extensions (published in 2024; experimental and incomplete support).
std=gnu++26C++ ObjC++ UndocumentedConform to the ISO 2026 C++ draft standard with GNU extensions (experimental and incomplete support).
std=gnu++2aC++ ObjC++ Alias(std=gnu++20) UndocumentedConform to the ISO 2020 C++ standard with GNU extensions (experimental and incomplete support).
std=gnu++2bC++ ObjC++ Alias(std=gnu++23) UndocumentedConform to the ISO 2023 C++ standard with GNU extensions (published in 2024; experimental and incomplete support).
std=gnu++2cC++ ObjC++ Alias(std=gnu++26)Conform to the ISO 2026 C++ draft standard with GNU extensions (experimental and incomplete support).
std=gnu++98C++ ObjC++Conform to the ISO 1998 C++ standard revised by the 2003 technicalcorrigendum with GNU extensions.
std=gnu11C ObjCConform to the ISO 2011 C standard with GNU extensions.
std=gnu17C ObjCConform to the ISO 2017 C standard (published in 2018) with GNU extensions.
std=gnu18C ObjC Alias(std=gnu17)Conform to the ISO 2017 C standard (published in 2018) with GNU extensions.
std=gnu1xC ObjC Alias(std=gnu11)Deprecated in favor of -std=gnu11.
std=gnu23C ObjCConform to the ISO 2023 C standard (published in 2024) with GNU extensions.
std=gnu2xC ObjC Alias(std=gnu23)Deprecated in favor of -std=gnu23.
std=gnu2yC ObjCConform to the ISO 202Y C standard draft with GNU extensions (experimental and incomplete support).
std=gnu89C ObjC Alias(std=gnu90)Conform to the ISO 1990 C standard with GNU extensions.
std=gnu90C ObjCConform to the ISO 1990 C standard with GNU extensions.
std=gnu99C ObjCConform to the ISO 1999 C standard with GNU extensions.
std=gnu9xC ObjC Alias(std=gnu99)Deprecated in favor of -std=gnu99.
std=iso9899:1990C ObjC Alias(std=c90)Conform to the ISO 1990 C standard.
std=iso9899:199409C ObjCConform to the ISO 1990 C standard as amended in 1994.
std=iso9899:1999C ObjC Alias(std=c99)Conform to the ISO 1999 C standard.
std=iso9899:199xC ObjC Alias(std=c99)Deprecated in favor of -std=iso9899:1999.
std=iso9899:2011C ObjC Alias(std=c11)Conform to the ISO 2011 C standard.
std=iso9899:2017C ObjC Alias(std=c17)Conform to the ISO 2017 C standard (published in 2018).
std=iso9899:2018C ObjC Alias(std=c17)Conform to the ISO 2017 C standard (published in 2018).
std=iso9899:2024C ObjC Alias(std=c23)Conform to the ISO 2023 C standard (published in 2024).
std=legacyFortranAccept extensions to support legacy code.
stdlib=Driver C++ ObjC++ Common Condition(ENABLE_STDLIB_OPTION) Var(flag_stdlib_kind) Joined Enum(stdlib_kind) RejectNegative Init(1)-stdlib=[libstdc++|libc++]	The standard library to be used for C++ headersand runtime.
stdlib=UrlSuffix(gcc/C_002b_002b-Dialect-Options.html#index-stdlib)
symbol=LTODump RejectNegative Joined Var(flag_lto_dump_symbol)
symbolicDriver
symbolicUrlSuffix(gcc/Link-Options.html#index-symbolic)
tDriver
timeDriver Var(report_times)
timeUrlSuffix(gcc/Developer-Options.html#index-time)
time=Driver JoinedOrMissing
time=UrlSuffix(gcc/Developer-Options.html#index-time)
tno-android-ccDriver
tno-android-ccUrlSuffix(gcc/GNU_002fLinux-Options.html#index-tno-android-cc)
tno-android-ldDriver
tno-android-ldUrlSuffix(gcc/GNU_002fLinux-Options.html#index-tno-android-ld)
traditionalDriver
traditional-cppC ObjC C++ ObjC++Enable traditional preprocessing.
traditional-cppModula-2
traditional-cppUrlSuffix(gcc/Preprocessor-Options.html#index-traditional-cpp)
traditional-cppUrlSuffix(gcc/Preprocessor-Options.html#index-traditional-cpp)
tree-statsLTODump Var(flag_lto_tree_stats)Dump the statistics of trees.
trigraphsC ObjC C++ ObjC++-trigraphs	Support ISO C trigraphs.
trigraphsUrlSuffix(gcc/Preprocessor-Options.html#index-trigraphs)
truncateDriver Separate Undocumented MissingArgError(missing filename after %qs)
type-statsLTODump Var(flag_lto_dump_type_stats)Dump the statistics of tree types.
uDriver Joined Separate
uUrlSuffix(gcc/Link-Options.html#index-u)
undefC ObjC C++ ObjC++ Var(flag_undef)Do not predefine system-specific and GCC-specific macros.
undefDriver
undefFortran
undefUrlSuffix(gcc/Preprocessor-Options.html#index-undef) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-undef)
undefUrlSuffix(gcc/Preprocessor-Options.html#index-undef) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-undef)
undefUrlSuffix(gcc/Preprocessor-Options.html#index-undef) LangUrlSuffix_Fortran(gfortran/Preprocessing-Options.html#index-undef)
vC ObjC C++ ObjC++
vCommon Driver Var(verbose_flag)Enable verbose output.
vD
vFortran
vUrlSuffix(gcc/Overall-Options.html#index-v) LangUrlSuffix_D(gdc/Developer-Options.html#index-v)
vUrlSuffix(gcc/Overall-Options.html#index-v) LangUrlSuffix_D(gdc/Developer-Options.html#index-v)
vUrlSuffix(gcc/Overall-Options.html#index-v) LangUrlSuffix_D(gdc/Developer-Options.html#index-v)
vUrlSuffix(gcc/Overall-Options.html#index-v) LangUrlSuffix_D(gdc/Developer-Options.html#index-v)
versionCommon Var(version_flag) RejectDriverDisplay the compiler's version.
versionUrlSuffix(gcc/Overall-Options.html#index-version)
wC ObjC C++ ObjC++
wCommon Var(inhibit_warnings)Suppress warnings.
wUrlSuffix(gcc/Warning-Options.html#index-w)
wUrlSuffix(gcc/Warning-Options.html#index-w)
wrapperDriver Separate Var(wrapper_string)
wrapperUrlSuffix(gcc/Overall-Options.html#index-wrapper)
xDriver Joined Separate
xUrlSuffix(gcc/Overall-Options.html#index-x)
zDriver Joined Separate
zUrlSuffix(gcc/Link-Options.html#index-z)
