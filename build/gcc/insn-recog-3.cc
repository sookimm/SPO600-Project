/* Generated automatically by the program `genrecog' from the target
   machine description file.  */

#define IN_TARGET_CODE 1

#include "config.h"
#include "system.h"
#include "coretypes.h"
#include "backend.h"
#include "predict.h"
#include "rtl.h"
#include "memmodel.h"
#include "tm_p.h"
#include "emit-rtl.h"
#include "insn-config.h"
#include "recog.h"
#include "output.h"
#include "flags.h"
#include "df.h"
#include "resource.h"
#include "diagnostic-core.h"
#include "reload.h"
#include "regs.h"
#include "tm-constrs.h"
#include "insn-recog.h"


/* `recog' contains a decision tree that recognizes whether the rtx
   X0 is a valid instruction.

   recog returns -1 if the rtx is not valid.  If the rtx is valid, recog
   returns a nonnegative number which is the insn code number for the
   pattern that matched.  This is the same as the order in the machine
   description of the entry that matched.  This number can be used as an
   index into `insn_data' and other tables.
   The third parameter to recog is an optional pointer to an int.  If
   present, recog will accept a pattern if it matches except for missing
   CLOBBER expressions at the end.  In that case, the value pointed to by
   the optional pointer will be set to the number of CLOBBERs that need
   to be added (it should be initialized to zero by the caller).  If it   is set nonzero, the caller should allocate a PARALLEL of the
   appropriate size, copy the initial entries, and call add_clobbers
   (found in insn-emit.cc) to fill in the CLOBBERs.

   The function split_insns returns 0 if the rtl could not
   be split or the split rtl as an INSN list if it can be.

   The function peephole2_insns returns 0 if the rtl could not
   be matched. If there was a match, the new rtl is returned in an INSN list,
   and LAST_INSN will point to the last recognized insn in the old sequence.
*/




int
pattern2 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  switch (GET_MODE (operands[0]))
    {
    case E_QImode:
      if (!nonimmediate_operand (operands[0], E_QImode)
          || GET_MODE (x1) != E_QImode
          || !nonimmediate_operand (operands[1], E_QImode))
        return -1;
      return 0;

    case E_HImode:
      if (!nonimmediate_operand (operands[0], E_HImode)
          || GET_MODE (x1) != E_HImode
          || !nonimmediate_operand (operands[1], E_HImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern15 (rtx x1, int *pnum_clobbers)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (pnum_clobbers == NULL)
    return -1;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x3, 1);
  operands[2] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      return pattern14 (x3, 
E_SImode); /* [-1, 0] */

    case E_DImode:
      if (pattern14 (x3, 
E_DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern24 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case VEC_SELECT:
      x5 = XEXP (x4, 1);
      if (GET_CODE (x5) != PARALLEL
          || XVECLEN (x5, 0) != 1)
        return -1;
      x6 = XVECEXP (x5, 0, 0);
      if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x7 = XEXP (x4, 0);
      operands[1] = x7;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          return pattern22 (x3, 
E_SImode); /* [-1, 2] */

        case E_DImode:
          res = pattern22 (x3, 
E_DImode);
          if (res >= 0)
            return res + 3; /* [3, 5] */
          return -1;

        default:
          return -1;
        }

    case SUBREG:
    case MEM:
      operands[1] = x4;
      if (!memory_operand (operands[1], E_HFmode))
        return -1;
      res = pattern23 (x3);
      if (res >= 0)
        return res + 6; /* [6, 7] */
      return -1;

    default:
      return -1;
    }
}

int
pattern37 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  operands[3] = x2;
  if (!const_int_operand (operands[3], E_QImode))
    return -1;
  x3 = XEXP (x1, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
      operands[2] = x3;
      if (!register_operand (operands[2], i1))
        return -1;
      return 0;

    case SIGN_EXTEND:
      if (GET_MODE (x3) != i1)
        return -1;
      x4 = XEXP (x3, 0);
      operands[2] = x4;
      if (!nonimmediate_operand (operands[2], i2))
        return -1;
      return 1;

    case ZERO_EXTEND:
      if (GET_MODE (x3) != i1)
        return -1;
      x4 = XEXP (x3, 0);
      operands[2] = x4;
      if (!nonimmediate_operand (operands[2], i2))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern40 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x1, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[0] = x4;
      return 0;

    case STRICT_LOW_PART:
      x5 = XEXP (x4, 0);
      operands[0] = x5;
      res = pattern39 (x2);
      if (res >= 0)
        return res + 1; /* [1, 2] */
      return -1;

    default:
      return -1;
    }
}

int
pattern45 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[1] = x2;
  x3 = XEXP (x1, 1);
  operands[2] = x3;
  switch (GET_MODE (operands[0]))
    {
    case E_V8QImode:
      return pattern8 (x1, 
E_V8QImode); /* [-1, 0] */

    case E_V4HImode:
      if (pattern8 (x1, 
E_V4HImode) != 0)
        return -1;
      return 1;

    case E_V4QImode:
      if (pattern7 (x1, 
E_V4QImode) != 0)
        return -1;
      return 2;

    case E_V2QImode:
      if (pattern7 (x1, 
E_V2QImode) != 0)
        return -1;
      return 3;

    case E_V2HImode:
      if (pattern7 (x1, 
E_V2HImode) != 0)
        return -1;
      return 4;

    default:
      return -1;
    }
}

int
pattern54 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  if (GET_MODE (x2) != E_V4HImode)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != VEC_SELECT
      || GET_MODE (x3) != E_V4HImode)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_CODE (x4) != VEC_CONCAT
      || GET_MODE (x4) != E_V8HImode)
    return -1;
  x5 = XEXP (x3, 1);
  if (GET_CODE (x5) != PARALLEL
      || XVECLEN (x5, 0) != 4)
    return -1;
  x6 = XVECEXP (x5, 0, 0);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x7 = XVECEXP (x5, 0, 1);
  if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 2])
    return -1;
  x8 = XVECEXP (x5, 0, 2);
  if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 4])
    return -1;
  x9 = XVECEXP (x5, 0, 3);
  if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 6])
    return -1;
  x10 = XEXP (x2, 1);
  if (GET_CODE (x10) != VEC_SELECT
      || GET_MODE (x10) != E_V4HImode)
    return -1;
  x11 = XEXP (x10, 0);
  if (GET_CODE (x11) != VEC_CONCAT
      || GET_MODE (x11) != E_V8HImode)
    return -1;
  x12 = XEXP (x10, 1);
  if (GET_CODE (x12) != PARALLEL
      || XVECLEN (x12, 0) != 4)
    return -1;
  x13 = XVECEXP (x12, 0, 0);
  if (x13 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
    return -1;
  x14 = XVECEXP (x12, 0, 1);
  if (x14 != const_int_rtx[MAX_SAVED_CONST_INT + 3])
    return -1;
  x15 = XVECEXP (x12, 0, 2);
  if (x15 != const_int_rtx[MAX_SAVED_CONST_INT + 5])
    return -1;
  x16 = XVECEXP (x12, 0, 3);
  if (x16 != const_int_rtx[MAX_SAVED_CONST_INT + 7])
    return -1;
  x17 = XEXP (x1, 0);
  operands[0] = x17;
  if (!register_operand (operands[0], E_V4HImode)
      || pattern53 (x2) != 0)
    return -1;
  return 0;
}

int
pattern78 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[1], E_QImode))
    return -1;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  if (!nonimmediate_operand (operands[0], E_QImode))
    return -1;
  x3 = XEXP (x1, 1);
  if (GET_MODE (x3) != E_QImode)
    return -1;
  x4 = XEXP (x3, 1);
  operands[2] = x4;
  if (!general_operand (operands[2], E_QImode))
    return -1;
  return 0;
}

int
pattern83 (rtx x1, machine_mode i1, int i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != UNSPEC
      || XVECLEN (x1, 0) != 2
      || XINT (x1, 1) != i2
      || GET_MODE (x1) != i1)
    return -1;
  return 0;
}

int
pattern88 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !general_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern92 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  if (GET_MODE (x2) != E_BLKmode)
    return -1;
  x3 = XEXP (x1, 0);
  operands[0] = x3;
  if (!memory_operand (operands[0], E_BLKmode))
    return -1;
  x4 = XVECEXP (x2, 0, 0);
  operands[1] = x4;
  if (!register_operand (operands[1], E_SImode))
    return -1;
  x5 = XVECEXP (x2, 0, 1);
  operands[2] = x5;
  if (!register_operand (operands[2], E_SImode))
    return -1;
  return 0;
}

int
pattern100 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x1, 2);
  operands[2] = x4;
  if (!register_operand (operands[2], E_QImode))
    return -1;
  x5 = XEXP (x1, 1);
  if (!rtx_equal_p (x5, operands[0]))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V2QImode:
      return pattern97 (x1, 
E_V2QImode); /* [-1, 0] */

    case E_V4QImode:
      res = pattern98 (x1, 
E_V4QImode);
      if (res >= 0)
        return res + 1; /* [1, 2] */
      return -1;

    case E_V8QImode:
      if (!memory_operand (operands[0], E_V8QImode)
          || GET_MODE (x1) != E_V8QImode
          || GET_MODE (x2) != E_V8QImode)
        return -1;
      res = pattern99 ();
      if (res >= 0)
        return res + 3; /* [3, 5] */
      return -1;

    case E_V4HImode:
      res = pattern98 (x1, 
E_V4HImode);
      if (res >= 0)
        return res + 6; /* [6, 7] */
      return -1;

    case E_V2HImode:
      if (pattern97 (x1, 
E_V2HImode) != 0)
        return -1;
      return 8;

    case E_V2SImode:
      if (pattern97 (x1, 
E_V2SImode) != 0)
        return -1;
      return 9;

    default:
      return -1;
    }
}

int
pattern115 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[1] = x2;
  switch (GET_MODE (operands[0]))
    {
    case E_DImode:
      if (!nonimmediate_operand (operands[0], E_DImode)
          || GET_MODE (x1) != E_DImode
          || !nonimmediate_operand (operands[1], E_DImode))
        return -1;
      return 0;

    case E_SImode:
      if (!nonimmediate_operand (operands[0], E_SImode)
          || GET_MODE (x1) != E_SImode
          || !nonimmediate_operand (operands[1], E_SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern124 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  switch (GET_MODE (x2))
    {
    case E_DFmode:
      if (!nonimmediate_operand (operands[1], E_V2DFmode))
        return -1;
      return 0;

    case E_SFmode:
      if (!nonimmediate_operand (operands[1], E_V4SFmode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern133 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x2, 1);
  operands[2] = x4;
  x5 = XEXP (x1, 2);
  switch (GET_CODE (x5))
    {
    case REG:
    case SUBREG:
      operands[4] = x5;
      x6 = XEXP (x1, 1);
      operands[3] = x6;
      switch (GET_MODE (operands[0]))
        {
        case E_V32HFmode:
          return pattern127 (x1, 
E_V32HFmode, 
E_SImode); /* [-1, 0] */

        case E_V16HFmode:
          if (pattern127 (x1, 
E_V16HFmode, 
E_HImode) != 0)
            return -1;
          return 1;

        case E_V8HFmode:
          if (pattern127 (x1, 
E_V8HFmode, 
E_QImode) != 0)
            return -1;
          return 2;

        case E_V16SFmode:
          if (pattern127 (x1, 
E_V16SFmode, 
E_HImode) != 0)
            return -1;
          return 3;

        case E_V8SFmode:
          if (pattern127 (x1, 
E_V8SFmode, 
E_QImode) != 0)
            return -1;
          return 4;

        case E_V4SFmode:
          if (pattern127 (x1, 
E_V4SFmode, 
E_QImode) != 0)
            return -1;
          return 5;

        case E_V8DFmode:
          if (pattern127 (x1, 
E_V8DFmode, 
E_QImode) != 0)
            return -1;
          return 6;

        case E_V4DFmode:
          if (pattern127 (x1, 
E_V4DFmode, 
E_QImode) != 0)
            return -1;
          return 7;

        case E_V2DFmode:
          if (pattern127 (x1, 
E_V2DFmode, 
E_QImode) != 0)
            return -1;
          return 8;

        case E_V16SImode:
          if (pattern128 (x1, 
E_V16SImode, 
E_HImode) != 0)
            return -1;
          return 9;

        case E_V8SImode:
          if (pattern128 (x1, 
E_V8SImode, 
E_QImode) != 0)
            return -1;
          return 10;

        case E_V4SImode:
          if (pattern129 (x1, 
E_QImode, 
E_V4SImode) != 0)
            return -1;
          return 11;

        case E_V8DImode:
          if (pattern128 (x1, 
E_V8DImode, 
E_QImode) != 0)
            return -1;
          return 12;

        case E_V4DImode:
          if (pattern128 (x1, 
E_V4DImode, 
E_QImode) != 0)
            return -1;
          return 13;

        case E_V2DImode:
          if (pattern128 (x1, 
E_V2DImode, 
E_QImode) != 0)
            return -1;
          return 14;

        case E_V64QImode:
          if (pattern128 (x1, 
E_V64QImode, 
E_DImode) != 0)
            return -1;
          return 15;

        case E_V16QImode:
          if (pattern129 (x1, 
E_HImode, 
E_V16QImode) != 0)
            return -1;
          return 16;

        case E_V32QImode:
          if (pattern128 (x1, 
E_V32QImode, 
E_SImode) != 0)
            return -1;
          return 17;

        case E_V32HImode:
          if (pattern128 (x1, 
E_V32HImode, 
E_SImode) != 0)
            return -1;
          return 18;

        case E_V16HImode:
          if (pattern128 (x1, 
E_V16HImode, 
E_HImode) != 0)
            return -1;
          return 19;

        case E_V8HImode:
          if (pattern128 (x1, 
E_V8HImode, 
E_QImode) != 0)
            return -1;
          return 20;

        case E_V32BFmode:
          if (pattern130 (x1, 
E_V32BFmode, 
E_SImode) != 0)
            return -1;
          return 21;

        case E_V16BFmode:
          if (pattern130 (x1, 
E_V16BFmode, 
E_HImode) != 0)
            return -1;
          return 22;

        case E_V8BFmode:
          if (pattern130 (x1, 
E_V8BFmode, 
E_QImode) != 0)
            return -1;
          return 23;

        default:
          return -1;
        }

    case CONST_INT:
      res = pattern132 (x1);
      if (res >= 0)
        return res + 24; /* [24, 26] */
      return -1;

    default:
      return -1;
    }
}

int
pattern171 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x3, 0, 2);
  operands[3] = x6;
  switch (GET_MODE (operands[0]))
    {
    case E_V8DImode:
      return pattern170 (x3, 
E_V8DImode); /* [-1, 0] */

    case E_V4DImode:
      if (pattern170 (x3, 
E_V4DImode) != 0)
        return -1;
      return 1;

    case E_V2DImode:
      if (pattern170 (x3, 
E_V2DImode) != 0)
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern180 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !bcst_vector_operand (operands[1], i1)
      || !bcst_vector_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern185 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[1], i2)
      || !nonimmediate_operand (operands[2], i2))
    return -1;
  x4 = XEXP (x1, 1);
  if (GET_MODE (x4) != i2)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i1)
    return -1;
  return 0;
}

int
pattern191 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i3)
      || GET_MODE (x1) != i3)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i3)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x4 = XEXP (x1, 1);
  if (GET_MODE (x4) != i3)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i2
      || !nonimmediate_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern195 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 1);
  x5 = XEXP (x4, 0);
  operands[2] = x5;
  if (!register_operand (operands[2], E_QImode))
    return -1;
  x6 = XEXP (x4, 1);
  operands[3] = x6;
  if (!const_int_operand (operands[3], E_QImode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_DImode:
      if (GET_MODE (x3) != E_DImode)
        return -1;
      return 0;

    case E_TImode:
      if (!register_operand (operands[0], E_TImode)
          || GET_MODE (x3) != E_TImode
          || !register_operand (operands[1], E_TImode))
        return -1;
      return 1;

    case E_SImode:
      if (!nonimmediate_operand (operands[0], E_SImode)
          || GET_MODE (x3) != E_SImode
          || !nonimmediate_operand (operands[1], E_SImode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern196 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      if (!nonimmediate_operand (operands[0], E_SImode)
          || GET_MODE (x1) != E_SImode
          || !nonimmediate_operand (operands[1], E_SImode))
        return -1;
      return 0;

    case E_DImode:
      if (!nonimmediate_operand (operands[0], E_DImode)
          || GET_MODE (x1) != E_DImode
          || !nonimmediate_operand (operands[1], E_DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern200 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x2, 1);
  switch (GET_CODE (x4))
    {
    case CONST_INT:
    case CONST_WIDE_INT:
    case CONST_POLY_INT:
    case CONST_FIXED:
    case CONST_DOUBLE:
    case CONST_VECTOR:
    case CONST:
    case REG:
    case SUBREG:
    case LABEL_REF:
    case SYMBOL_REF:
    case HIGH:
      return 0;

    case AND:
      if (GET_MODE (x4) != E_QImode)
        return -1;
      res = pattern195 (x1);
      if (res >= 0)
        return res + 1; /* [1, 3] */
      return -1;

    case PLUS:
      if (GET_MODE (x4) != E_QImode)
        return -1;
      res = pattern197 (x1);
      if (res >= 0)
        return res + 4; /* [4, 5] */
      return -1;

    case MINUS:
      if (GET_MODE (x4) != E_QImode)
        return -1;
      res = pattern198 (x1);
      if (res >= 0)
        return res + 6; /* [6, 7] */
      return -1;

    default:
      return -1;
    }
}

int
pattern209 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !register_operand (operands[1], i1)
      || !general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern212 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  operands[0] = x3;
  x4 = XEXP (x2, 1);
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  x6 = XEXP (x4, 1);
  operands[2] = x6;
  x7 = XVECEXP (x1, 0, 1);
  switch (GET_CODE (x7))
    {
    case CLOBBER:
      x8 = XEXP (x7, 0);
      if (GET_CODE (x8) != REG
          || REGNO (x8) != 17
          || GET_MODE (x8) != E_CCmode)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_DImode:
          return pattern209 (x4, 
E_DImode); /* [-1, 0] */

        case E_TImode:
          if (pattern209 (x4, 
E_TImode) != 0)
            return -1;
          return 1;

        case E_QImode:
          if (pattern209 (x4, 
E_QImode) != 0)
            return -1;
          return 2;

        case E_HImode:
          if (pattern209 (x4, 
E_HImode) != 0)
            return -1;
          return 3;

        case E_SImode:
          if (pattern209 (x4, 
E_SImode) != 0)
            return -1;
          return 4;

        default:
          return -1;
        }

    case UNSPEC:
      if (pattern211 (x1) != 0)
        return -1;
      return 5;

    default:
      return -1;
    }
}

int
pattern229 (rtx x1, machine_mode i1, unsigned int i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != CLOBBER)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != REG
      || REGNO (x2) != i2
      || GET_MODE (x2) != i1)
    return -1;
  return 0;
}

int
pattern235 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!mask_reg_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !mask_reg_operand (operands[1], i1)
      || !mask_reg_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern241 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  if (GET_CODE (x4) != REG
      || REGNO (x4) != 17)
    return -1;
  x5 = XEXP (x3, 1);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x6 = XEXP (x1, 0);
  operands[0] = x6;
  x7 = XEXP (x2, 1);
  switch (GET_CODE (x7))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[2] = x7;
      x8 = XEXP (x2, 2);
      operands[3] = x8;
      return 0;

    case ZERO_EXTEND:
      if (GET_MODE (x7) != E_DImode)
        return -1;
      x8 = XEXP (x2, 2);
      if (GET_CODE (x8) != ZERO_EXTEND
          || GET_MODE (x8) != E_DImode)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern256 (rtx x1, int *pnum_clobbers)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  switch (GET_CODE (x2))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[0] = x2;
      return 0;

    case STRICT_LOW_PART:
      if (pnum_clobbers == NULL)
        return -1;
      x3 = XEXP (x2, 0);
      operands[0] = x3;
      if (!nonmemory_operand (operands[2], E_QImode))
        return -1;
      x4 = XEXP (x1, 1);
      res = pattern39 (x4);
      if (res >= 0)
        return res + 1; /* [1, 2] */
      return -1;

    default:
      return -1;
    }
}

int
pattern263 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_SImode:
      if (!nonimmediate_operand (operands[1], E_SImode))
        return -1;
      return 0;

    case E_DImode:
      if (!nonimmediate_operand (operands[1], E_DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern273 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x2, 1);
  operands[2] = x4;
  x5 = XEXP (x1, 1);
  switch (XVECLEN (x5, 0))
    {
    case 2:
      x6 = XVECEXP (x5, 0, 0);
      if (GET_CODE (x6) != CONST_INT)
        return -1;
      return 0;

    case 8:
      x6 = XVECEXP (x5, 0, 0);
      if (GET_CODE (x6) != CONST_INT)
        return -1;
      x7 = XVECEXP (x5, 0, 1);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x5, 0, 2);
      if (GET_CODE (x8) != CONST_INT)
        return -1;
      x9 = XVECEXP (x5, 0, 3);
      if (GET_CODE (x9) != CONST_INT)
        return -1;
      x10 = XVECEXP (x5, 0, 4);
      if (GET_CODE (x10) != CONST_INT)
        return -1;
      x11 = XVECEXP (x5, 0, 5);
      if (GET_CODE (x11) != CONST_INT)
        return -1;
      x12 = XVECEXP (x5, 0, 6);
      if (GET_CODE (x12) != CONST_INT)
        return -1;
      x13 = XVECEXP (x5, 0, 7);
      if (GET_CODE (x13) != CONST_INT
          || !register_operand (operands[0], E_V8QImode)
          || GET_MODE (x1) != E_V8QImode
          || GET_MODE (x2) != E_V16QImode
          || !register_operand (operands[1], E_V8QImode)
          || !register_mmxmem_operand (operands[2], E_V8QImode))
        return -1;
      switch (XWINT (x6, 0))
        {
        case 4L:
          if (XWINT (x7, 0) != 12L
              || XWINT (x8, 0) != 5L
              || XWINT (x9, 0) != 13L
              || XWINT (x10, 0) != 6L
              || XWINT (x11, 0) != 14L
              || XWINT (x12, 0) != 7L
              || XWINT (x13, 0) != 15L)
            return -1;
          return 1;

        case 0L:
          if (XWINT (x7, 0) != 8L
              || XWINT (x8, 0) != 1L
              || XWINT (x9, 0) != 9L
              || XWINT (x10, 0) != 2L
              || XWINT (x11, 0) != 10L
              || XWINT (x12, 0) != 3L
              || XWINT (x13, 0) != 11L)
            return -1;
          return 2;

        default:
          return -1;
        }

    case 4:
      x6 = XVECEXP (x5, 0, 0);
      if (GET_CODE (x6) != CONST_INT)
        return -1;
      x7 = XVECEXP (x5, 0, 1);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x5, 0, 2);
      if (GET_CODE (x8) != CONST_INT)
        return -1;
      x9 = XVECEXP (x5, 0, 3);
      if (GET_CODE (x9) != CONST_INT)
        return -1;
      switch (XWINT (x6, 0))
        {
        case 2L:
          if (XWINT (x7, 0) != 6L
              || XWINT (x8, 0) != 3L
              || XWINT (x9, 0) != 7L)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V4QImode:
              if (pattern271 (x1, 
E_V4QImode, 
E_V8QImode) != 0)
                return -1;
              return 3;

            case E_V4HImode:
              if (pattern272 (x1, 
E_V4HImode, 
E_V8HImode) != 0)
                return -1;
              return 4;

            default:
              return -1;
            }

        case 0L:
          if (XWINT (x7, 0) != 4L
              || XWINT (x8, 0) != 1L
              || XWINT (x9, 0) != 5L)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V4QImode:
              if (pattern271 (x1, 
E_V4QImode, 
E_V8QImode) != 0)
                return -1;
              return 5;

            case E_V4HImode:
              if (pattern272 (x1, 
E_V4HImode, 
E_V8HImode) != 0)
                return -1;
              return 6;

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern324 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  operands[1] = x2;
  switch (GET_MODE (operands[0]))
    {
    case E_V16SImode:
      if (!register_operand (operands[0], E_V16SImode)
          || GET_MODE (x1) != E_V16SImode
          || !vector_operand (operands[1], E_V16SFmode))
        return -1;
      return 0;

    case E_V8SImode:
      if (!register_operand (operands[0], E_V8SImode)
          || GET_MODE (x1) != E_V8SImode
          || !vector_operand (operands[1], E_V8SFmode))
        return -1;
      return 1;

    case E_V4SImode:
      if (!register_operand (operands[0], E_V4SImode)
          || GET_MODE (x1) != E_V4SImode
          || !vector_operand (operands[1], E_V4SFmode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern327 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != VEC_SELECT)
    return -1;
  x4 = XEXP (x3, 1);
  if (GET_CODE (x4) != PARALLEL)
    return -1;
  x5 = XEXP (x1, 1);
  if (GET_CODE (x5) != SIGN_EXTEND)
    return -1;
  x6 = XEXP (x5, 0);
  if (GET_CODE (x6) != VEC_SELECT)
    return -1;
  x7 = XEXP (x6, 1);
  if (GET_CODE (x7) != PARALLEL)
    return -1;
  x8 = XEXP (x3, 0);
  operands[1] = x8;
  x9 = XEXP (x6, 0);
  operands[2] = x9;
  return 0;
}

int
pattern332 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !nonimmediate_operand (operands[1], i3))
    return -1;
  x5 = XEXP (x2, 1);
  if (GET_MODE (x5) != i2)
    return -1;
  x6 = XEXP (x5, 0);
  if (GET_MODE (x6) != i1)
    return -1;
  x7 = XEXP (x1, 1);
  return pattern331 (x7, 
i1, 
i2); /* [-1, 0] */
}

int
pattern336 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1)
      || !const1_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern339 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != CLOBBER)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCmode)
    return -1;
  x4 = XVECEXP (x1, 0, 0);
  x5 = XEXP (x4, 0);
  operands[0] = x5;
  x6 = XEXP (x4, 1);
  x7 = XEXP (x6, 0);
  x8 = XEXP (x7, 0);
  operands[1] = x8;
  x9 = XEXP (x7, 1);
  operands[2] = x9;
  return 0;
}

int
pattern343 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  x4 = XEXP (x2, 1);
  operands[2] = x4;
  return pattern342 (x1); /* [-1, 5] */
}

int
pattern345 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != CLOBBER)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCmode)
    return -1;
  x4 = XVECEXP (x1, 0, 0);
  x5 = XEXP (x4, 0);
  operands[0] = x5;
  x6 = XEXP (x4, 1);
  x7 = XEXP (x6, 0);
  x8 = XEXP (x7, 0);
  operands[1] = x8;
  return 0;
}

int
pattern351 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != CLOBBER)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != REG
      || REGNO (x2) != 17
      || GET_MODE (x2) != E_CCmode)
    return -1;
  return 0;
}

int
pattern353 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i2
      || !nonimmediate_operand (operands[2], i1))
    return -1;
  x5 = XEXP (x2, 1);
  if (GET_MODE (x5) != i2
      || !nonimmediate_operand (operands[4], i1))
    return -1;
  x6 = XEXP (x1, 1);
  if (GET_MODE (x6) != i2
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern357 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !general_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern362 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  x6 = XVECEXP (x5, 0, 0);
  operands[0] = x6;
  x7 = XVECEXP (x5, 0, 1);
  operands[2] = x7;
  if (!const_int_operand (operands[2], E_SImode))
    return -1;
  x8 = XEXP (x4, 1);
  operands[1] = x8;
  x9 = XVECEXP (x1, 0, 1);
  x10 = XEXP (x9, 1);
  x11 = XEXP (x10, 0);
  if (!rtx_equal_p (x11, operands[0]))
    return -1;
  x12 = XEXP (x10, 1);
  if (!rtx_equal_p (x12, operands[1]))
    return -1;
  x13 = XEXP (x9, 0);
  if (!rtx_equal_p (x13, operands[0]))
    return -1;
  switch (GET_MODE (x4))
    {
    case E_QImode:
      return pattern361 (x1, 
E_QImode); /* [-1, 0] */

    case E_HImode:
      if (pattern361 (x1, 
E_HImode) != 0)
        return -1;
      return 1;

    case E_SImode:
      if (pattern361 (x1, 
E_SImode) != 0)
        return -1;
      return 2;

    case E_DImode:
      if (pattern361 (x1, 
E_DImode) != 0)
        return -1;
      return 3;

    default:
      return -1;
    }
}

int
pattern375 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x2, 0);
  switch (GET_CODE (x5))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[0] = x5;
      x6 = XVECEXP (x1, 0, 1);
      switch (GET_CODE (x6))
        {
        case CLOBBER:
          return 0;

        case USE:
          return 1;

        default:
          return -1;
        }

    case STRICT_LOW_PART:
      x6 = XVECEXP (x1, 0, 1);
      if (GET_CODE (x6) != CLOBBER)
        return -1;
      x7 = XEXP (x6, 0);
      if (GET_CODE (x7) != REG
          || REGNO (x7) != 17
          || GET_MODE (x7) != E_CCmode)
        return -1;
      x8 = XEXP (x5, 0);
      operands[0] = x8;
      res = pattern374 (x3);
      if (res >= 0)
        return res + 2; /* [2, 3] */
      return -1;

    default:
      return -1;
    }
}

int
pattern392 (rtx x1, rtx_code i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != SET)
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != i1)
    return -1;
  x4 = XVECEXP (x1, 0, 3);
  x5 = XEXP (x4, 0);
  if (GET_CODE (x5) != REG
      || REGNO (x5) != 17
      || GET_MODE (x5) != E_CCmode)
    return -1;
  x6 = XVECEXP (x1, 0, 0);
  x7 = XEXP (x6, 0);
  operands[0] = x7;
  x8 = XEXP (x6, 1);
  x9 = XEXP (x8, 0);
  operands[2] = x9;
  x10 = XEXP (x8, 1);
  operands[3] = x10;
  x11 = XEXP (x2, 0);
  operands[1] = x11;
  x12 = XEXP (x3, 0);
  if (!rtx_equal_p (x12, operands[2]))
    return -1;
  x13 = XEXP (x3, 1);
  if (!rtx_equal_p (x13, operands[3]))
    return -1;
  x14 = XVECEXP (x1, 0, 2);
  switch (GET_CODE (x14))
    {
    case UNSPEC:
      return pattern389 (x1); /* [-1, 1] */

    case USE:
      res = pattern391 (x1);
      if (res >= 0)
        return res + 2; /* [2, 4] */
      return -1;

    default:
      return -1;
    }
}

int
pattern409 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_SFmode:
      if (!memory_operand (operands[1], E_SFmode))
        return -1;
      return 0;

    case E_DFmode:
      if (!memory_operand (operands[1], E_DFmode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern413 (rtx x1, rtx_code i1, int i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != PARALLEL
      || XVECLEN (x1, 0) != i2)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_CODE (x2) != SET)
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != i1)
    return -1;
  return 0;
}

int
pattern417 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1
      || !vector_operand (operands[1], i1)
      || !vector_operand (operands[2], i1)
      || !const0_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern424 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_HImode:
      if (!nonimmediate_operand (operands[1], E_HImode))
        return -1;
      return 0;

    case E_SImode:
      if (!nonimmediate_operand (operands[1], E_SImode))
        return -1;
      return 1;

    case E_DImode:
      if (!nonimmediate_operand (operands[1], E_DImode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern433 (rtx x1, int *pnum_clobbers)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  if (pnum_clobbers == NULL)
    return -1;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 1);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x5 = XEXP (x1, 0);
  operands[0] = x5;
  x6 = XEXP (x3, 0);
  operands[2] = x6;
  if (!int_nonimmediate_operand (operands[2], E_VOIDmode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_QImode:
      return pattern432 (x2, 
E_QImode); /* [-1, 0] */

    case E_HImode:
      if (pattern432 (x2, 
E_HImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern447 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[2] = x4;
  if (!int248_register_operand (operands[2], E_VOIDmode))
    return -1;
  return pattern446 (x1); /* [-1, 1] */
}

int
pattern452 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_SImode)
      || GET_MODE (x1) != E_SImode)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  switch (GET_MODE (x2))
    {
    case E_V32QImode:
      if (!vector_operand (operands[1], E_V32QImode)
          || !vector_operand (operands[2], E_V32QImode)
          || !const0_operand (operands[3], E_V32QImode))
        return -1;
      return 0;

    case E_V32HImode:
      if (!vector_operand (operands[1], E_V32HImode)
          || !vector_operand (operands[2], E_V32HImode)
          || !const0_operand (operands[3], E_V32HImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern462 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2
      || !register_operand (operands[1], i3)
      || !nonimmediate_operand (operands[2], i3)
      || !nonimm_or_0_operand (operands[3], i2)
      || !register_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern468 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2
      || !vector_operand (operands[1], i2)
      || !vector_operand (operands[2], i2)
      || !vector_operand (operands[3], i2)
      || !const0_operand (operands[4], i2))
    return -1;
  x3 = XEXP (x1, 2);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[5], E_QImode))
    return -1;
  return 0;
}

int
pattern476 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !nonimmediate_operand (operands[2], i1)
      || !nonimm_or_0_operand (operands[4], i1)
      || !register_operand (operands[5], i2))
    return -1;
  return 0;
}

int
pattern484 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XVECEXP (x2, 0, 0);
  operands[1] = x3;
  x4 = XVECEXP (x2, 0, 1);
  operands[2] = x4;
  x5 = XVECEXP (x2, 0, 2);
  operands[3] = x5;
  x6 = XEXP (x1, 2);
  operands[4] = x6;
  x7 = XEXP (x1, 1);
  switch (GET_CODE (x7))
    {
    case REG:
    case SUBREG:
      if (!rtx_equal_p (x7, operands[1]))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SImode:
          return pattern478 (x1, 
E_V16SImode, 
E_HImode); /* [-1, 0] */

        case E_V8SImode:
          if (pattern478 (x1, 
E_V8SImode, 
E_QImode) != 0)
            return -1;
          return 1;

        case E_V4SImode:
          if (pattern478 (x1, 
E_V4SImode, 
E_QImode) != 0)
            return -1;
          return 2;

        default:
          return -1;
        }

    case CONST_INT:
    case CONST_DOUBLE:
    case CONST_VECTOR:
      operands[5] = x7;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SImode:
          if (pattern483 (x1, 
E_V16SImode, 
E_HImode) != 0)
            return -1;
          return 3;

        case E_V8SImode:
          if (pattern483 (x1, 
E_V8SImode, 
E_QImode) != 0)
            return -1;
          return 4;

        case E_V4SImode:
          if (pattern483 (x1, 
E_V4SImode, 
E_QImode) != 0)
            return -1;
          return 5;

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern497 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 1);
  x5 = XVECEXP (x4, 0, 0);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x6 = XVECEXP (x4, 0, 1);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V8HFmode:
      if (!register_operand (operands[0], E_V8HFmode)
          || GET_MODE (x1) != E_V8HFmode
          || GET_MODE (x2) != E_V2HFmode)
        return -1;
      x7 = XEXP (x2, 0);
      if (GET_MODE (x7) != E_V2HFmode
          || !vector_operand (operands[1], i1)
          || GET_MODE (x3) != E_V2HFmode
          || !nonimm_or_0_operand (operands[2], E_V8HFmode)
          || !const0_operand (operands[4], E_V6HFmode))
        return -1;
      return 0;

    case E_V4SFmode:
      if (pattern496 (x1, 
E_V2SFmode, 
E_V4SFmode, 
i1) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern506 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x2, 1);
  if (GET_MODE (x4) != i1)
    return -1;
  return 0;
}

int
pattern511 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  switch (GET_MODE (operands[0]))
    {
    case E_V16QImode:
      if (!register_operand (operands[0], E_V16QImode)
          || GET_MODE (x1) != E_V16QImode)
        return -1;
      x2 = XEXP (x1, 0);
      switch (GET_MODE (x2))
        {
        case E_V4QImode:
          return pattern510 (
E_V12QImode); /* [-1, 1] */

        case E_V2QImode:
          if (!register_operand (operands[1], E_V2DImode)
              || !const0_operand (operands[2], E_V14QImode))
            return -1;
          return 2;

        case E_V8QImode:
          if (!const0_operand (operands[2], E_V8QImode))
            return -1;
          switch (GET_MODE (operands[1]))
            {
            case E_V8SImode:
              if (!register_operand (operands[1], E_V8SImode))
                return -1;
              return 3;

            case E_V8HImode:
              if (!register_operand (operands[1], E_V8HImode))
                return -1;
              return 4;

            default:
              return -1;
            }

        default:
          return -1;
        }

    case E_V8HImode:
      if (!register_operand (operands[0], E_V8HImode)
          || GET_MODE (x1) != E_V8HImode)
        return -1;
      x2 = XEXP (x1, 0);
      switch (GET_MODE (x2))
        {
        case E_V4HImode:
          res = pattern510 (
E_V4HImode);
          if (res >= 0)
            return res + 5; /* [5, 6] */
          return -1;

        case E_V2HImode:
          if (!register_operand (operands[1], E_V2DImode)
              || !const0_operand (operands[2], E_V6HImode))
            return -1;
          return 7;

        default:
          return -1;
        }

    case E_V4SImode:
      if (!register_operand (operands[0], E_V4SImode)
          || GET_MODE (x1) != E_V4SImode)
        return -1;
      x2 = XEXP (x1, 0);
      if (GET_MODE (x2) != E_V2SImode
          || !register_operand (operands[1], E_V2DImode)
          || !const0_operand (operands[2], E_V2SImode))
        return -1;
      return 8;

    default:
      return -1;
    }
}

int
pattern534 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x3, 1);
  operands[2] = x5;
  x6 = XEXP (x2, 1);
  operands[3] = x6;
  x7 = XEXP (x1, 1);
  operands[4] = x7;
  switch (GET_MODE (operands[0]))
    {
    case E_V64QImode:
      return pattern533 (x1, 
E_V64QImode); /* [-1, 0] */

    case E_V32QImode:
      if (pattern533 (x1, 
E_V32QImode) != 0)
        return -1;
      return 1;

    case E_V16QImode:
      if (pattern533 (x1, 
E_V16QImode) != 0)
        return -1;
      return 2;

    case E_V32HImode:
      if (pattern533 (x1, 
E_V32HImode) != 0)
        return -1;
      return 3;

    case E_V16HImode:
      if (pattern533 (x1, 
E_V16HImode) != 0)
        return -1;
      return 4;

    case E_V8HImode:
      if (pattern533 (x1, 
E_V8HImode) != 0)
        return -1;
      return 5;

    case E_V16SImode:
      if (pattern533 (x1, 
E_V16SImode) != 0)
        return -1;
      return 6;

    case E_V8SImode:
      if (pattern533 (x1, 
E_V8SImode) != 0)
        return -1;
      return 7;

    case E_V4SImode:
      if (pattern533 (x1, 
E_V4SImode) != 0)
        return -1;
      return 8;

    case E_V8DImode:
      if (pattern533 (x1, 
E_V8DImode) != 0)
        return -1;
      return 9;

    case E_V4DImode:
      if (pattern533 (x1, 
E_V4DImode) != 0)
        return -1;
      return 10;

    case E_V2DImode:
      if (pattern533 (x1, 
E_V2DImode) != 0)
        return -1;
      return 11;

    default:
      return -1;
    }
}

int
pattern543 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XVECEXP (x2, 0, 0);
  operands[2] = x3;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      x4 = XVECEXP (x1, 0, 0);
      x5 = XEXP (x4, 1);
      return pattern542 (x5, 
E_SImode); /* [-1, 0] */

    case E_DImode:
      x4 = XVECEXP (x1, 0, 0);
      x5 = XEXP (x4, 1);
      if (pattern542 (x5, 
E_DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern548 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != CLOBBER)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCmode)
    return -1;
  x4 = XVECEXP (x1, 0, 0);
  x5 = XEXP (x4, 0);
  operands[0] = x5;
  x6 = XEXP (x4, 1);
  x7 = XVECEXP (x6, 0, 0);
  operands[1] = x7;
  if (!register_operand (operands[1], E_XFmode))
    return -1;
  return pattern547 (x6); /* [-1, 2] */
}

int
pattern554 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern556 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != CLOBBER)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCmode)
    return -1;
  x4 = XVECEXP (x1, 0, 0);
  return pattern555 (x4); /* [-1, 1] */
}

int
pattern562 (rtx x1, rtx_code i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 1);
  if (GET_CODE (x4) != i1)
    return -1;
  x5 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x5) != CLOBBER)
    return -1;
  x6 = XEXP (x5, 0);
  if (GET_CODE (x6) != REG
      || REGNO (x6) != 17
      || GET_MODE (x6) != E_CCmode)
    return -1;
  x7 = XEXP (x3, 0);
  x8 = XEXP (x7, 0);
  operands[1] = x8;
  x9 = XEXP (x4, 0);
  operands[2] = x9;
  switch (GET_MODE (operands[0]))
    {
    case E_DImode:
      return pattern561 (x3, 
E_SImode, 
E_DImode); /* [-1, 0] */

    case E_TImode:
      if (pattern561 (x3, 
E_DImode, 
E_TImode) != 0)
        return -1;
      return 1;

    case E_HImode:
      if (pattern561 (x3, 
E_QImode, 
E_HImode) != 0)
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern574 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (GET_MODE (x1) != E_SImode
      || !register_operand (operands[0], E_SImode)
      || !register_operand (operands[1], E_SImode)
      || !register_operand (operands[2], E_SImode))
    return -1;
  return 0;
}

int
pattern579 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  operands[2] = x3;
  if (!register_operand (operands[2], E_QImode))
    return -1;
  x4 = XEXP (x2, 1);
  operands[3] = x4;
  if (!const_int_operand (operands[3], E_QImode))
    return -1;
  return pattern577 (x1); /* [-1, 3] */
}

int
pattern585 (rtx x1, rtx_code i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != SET)
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != i1)
    return -1;
  x4 = XVECEXP (x1, 0, 2);
  x5 = XEXP (x4, 0);
  if (GET_CODE (x5) != REG
      || REGNO (x5) != 17
      || GET_MODE (x5) != E_CCmode)
    return -1;
  return 0;
}

int
pattern589 (rtx x1, rtx_code i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != SET)
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != i1)
    return -1;
  x4 = XVECEXP (x1, 0, 2);
  if (GET_CODE (x4) != UNSPEC
      || XVECLEN (x4, 0) != 1
      || XINT (x4, 1) != 32)
    return -1;
  x5 = XVECEXP (x4, 0, 0);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x6 = XVECEXP (x1, 0, 3);
  x7 = XEXP (x6, 0);
  if (GET_CODE (x7) != REG
      || REGNO (x7) != 17
      || GET_MODE (x7) != E_CCmode)
    return -1;
  x8 = XVECEXP (x1, 0, 0);
  x9 = XEXP (x8, 0);
  operands[0] = x9;
  return pattern588 (x1); /* [-1, 1] */
}

int
pattern595 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != NOT)
    return -1;
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x1, 1);
  operands[2] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_V16SImode:
      return pattern594 (x1, 
E_V16SImode, 
E_SImode); /* [-1, 0] */

    case E_V8DImode:
      if (pattern594 (x1, 
E_V8DImode, 
E_DImode) != 0)
        return -1;
      return 1;

    case E_V64QImode:
      if (pattern594 (x1, 
E_V64QImode, 
E_QImode) != 0)
        return -1;
      return 2;

    case E_V32QImode:
      if (pattern594 (x1, 
E_V32QImode, 
E_QImode) != 0)
        return -1;
      return 3;

    case E_V16QImode:
      if (pattern594 (x1, 
E_V16QImode, 
E_QImode) != 0)
        return -1;
      return 4;

    case E_V32HImode:
      if (pattern594 (x1, 
E_V32HImode, 
E_HImode) != 0)
        return -1;
      return 5;

    case E_V16HImode:
      if (pattern594 (x1, 
E_V16HImode, 
E_HImode) != 0)
        return -1;
      return 6;

    case E_V8HImode:
      if (pattern594 (x1, 
E_V8HImode, 
E_HImode) != 0)
        return -1;
      return 7;

    case E_V8SImode:
      if (pattern594 (x1, 
E_V8SImode, 
E_SImode) != 0)
        return -1;
      return 8;

    case E_V4SImode:
      if (pattern594 (x1, 
E_V4SImode, 
E_SImode) != 0)
        return -1;
      return 9;

    case E_V4DImode:
      if (pattern594 (x1, 
E_V4DImode, 
E_DImode) != 0)
        return -1;
      return 10;

    case E_V2DImode:
      if (pattern594 (x1, 
E_V2DImode, 
E_DImode) != 0)
        return -1;
      return 11;

    default:
      return -1;
    }
}

int
pattern616 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != MULT)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != SIGN_EXTEND)
    return -1;
  x4 = XEXP (x2, 1);
  if (GET_CODE (x4) != SIGN_EXTEND)
    return -1;
  x5 = XEXP (x1, 1);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 14])
    return -1;
  return 0;
}

int
pattern625 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  operands[1] = x3;
  x4 = XEXP (x2, 0);
  if (!rtx_equal_p (x4, operands[0]))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      return pattern624 (x1, 
E_SImode); /* [-1, 0] */

    case E_DImode:
      if (pattern624 (x1, 
E_DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern633 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XVECEXP (x2, 0, 0);
  operands[1] = x3;
  x4 = XEXP (x1, 2);
  operands[3] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_V32HImode:
      return pattern632 (x1, 
E_V32HImode, 
E_SImode, 
i1); /* [-1, 0] */

    case E_V16HImode:
      if (pattern632 (x1, 
E_V16HImode, 
E_HImode, 
i2) != 0)
        return -1;
      return 1;

    case E_V8HImode:
      if (pattern632 (x1, 
E_V8HImode, 
E_QImode, 
i3) != 0)
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern639 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  if (x2 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x3 = XVECEXP (x1, 0, 1);
  if (x3 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
    return -1;
  x4 = XVECEXP (x1, 0, 2);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 2])
    return -1;
  x5 = XVECEXP (x1, 0, 3);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 3])
    return -1;
  return 0;
}

int
pattern642 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V8HFmode:
      if (!vector_operand (operands[1], E_V8HFmode))
        return -1;
      return 0;

    case E_V8DFmode:
      if (!vector_operand (operands[1], E_V8DFmode))
        return -1;
      return 1;

    case E_V8SFmode:
      if (!vector_operand (operands[1], E_V8SFmode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern649 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 2);
  operands[4] = x3;
  x4 = XEXP (x2, 1);
  operands[3] = x4;
  x5 = XVECEXP (x1, 0, 1);
  operands[5] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_V32HFmode:
      return pattern645 (x1, 
E_V32HFmode, 
E_SImode); /* [-1, 0] */

    case E_V16HFmode:
      if (pattern645 (x1, 
E_V16HFmode, 
E_HImode) != 0)
        return -1;
      return 1;

    case E_V16SFmode:
      if (pattern645 (x1, 
E_V16SFmode, 
E_HImode) != 0)
        return -1;
      return 2;

    case E_V8SFmode:
      if (pattern645 (x1, 
E_V8SFmode, 
E_QImode) != 0)
        return -1;
      return 3;

    case E_V8DFmode:
      if (pattern645 (x1, 
E_V8DFmode, 
E_QImode) != 0)
        return -1;
      return 4;

    case E_V4DFmode:
      if (pattern645 (x1, 
E_V4DFmode, 
E_QImode) != 0)
        return -1;
      return 5;

    default:
      return -1;
    }
}

int
pattern661 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !vector_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  x2 = XVECEXP (x1, 0, 2);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[3], i1)
      || !vector_all_ones_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern665 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !vector_operand (operands[1], i1)
      || !vector_operand (operands[2], i1)
      || !vector_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern669 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !register_operand (operands[1], i1)
      || !vector_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern674 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x2 = XEXP (x1, 1);
  x3 = XVECEXP (x2, 0, 0);
  operands[2] = x3;
  return pattern673 (x2); /* [-1, 0] */
}

int
pattern680 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case VEC_CONCAT:
      return pattern678 (x1); /* [-1, 5] */

    case VEC_MERGE:
      if (GET_MODE (x4) != E_V4SImode)
        return -1;
      x5 = XEXP (x4, 0);
      if (GET_CODE (x5) != VEC_DUPLICATE
          || GET_MODE (x5) != E_V4SImode)
        return -1;
      x6 = XEXP (x4, 1);
      if (GET_CODE (x6) != CONST_VECTOR
          || XVECLEN (x6, 0) != 4
          || GET_MODE (x6) != E_V4SImode)
        return -1;
      x7 = XVECEXP (x6, 0, 0);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x8 = XVECEXP (x6, 0, 1);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x9 = XVECEXP (x6, 0, 2);
      if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x10 = XVECEXP (x6, 0, 3);
      if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x11 = XEXP (x4, 2);
      if (x11 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return -1;
      res = pattern679 (x1);
      if (res >= 0)
        return res + 6; /* [6, 8] */
      return -1;

    default:
      return -1;
    }
}

int
pattern694 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != REG
      || REGNO (x1) != 17
      || GET_MODE (x1) != E_CCmode)
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_DImode:
      return 0;

    case E_TImode:
      return 1;

    case E_QImode:
      return 2;

    case E_HImode:
      return 3;

    case E_SImode:
      return 4;

    case E_SFmode:
      return 5;

    case E_DFmode:
      return 6;

    case E_XFmode:
      return 7;

    default:
      return -1;
    }
}

int
pattern704 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (XVECLEN (x2, 0) != 1
      || XINT (x2, 1) != 38)
    return -1;
  return pattern226 (x1); /* [-1, 1] */
}

int
pattern707 (rtx x1, int i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XVECEXP (x3, 0, 0);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x5 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x5) != SET)
    return -1;
  x6 = XEXP (x5, 1);
  if (GET_CODE (x6) != UNSPEC_VOLATILE
      || XVECLEN (x6, 0) != 1
      || XINT (x6, 1) != i1
      || GET_MODE (x6) != E_CCCmode)
    return -1;
  x7 = XVECEXP (x6, 0, 0);
  if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x8 = XEXP (x5, 0);
  if (GET_CODE (x8) != REG
      || REGNO (x8) != 17
      || GET_MODE (x8) != E_CCCmode)
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_HImode:
      if (!register_operand (operands[0], E_HImode)
          || GET_MODE (x3) != E_HImode)
        return -1;
      return 0;

    case E_SImode:
      if (!register_operand (operands[0], E_SImode)
          || GET_MODE (x3) != E_SImode)
        return -1;
      return 1;

    case E_DImode:
      if (!register_operand (operands[0], E_DImode)
          || GET_MODE (x3) != E_DImode)
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern720 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i2
      || !nonimmediate_operand (operands[1], i1)
      || !const_scalar_int_operand (operands[3], i2))
    return -1;
  x6 = XEXP (x3, 1);
  if (GET_MODE (x6) != i2)
    return -1;
  x7 = XEXP (x6, 0);
  if (GET_MODE (x7) != i1
      || !x86_64_hilo_general_operand (operands[2], i1)
      || !nonimmediate_operand (operands[0], i1))
    return -1;
  x8 = XVECEXP (x1, 0, 1);
  x9 = XEXP (x8, 1);
  if (GET_MODE (x9) != i1)
    return -1;
  return 0;
}

int
pattern729 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != SET)
    return -1;
  x2 = XEXP (x1, 1);
  operands[5] = x2;
  if (!register_operand (operands[5], i1))
    return -1;
  x3 = XEXP (x1, 0);
  if (!rtx_equal_p (x3, operands[1]))
    return -1;
  x4 = PATTERN (peep2_next_insn (3));
  if (GET_CODE (x4) != SET)
    return -1;
  x5 = XEXP (x4, 1);
  if (GET_CODE (x5) != COMPARE)
    return -1;
  x6 = XEXP (x5, 1);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x7 = XEXP (x4, 0);
  if (GET_CODE (x7) != REG
      || REGNO (x7) != 17)
    return -1;
  x8 = XEXP (x5, 0);
  if (!rtx_equal_p (x8, operands[5]))
    return -1;
  return 0;
}

int
pattern741 ()
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  switch (GET_MODE (operands[1]))
    {
    case E_V8HImode:
      if (!register_operand (operands[1], E_V8HImode)
          || !nonimmediate_operand (operands[2], E_V8HImode))
        return -1;
      return 0;

    case E_V8SImode:
      if (!register_operand (operands[1], E_V8SImode)
          || !nonimmediate_operand (operands[2], E_V8SImode))
        return -1;
      return 1;

    case E_V4SImode:
      if (!register_operand (operands[1], E_V4SImode)
          || !nonimmediate_operand (operands[2], E_V4SImode))
        return -1;
      return 2;

    case E_V8DImode:
      if (!register_operand (operands[1], E_V8DImode)
          || !nonimmediate_operand (operands[2], E_V8DImode))
        return -1;
      return 3;

    case E_V4DImode:
      if (!register_operand (operands[1], E_V4DImode)
          || !nonimmediate_operand (operands[2], E_V4DImode))
        return -1;
      return 4;

    case E_V2DImode:
      if (!register_operand (operands[1], E_V2DImode)
          || !nonimmediate_operand (operands[2], E_V2DImode))
        return -1;
      return 5;

    default:
      return -1;
    }
}

int
pattern761 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 1);
  if (maybe_ne (SUBREG_BYTE (x3), 0)
      || GET_MODE (x3) != E_QImode)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_CODE (x4) != AND)
    return -1;
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  if (!int248_register_operand (operands[1], E_VOIDmode))
    return -1;
  x6 = XEXP (x4, 1);
  operands[2] = x6;
  if (!const_int_operand (operands[2], E_VOIDmode))
    return -1;
  return pattern284 (x1); /* [-1, 1] */
}

int
pattern770 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XVECEXP (x3, 0, 0);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[1], i2)
      || !nonimmediate_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern777 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[1], i1)
      || !nonimmediate_operand (operands[2], i1)
      || !nonimm_or_0_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern786 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !register_operand (operands[2], i2)
      || !memory_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern795 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2
      || !register_operand (operands[1], i1))
    return -1;
  x2 = XEXP (x1, 1);
  operands[2] = x2;
  if (!nonimmediate_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern802 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2
      || !nonimmediate_operand (operands[1], i1)
      || !const0_operand (operands[2], i1)
      || !pmovzx_parallel (operands[3], E_VOIDmode))
    return -1;
  return 0;
}

int
pattern813 (rtx x1, machine_mode i1, int i2, int i3, rtx_code i4)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (GET_CODE (x1) != i4
      || XVECLEN (x1, 0) != i3
      || XINT (x1, 1) != i2
      || GET_MODE (x1) != i1)
    return -1;
  return 0;
}

int
pattern816 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  if (maybe_ne (SUBREG_BYTE (x5), 0)
      || GET_MODE (x5) != E_QImode)
    return -1;
  x6 = XEXP (x5, 0);
  switch (GET_CODE (x6))
    {
    case SIGN_EXTRACT:
    case ZERO_EXTRACT:
      operands[3] = x6;
      x7 = XEXP (x6, 1);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x8 = XEXP (x6, 2);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x9 = XVECEXP (x1, 0, 1);
      if (GET_CODE (x9) != SET)
        return -1;
      x10 = XEXP (x9, 1);
      if (GET_CODE (x10) != SUBREG
          || maybe_ne (SUBREG_BYTE (x10), 0))
        return -1;
      x11 = XEXP (x10, 0);
      if (GET_CODE (x11) != AND
          || GET_MODE (x11) != E_QImode)
        return -1;
      x12 = XEXP (x11, 0);
      if (GET_CODE (x12) != SUBREG
          || maybe_ne (SUBREG_BYTE (x12), 0)
          || GET_MODE (x12) != E_QImode)
        return -1;
      x13 = XEXP (x12, 0);
      switch (GET_CODE (x13))
        {
        case SIGN_EXTRACT:
        case ZERO_EXTRACT:
          if (!rtx_equal_p (x13, operands[3]))
            return -1;
          x14 = XEXP (x9, 0);
          if (GET_CODE (x14) != ZERO_EXTRACT)
            return -1;
          x15 = XEXP (x14, 1);
          if (x15 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
            return -1;
          x16 = XEXP (x14, 2);
          if (x16 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
            return -1;
          x17 = XEXP (x2, 0);
          operands[4] = x17;
          if (!flags_reg_operand (operands[4], E_VOIDmode))
            return -1;
          operands[5] = x3;
          if (!compare_operator (operands[5], E_VOIDmode)
              || GET_MODE (x4) != E_QImode)
            return -1;
          return pattern583 (x1); /* [-1, 2] */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern840 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (peep2_current_count < 3
      || XVECLEN (x1, 0) != 1
      || XINT (x1, 1) != 1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (x2 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  return 0;
}

int
pattern843 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19;
  int res ATTRIBUTE_UNUSED;
  if (peep2_current_count < 4
      || peep2_current_count < 5)
    return -1;
  x2 = XEXP (x1, 0);
  operands[3] = x2;
  if (!register_operand (operands[3], i1))
    return -1;
  x3 = XEXP (x1, 1);
  if (!rtx_equal_p (x3, operands[0]))
    return -1;
  x4 = PATTERN (peep2_next_insn (2));
  if (GET_CODE (x4) != PARALLEL
      || XVECLEN (x4, 0) != 2)
    return -1;
  x5 = XVECEXP (x4, 0, 0);
  if (GET_CODE (x5) != SET)
    return -1;
  x6 = XEXP (x5, 1);
  if (GET_CODE (x6) != XOR
      || GET_MODE (x6) != i1)
    return -1;
  x7 = XVECEXP (x4, 0, 1);
  if (GET_CODE (x7) != CLOBBER)
    return -1;
  x8 = XEXP (x7, 0);
  if (GET_CODE (x8) != REG
      || REGNO (x8) != 17
      || GET_MODE (x8) != E_CCmode)
    return -1;
  x9 = XEXP (x5, 0);
  operands[4] = x9;
  if (!register_operand (operands[4], i1))
    return -1;
  x10 = XEXP (x6, 1);
  operands[2] = x10;
  if (!x86_64_nonmemory_operand (operands[2], i1))
    return -1;
  x11 = XEXP (x6, 0);
  if (!rtx_equal_p (x11, operands[4]))
    return -1;
  x12 = PATTERN (peep2_next_insn (3));
  if (GET_CODE (x12) != SET)
    return -1;
  x13 = XEXP (x12, 1);
  if (!rtx_equal_p (x13, operands[4]))
    return -1;
  x14 = XEXP (x12, 0);
  if (!rtx_equal_p (x14, operands[1]))
    return -1;
  x15 = PATTERN (peep2_next_insn (4));
  if (GET_CODE (x15) != SET)
    return -1;
  x16 = XEXP (x15, 1);
  if (GET_CODE (x16) != COMPARE
      || GET_MODE (x16) != E_CCZmode)
    return -1;
  x17 = XEXP (x15, 0);
  if (GET_CODE (x17) != REG
      || REGNO (x17) != 17
      || GET_MODE (x17) != E_CCZmode)
    return -1;
  x18 = XEXP (x16, 0);
  operands[5] = x18;
  if (!register_operand (operands[5], i1))
    return -1;
  x19 = XEXP (x16, 1);
  operands[6] = x19;
  if (!x86_64_nonmemory_operand (operands[6], i1))
    return -1;
  return 0;
}

int
pattern865 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !bcst_vector_operand (operands[1], i1)
      || !bcst_vector_operand (operands[2], i1))
    return -1;
  x2 = XEXP (x1, 2);
  if (GET_MODE (x2) != i1
      || !bcst_vector_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern874 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XVECEXP (x2, 0, 0);
  switch (GET_MODE (x3))
    {
    case E_HFmode:
      if (!register_operand (operands[1], E_V8HFmode))
        return -1;
      return 0;

    case E_SFmode:
      if (!register_operand (operands[1], E_V4SFmode))
        return -1;
      return 1;

    case E_DFmode:
      if (!register_operand (operands[1], E_V2DFmode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern882 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 2);
  if (XWINT (x2, 0) != 1L)
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V4SFmode:
      return pattern627 (x1, 
E_V4SFmode); /* [-1, 0] */

    case E_V8HFmode:
      if (pattern627 (x1, 
E_V8HFmode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern892 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_V16HFmode)
      || GET_MODE (x1) != E_V16HFmode)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != E_V16HFmode
      || !nonimm_or_0_operand (operands[2], E_V16HFmode)
      || !register_operand (operands[3], E_HImode))
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V16HImode:
      if (!vector_operand (operands[1], E_V16HImode))
        return -1;
      return 0;

    case E_V16SImode:
      if (!vector_operand (operands[1], E_V16SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern901 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x3 = XEXP (x2, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[2] = x4;
  return pattern900 (x3); /* [-1, 0] */
}

int
pattern910 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1)
      || !nonimm_or_0_operand (operands[3], i1)
      || !register_operand (operands[4], i2))
    return -1;
  return 0;
}

int
pattern914 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x1, 0, 1);
  if (!const_4_or_8_to_11_operand (x6, E_SImode))
    return -1;
  x7 = XEXP (x2, 2);
  switch (GET_CODE (x7))
    {
    case UNSPEC:
      if (XVECLEN (x7, 0) != 1
          || XINT (x7, 1) != 223)
        return -1;
      x8 = XEXP (x2, 1);
      operands[3] = x8;
      x9 = XVECEXP (x7, 0, 0);
      operands[4] = x9;
      operands[5] = x6;
      switch (GET_MODE (operands[0]))
        {
        case E_V32HFmode:
          return pattern913 (x1, 
E_HImode, 
E_SImode, 
E_V32HFmode); /* [-1, 0] */

        case E_V16HFmode:
          if (pattern913 (x1, 
E_QImode, 
E_HImode, 
E_V16HFmode) != 0)
            return -1;
          return 1;

        default:
          return -1;
        }

    case CONST_INT:
      if (XWINT (x7, 0) != 3L
          || !register_operand (operands[0], E_V8HFmode)
          || GET_MODE (x1) != E_V8HFmode
          || GET_MODE (x2) != E_V8HFmode
          || GET_MODE (x3) != E_V8HFmode
          || !nonimmediate_operand (operands[1], E_V8HFmode)
          || !register_operand (operands[2], E_V8HFmode))
        return -1;
      operands[3] = x6;
      x8 = XEXP (x2, 1);
      if (!rtx_equal_p (x8, operands[1]))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern929 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 2);
  if (GET_CODE (x2) != CONST_INT)
    return -1;
  x3 = XVECEXP (x1, 0, 3);
  if (GET_CODE (x3) != CONST_INT)
    return -1;
  x4 = XVECEXP (x1, 0, 4);
  if (GET_CODE (x4) != CONST_INT)
    return -1;
  x5 = XVECEXP (x1, 0, 5);
  if (GET_CODE (x5) != CONST_INT)
    return -1;
  x6 = XVECEXP (x1, 0, 6);
  if (GET_CODE (x6) != CONST_INT)
    return -1;
  x7 = XVECEXP (x1, 0, 7);
  if (GET_CODE (x7) != CONST_INT)
    return -1;
  return 0;
}

int
pattern936 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_V8QImode))
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  if (!register_operand (operands[1], E_V8QImode))
    return -1;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  if (!register_mmxmem_operand (operands[2], E_V8QImode))
    return -1;
  x6 = XVECEXP (x3, 0, 2);
  operands[4] = x6;
  if (!reg_or_const_vector_operand (operands[4], E_V4SImode))
    return -1;
  x7 = XVECEXP (x1, 0, 1);
  x8 = XEXP (x7, 0);
  operands[3] = x8;
  if (!scratch_operand (operands[3], E_V4SImode))
    return -1;
  return 0;
}

int
pattern949 (rtx x1, rtx_code i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  if (GET_CODE (x5) != SUBREG
      || maybe_ne (SUBREG_BYTE (x5), 0)
      || GET_MODE (x5) != E_QImode)
    return -1;
  x6 = XEXP (x5, 0);
  switch (GET_CODE (x6))
    {
    case SIGN_EXTRACT:
    case ZERO_EXTRACT:
      operands[3] = x6;
      x7 = XEXP (x6, 1);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x8 = XEXP (x6, 2);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x9 = XVECEXP (x1, 0, 1);
      if (GET_CODE (x9) != SET)
        return -1;
      x10 = XEXP (x9, 1);
      if (GET_CODE (x10) != SUBREG
          || maybe_ne (SUBREG_BYTE (x10), 0))
        return -1;
      x11 = XEXP (x10, 0);
      if (GET_CODE (x11) != i1
          || GET_MODE (x11) != E_QImode)
        return -1;
      x12 = XEXP (x11, 0);
      if (GET_CODE (x12) != SUBREG
          || maybe_ne (SUBREG_BYTE (x12), 0)
          || GET_MODE (x12) != E_QImode)
        return -1;
      x13 = XEXP (x12, 0);
      switch (GET_CODE (x13))
        {
        case SIGN_EXTRACT:
        case ZERO_EXTRACT:
          if (!rtx_equal_p (x13, operands[3]))
            return -1;
          x14 = XEXP (x9, 0);
          if (GET_CODE (x14) != ZERO_EXTRACT)
            return -1;
          x15 = XEXP (x14, 1);
          if (x15 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
            return -1;
          x16 = XEXP (x14, 2);
          if (x16 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
            return -1;
          x17 = XEXP (x2, 0);
          operands[4] = x17;
          if (!flags_reg_operand (operands[4], E_VOIDmode))
            return -1;
          operands[5] = x3;
          if (!compare_operator (operands[5], E_VOIDmode)
              || GET_MODE (x4) != E_QImode)
            return -1;
          x18 = XEXP (x6, 0);
          operands[1] = x18;
          if (!int248_register_operand (operands[1], E_VOIDmode))
            return -1;
          return pattern582 (x9); /* [-1, 2] */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern975 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], E_SFmode)
      || GET_MODE (x1) != E_SFmode)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V2SFmode:
      if (!nonimmediate_operand (operands[1], E_V2SFmode))
        return -1;
      return 0;

    case E_V4SFmode:
      if (!nonimmediate_operand (operands[1], E_V4SFmode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern978 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XVECEXP (x2, 0, 0);
  switch (XWINT (x3, 0))
    {
    case 0L:
      x4 = XVECEXP (x2, 0, 1);
      if (XWINT (x4, 0) != 2L)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V2SFmode:
          return pattern271 (x1, 
E_V2SFmode, 
E_V4SFmode); /* [-1, 0] */

        case E_V2SImode:
          if (pattern272 (x1, 
E_V2SImode, 
E_V4SImode) != 0)
            return -1;
          return 1;

        default:
          return -1;
        }

    case 1L:
      x4 = XVECEXP (x2, 0, 1);
      if (XWINT (x4, 0) != 3L)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V2SFmode:
          if (pattern271 (x1, 
E_V2SFmode, 
E_V4SFmode) != 0)
            return -1;
          return 2;

        case E_V2SImode:
          if (pattern272 (x1, 
E_V2SImode, 
E_V4SImode) != 0)
            return -1;
          return 3;

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern987 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  operands[3] = x2;
  switch (GET_MODE (operands[0]))
    {
    case E_DImode:
      if (!register_operand (operands[0], E_DImode)
          || GET_MODE (x1) != E_DImode)
        return -1;
      x3 = XEXP (x1, 0);
      if (GET_MODE (x3) != E_DImode
          || !nonimm_or_0_operand (operands[1], E_V64QImode)
          || !nonimm_or_0_operand (operands[2], E_V64QImode)
          || !register_operand (operands[3], E_DImode))
        return -1;
      return 0;

    case E_SImode:
      if (!register_operand (operands[0], E_SImode)
          || GET_MODE (x1) != E_SImode)
        return -1;
      x3 = XEXP (x1, 0);
      if (GET_MODE (x3) != E_SImode
          || !register_operand (operands[3], E_SImode))
        return -1;
      switch (GET_MODE (operands[1]))
        {
        case E_V32QImode:
          if (!nonimm_or_0_operand (operands[1], E_V32QImode)
              || !nonimm_or_0_operand (operands[2], E_V32QImode))
            return -1;
          return 1;

        case E_V32HImode:
          if (!nonimm_or_0_operand (operands[1], E_V32HImode)
              || !nonimm_or_0_operand (operands[2], E_V32HImode))
            return -1;
          return 2;

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern1000 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (GET_MODE (x1) != i3)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i3
      || !register_operand (operands[1], i2))
    return -1;
  x3 = XEXP (x1, 2);
  if (!register_operand (x3, i1))
    return -1;
  return 0;
}

int
pattern1009 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[2] = x4;
  x5 = XEXP (x1, 1);
  operands[1] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_V8HImode:
      return pattern1008 (x1, 
E_V8HImode, 
E_HImode); /* [-1, 0] */

    case E_V8HFmode:
      if (pattern1008 (x1, 
E_V8HFmode, 
E_HFmode) != 0)
        return -1;
      return 1;

    case E_V8BFmode:
      if (pattern1008 (x1, 
E_V8BFmode, 
E_BFmode) != 0)
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern1021 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_V16HFmode)
      || GET_MODE (x1) != E_V16HFmode)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != E_V16HFmode)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V16HImode:
      if (!register_operand (operands[1], E_V16HImode))
        return -1;
      return 0;

    case E_V16SImode:
      if (!register_operand (operands[1], E_V16SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1032 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 1);
  if (GET_CODE (x5) != CONST_VECTOR
      || XVECLEN (x5, 0) != 4
      || GET_MODE (x5) != E_V4SImode)
    return -1;
  x6 = XVECEXP (x5, 0, 0);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x7 = XVECEXP (x5, 0, 1);
  if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x8 = XVECEXP (x5, 0, 2);
  if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x9 = XVECEXP (x5, 0, 3);
  if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x10 = XEXP (x4, 2);
  if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 1]
      || GET_MODE (x4) != E_V4SImode)
    return -1;
  return pattern679 (x1); /* [-1, 2] */
}

int
pattern1043 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  operands[2] = x5;
  if (!int248_register_operand (operands[2], E_VOIDmode))
    return -1;
  x6 = XEXP (x1, 0);
  switch (GET_CODE (x6))
    {
    case STRICT_LOW_PART:
      x7 = XEXP (x6, 0);
      operands[0] = x7;
      if (!register_operand (operands[0], E_QImode))
        return -1;
      return pattern1042 (); /* [-1, 2] */

    case REG:
    case SUBREG:
      operands[0] = x6;
      if (!register_operand (operands[0], E_QImode))
        return -1;
      res = pattern1042 ();
      if (res >= 0)
        return res + 3; /* [3, 5] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1050 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !vector_operand (operands[1], i1)
      || !vector_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1053 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1056 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  if (GET_CODE (x4) != ASHIFT)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_CODE (x5) != ZERO_EXTEND)
    return -1;
  x6 = XEXP (x3, 1);
  if (GET_CODE (x6) != ZERO_EXTEND)
    return -1;
  x7 = XEXP (x1, 0);
  operands[0] = x7;
  return pattern354 (x2); /* [-1, 3] */
}

int
pattern1062 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2
      || !vector_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1069 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern1071 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !nonimmediate_operand (operands[1], i2)
      || !register_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1082 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (maybe_ne (SUBREG_BYTE (x1), 0))
    return -1;
  x2 = XEXP (x1, 0);
  switch (GET_CODE (x2))
    {
    case VEC_MERGE:
      x3 = XEXP (x2, 2);
      if (GET_CODE (x3) != UNSPEC
          || XVECLEN (x3, 0) != 3
          || XINT (x3, 1) != 59
          || GET_MODE (x3) != E_QImode)
        return -1;
      x4 = XVECEXP (x3, 0, 2);
      if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return -1;
      x5 = XEXP (x2, 0);
      operands[3] = x5;
      x6 = XEXP (x2, 1);
      operands[4] = x6;
      x7 = XVECEXP (x3, 0, 0);
      operands[1] = x7;
      x8 = XVECEXP (x3, 0, 1);
      operands[2] = x8;
      switch (GET_MODE (x1))
        {
        case E_V8SFmode:
          return pattern1081 (x2, 
E_V8SImode); /* [-1, 0] */

        case E_V4SFmode:
          if (pattern1081 (x2, 
E_V4SImode) != 0)
            return -1;
          return 1;

        case E_V4DFmode:
          if (pattern1081 (x2, 
E_V4DImode) != 0)
            return -1;
          return 2;

        case E_V2DFmode:
          if (pattern1081 (x2, 
E_V2DImode) != 0)
            return -1;
          return 3;

        default:
          return -1;
        }

    case ASHIFTRT:
      x5 = XEXP (x2, 0);
      operands[1] = x5;
      x6 = XEXP (x2, 1);
      operands[2] = x6;
      if (!const_int_operand (operands[2], E_QImode))
        return -1;
      switch (GET_MODE (x1))
        {
        case E_V8SFmode:
          if (GET_MODE (x2) != E_V8SImode
              || !register_operand (operands[1], E_V8SImode))
            return -1;
          return 4;

        case E_V4SFmode:
          if (GET_MODE (x2) != E_V4SImode
              || !register_operand (operands[1], E_V4SImode))
            return -1;
          return 5;

        case E_V4DFmode:
          if (GET_MODE (x2) != E_V4DImode
              || !register_operand (operands[1], E_V4DImode))
            return -1;
          return 6;

        case E_V2DFmode:
          if (GET_MODE (x2) != E_V2DImode
              || !register_operand (operands[1], E_V2DImode))
            return -1;
          return 7;

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern1108 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 2);
  if (XWINT (x2, 0) != 1L
      || !const_0_to_255_operand (operands[3], E_SImode))
    return -1;
  return pattern1107 (x1); /* [-1, 2] */
}

int
pattern1112 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !vector_operand (operands[2], i1)
      || !register_operand (operands[1], i1)
      || !const_0_to_255_operand (operands[3], E_SImode))
    return -1;
  return 0;
}

int
pattern1115 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[2], i1)
      || !register_operand (operands[1], i1)
      || !const_0_to_255_operand (operands[3], E_SImode))
    return -1;
  return 0;
}

int
pattern1123 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[1], i1)
      || !nonimmediate_operand (operands[2], i1)
      || !nonimm_or_0_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1132 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!const48_operand (operands[3], E_SImode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V32HFmode:
      return pattern1131 (x1, 
E_V32HFmode); /* [-1, 0] */

    case E_V16HFmode:
      if (pattern1131 (x1, 
E_V16HFmode) != 0)
        return -1;
      return 1;

    case E_V16SFmode:
      if (pattern1131 (x1, 
E_V16SFmode) != 0)
        return -1;
      return 2;

    case E_V8SFmode:
      if (pattern1131 (x1, 
E_V8SFmode) != 0)
        return -1;
      return 3;

    case E_V8DFmode:
      if (pattern1131 (x1, 
E_V8DFmode) != 0)
        return -1;
      return 4;

    case E_V4DFmode:
      if (pattern1131 (x1, 
E_V4DFmode) != 0)
        return -1;
      return 5;

    default:
      return -1;
    }
}

int
pattern1140 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i2
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern1147 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 0);
  operands[2] = x3;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      x4 = XVECEXP (x1, 0, 0);
      x5 = XEXP (x4, 1);
      return pattern1146 (x5, 
E_SImode); /* [-1, 1] */

    case E_DImode:
      x4 = XVECEXP (x1, 0, 0);
      x5 = XEXP (x4, 1);
      res = pattern1146 (x5, 
E_DImode);
      if (res >= 0)
        return res + 2; /* [2, 3] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1156 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !x86_64_general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1165 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  return pattern1164 (x3); /* [-1, 2] */
}

int
pattern1170 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!nonmemory_operand (operands[2], E_QImode))
    return -1;
  x2 = XEXP (x1, 0);
  switch (GET_CODE (x2))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[0] = x2;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          if (!nonimmediate_operand (operands[0], E_SImode))
            return -1;
          x3 = XEXP (x1, 1);
          if (GET_MODE (x3) != E_SImode
              || !nonimmediate_operand (operands[1], E_SImode))
            return -1;
          return 0;

        case E_DImode:
          if (!nonimmediate_operand (operands[0], E_DImode))
            return -1;
          x3 = XEXP (x1, 1);
          if (GET_MODE (x3) != E_DImode
              || !nonimmediate_operand (operands[1], E_DImode))
            return -1;
          return 1;

        case E_QImode:
          if (!nonimmediate_operand (operands[0], E_QImode))
            return -1;
          x3 = XEXP (x1, 1);
          if (GET_MODE (x3) != E_QImode
              || !nonimmediate_operand (operands[1], E_QImode))
            return -1;
          return 2;

        case E_HImode:
          if (!nonimmediate_operand (operands[0], E_HImode))
            return -1;
          x3 = XEXP (x1, 1);
          if (GET_MODE (x3) != E_HImode
              || !nonimmediate_operand (operands[1], E_HImode))
            return -1;
          return 3;

        default:
          return -1;
        }

    case STRICT_LOW_PART:
      x4 = XEXP (x2, 0);
      operands[0] = x4;
      x3 = XEXP (x1, 1);
      res = pattern374 (x3);
      if (res >= 0)
        return res + 4; /* [4, 5] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1197 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !ix86_comparison_operator (operands[1], E_VOIDmode)
      || !nonimmediate_operand (operands[2], i1)
      || !nonimmediate_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1201 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_QImode)
      || GET_MODE (x1) != E_QImode)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != E_QImode
      || !const_0_to_31_operand (operands[3], E_SImode))
    return -1;
  return 0;
}

int
pattern1206 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1
      || !x86_64_general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1213 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2
      || !register_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern1219 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V8HFmode:
      if (!register_operand (operands[1], E_V8HFmode))
        return -1;
      return 0;

    case E_V8SFmode:
      if (!nonimmediate_operand (operands[1], E_V8SFmode))
        return -1;
      return 1;

    case E_V8DFmode:
      if (!nonimmediate_operand (operands[1], E_V8DFmode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern1228 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 2);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 1);
  operands[4] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_V16QImode:
      if (!register_operand (operands[0], E_V16QImode)
          || GET_MODE (x1) != E_V16QImode
          || !vector_operand (operands[1], E_V16QImode)
          || !register_operand (operands[2], E_V16QImode)
          || GET_MODE (x2) != E_V16QImode)
        return -1;
      switch (GET_MODE (x3))
        {
        case E_V4SImode:
          if (!register_operand (operands[3], E_V4SImode)
              || !vector_all_ones_operand (operands[4], E_V4SImode))
            return -1;
          return 0;

        case E_V2DImode:
          if (!register_operand (operands[3], E_V2DImode)
              || !vector_all_ones_operand (operands[4], E_V2DImode))
            return -1;
          return 1;

        default:
          return -1;
        }

    case E_V32QImode:
      if (!register_operand (operands[0], E_V32QImode)
          || GET_MODE (x1) != E_V32QImode
          || !vector_operand (operands[1], E_V32QImode)
          || !register_operand (operands[2], E_V32QImode)
          || GET_MODE (x2) != E_V32QImode)
        return -1;
      switch (GET_MODE (x3))
        {
        case E_V8SImode:
          if (!register_operand (operands[3], E_V8SImode)
              || !vector_all_ones_operand (operands[4], E_V8SImode))
            return -1;
          return 2;

        case E_V4DImode:
          if (!register_operand (operands[3], E_V4DImode)
              || !vector_all_ones_operand (operands[4], E_V4DImode))
            return -1;
          return 3;

        default:
          return -1;
        }

    default:
      return -1;
    }
}

int
pattern1246 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 1);
  operands[2] = x4;
  if (!register_operand (operands[2], E_QImode))
    return -1;
  x5 = XEXP (x1, 1);
  operands[1] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      return pattern1245 (x1, 
E_SImode); /* [-1, 0] */

    case E_DImode:
      if (pattern1245 (x1, 
E_DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1258 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  if (!plusminuslogic_operator (x4, i1))
    return -1;
  operands[3] = x4;
  x5 = XEXP (x3, 1);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x6 = XEXP (x2, 0);
  if (GET_CODE (x6) != REG
      || REGNO (x6) != 17)
    return -1;
  x7 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x7) != SET)
    return -1;
  x8 = XEXP (x4, 1);
  operands[2] = x8;
  if (!x86_64_nonmemory_operand (operands[2], i1))
    return -1;
  x9 = XEXP (x4, 0);
  if (!rtx_equal_p (x9, operands[0]))
    return -1;
  x10 = XEXP (x7, 1);
  if (!rtx_equal_p (x10, operands[3]))
    return -1;
  x11 = XEXP (x7, 0);
  if (!rtx_equal_p (x11, operands[0]))
    return -1;
  return 0;
}

int
pattern1270 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !immediate_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1275 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[2], i1)
      || !nonimmediate_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1283 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1))
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[2], i2)
      || !nonimm_or_0_operand (operands[4], i1)
      || !register_operand (operands[5], i3))
    return -1;
  return 0;
}

int
pattern1294 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !vector_operand (operands[2], i1))
    return -1;
  x3 = XEXP (x2, 2);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[4], i2))
    return -1;
  return 0;
}

int
pattern1302 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !vector_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern1310 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2
      || !nonimm_or_0_operand (operands[2], i2)
      || !register_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1314 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 1);
  x5 = XVECEXP (x4, 0, 0);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x6 = XVECEXP (x4, 0, 1);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 2])
    return -1;
  x7 = XVECEXP (x4, 0, 2);
  if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 4])
    return -1;
  x8 = XVECEXP (x4, 0, 3);
  if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 6])
    return -1;
  x9 = XVECEXP (x4, 0, 4);
  if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
    return -1;
  x10 = XVECEXP (x4, 0, 5);
  if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 10])
    return -1;
  x11 = XVECEXP (x4, 0, 6);
  if (x11 != const_int_rtx[MAX_SAVED_CONST_INT + 12])
    return -1;
  x12 = XVECEXP (x4, 0, 7);
  if (x12 != const_int_rtx[MAX_SAVED_CONST_INT + 14])
    return -1;
  x13 = XEXP (x1, 1);
  x14 = XEXP (x13, 0);
  x15 = XEXP (x14, 1);
  return pattern1313 (x15, 
8); /* [-1, 0] */
}

int
pattern1329 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 1);
  if (maybe_ne (SUBREG_BYTE (x3), 0)
      || GET_MODE (x3) != E_QImode)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_CODE (x4) != AND)
    return -1;
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  if (!int248_register_operand (operands[1], E_VOIDmode))
    return -1;
  x6 = XEXP (x4, 1);
  operands[2] = x6;
  if (!const_int_operand (operands[2], E_VOIDmode))
    return -1;
  x7 = XEXP (x1, 1);
  operands[3] = x7;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      return pattern369 (x1, 
E_SImode); /* [-1, 0] */

    case E_DImode:
      if (pattern369 (x1, 
E_DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1344 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x2) != CLOBBER)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCmode)
    return -1;
  x4 = XVECEXP (x1, 0, 0);
  x5 = XEXP (x4, 1);
  x6 = XEXP (x5, 0);
  if (!rtx_equal_p (x6, operands[0]))
    return -1;
  x7 = XEXP (x4, 0);
  if (!rtx_equal_p (x7, operands[0]))
    return -1;
  return 0;
}

int
pattern1352 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !nonimmediate_operand (operands[2], i1))
    return -1;
  x4 = XEXP (x2, 2);
  if (GET_MODE (x4) != i1
      || !nonimmediate_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1363 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_SImode))
    return -1;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  if (!nonimmediate_operand (operands[1], E_SImode))
    return -1;
  x4 = XEXP (x1, 1);
  if (GET_MODE (x4) != E_SImode)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != E_DImode)
    return -1;
  x6 = XEXP (x5, 0);
  if (GET_MODE (x6) != E_DImode)
    return -1;
  x7 = XEXP (x6, 0);
  operands[2] = x7;
  if (!register_operand (operands[2], E_SImode))
    return -1;
  x8 = XEXP (x5, 1);
  operands[4] = x8;
  if (!const_0_to_63_operand (operands[4], E_QImode))
    return -1;
  return 0;
}

int
pattern1374 (machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[2], i2)
      || !nonimmediate_operand (operands[3], i2)
      || !const0_operand (operands[4], i2)
      || !register_operand (operands[5], i1))
    return -1;
  return 0;
}

int
pattern1380 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[2], i2)
      || GET_MODE (x1) != i2
      || !nonimmediate_operand (operands[3], i2)
      || !const0_operand (operands[4], i2)
      || !register_operand (operands[5], i1))
    return -1;
  return 0;
}

int
pattern1388 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !nonimmediate_operand (operands[2], i1)
      || !nonimmediate_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1397 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 2);
  if (XWINT (x3, 0) != 1L
      || !const_0_to_255_operand (operands[3], E_SImode))
    return -1;
  return pattern1396 (x1); /* [-1, 2] */
}

int
pattern1402 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1409 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  x3 = XEXP (x2, 2);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1417 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  if (!int248_register_operand (operands[1], E_VOIDmode))
    return -1;
  x5 = XEXP (x3, 1);
  operands[2] = x5;
  if (!int248_register_operand (operands[2], E_VOIDmode))
    return -1;
  x6 = XEXP (x1, 0);
  switch (GET_MODE (x6))
    {
    case E_HImode:
      if (!extract_operator (operands[3], E_HImode))
        return -1;
      return 0;

    case E_SImode:
      if (!extract_operator (operands[3], E_SImode))
        return -1;
      return 1;

    case E_DImode:
      if (!extract_operator (operands[3], E_DImode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern1433 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1441 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[1], i1)
      || !register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[4], i1)
      || !register_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1447 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!memory_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 1);
  if (GET_MODE (x2) != i2
      || !register_operand (operands[1], i1))
    return -1;
  return 0;
}

int
pattern1454 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1)
      || !bcst_vector_operand (operands[3], i1)
      || !const0_operand (operands[5], i1)
      || !register_operand (operands[6], i2))
    return -1;
  return 0;
}

int
pattern1463 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !vector_operand (operands[1], i1)
      || !vector_operand (operands[2], i1))
    return -1;
  x2 = XEXP (x1, 2);
  if (GET_MODE (x2) != i2
      || !register_operand (operands[3], i1)
      || !const0_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern1472 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i2)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i2)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i1)
    return -1;
  return 0;
}

int
pattern1479 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_V4DImode)
      || GET_MODE (x1) != E_V4DImode)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != E_V4DImode)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != E_V4DImode
      || !nonimm_or_0_operand (operands[2], E_V4DImode)
      || !register_operand (operands[3], E_QImode))
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_V8HFmode:
      if (!register_operand (operands[1], E_V8HFmode))
        return -1;
      return 0;

    case E_V4DFmode:
      if (!register_operand (operands[1], E_V4DFmode))
        return -1;
      return 1;

    case E_V4SFmode:
      if (!register_operand (operands[1], E_V4SFmode))
        return -1;
      return 2;

    default:
      return -1;
    }
}

int
pattern1490 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[1], i1)
      || !general_operand (operands[2], i1)
      || !nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  return 0;
}

int
pattern1497 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !nonmemory_operand (operands[2], E_QImode))
    return -1;
  return 0;
}

int
pattern1501 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  if (!rtx_equal_p (x4, operands[2]))
    return -1;
  x5 = XEXP (x3, 1);
  if (!rtx_equal_p (x5, operands[3]))
    return -1;
  x6 = XVECEXP (x1, 0, 2);
  switch (GET_CODE (x6))
    {
    case UNSPEC:
      if (XVECLEN (x6, 0) != 1
          || XINT (x6, 1) != 32)
        return -1;
      x7 = XVECEXP (x6, 0, 0);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      return 0;

    case USE:
      x8 = XEXP (x6, 0);
      operands[4] = x8;
      if (!register_operand (operands[4], E_SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1517 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !nonimmediate_operand (operands[2], i2))
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i2
      || !register_operand (operands[1], i1)
      || !nonimm_or_0_operand (operands[3], i1))
    return -1;
  return 0;
}

int
pattern1527 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_QImode)
      || GET_MODE (x1) != E_QImode)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != E_QImode)
    return -1;
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  x6 = XEXP (x4, 1);
  operands[2] = x6;
  if (!register_operand (operands[2], E_QImode))
    return -1;
  switch (GET_MODE (x4))
    {
    case E_SImode:
      if (!register_operand (operands[1], E_SImode))
        return -1;
      return 0;

    case E_DImode:
      if (!register_operand (operands[1], E_DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1539 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (GET_MODE (x1) != i1
      || !ix86_carry_flag_operator (operands[3], i1)
      || !nonimmediate_operand (operands[1], i1)
      || !x86_64_general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1545 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !nonimmediate_operand (operands[2], i1)
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x5 = XEXP (x3, 2);
  if (GET_MODE (x5) != i1
      || !nonimmediate_operand (operands[3], i1)
      || !const0_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern1555 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != VEC_SELECT
      || GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != PARALLEL
      || XVECLEN (x3, 0) != 1)
    return -1;
  x4 = XVECEXP (x3, 0, 0);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return -1;
  x5 = XEXP (x1, 1);
  if (GET_CODE (x5) != VEC_SELECT
      || GET_MODE (x5) != i1)
    return -1;
  x6 = XEXP (x5, 1);
  if (GET_CODE (x6) != PARALLEL
      || XVECLEN (x6, 0) != 1)
    return -1;
  x7 = XVECEXP (x6, 0, 0);
  if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
    return -1;
  return 0;
}

int
pattern1566 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!nonimmediate_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1
      || !general_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1575 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[2], i1))
    return -1;
  switch (GET_MODE (operands[1]))
    {
    case E_SImode:
      if (!register_operand (operands[1], E_SImode)
          || !register_operand (operands[0], E_SImode))
        return -1;
      x4 = XVECEXP (x1, 0, 1);
      x5 = XEXP (x4, 1);
      if (GET_MODE (x5) != E_SImode)
        return -1;
      return 0;

    case E_DImode:
      if (!register_operand (operands[1], E_DImode)
          || !register_operand (operands[0], E_DImode))
        return -1;
      x4 = XVECEXP (x1, 0, 1);
      x5 = XEXP (x4, 1);
      if (GET_MODE (x5) != E_DImode)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1589 (machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[2], i1)
      || !register_operand (operands[3], i1)
      || !const0_operand (operands[4], i1)
      || !register_operand (operands[5], i2))
    return -1;
  return 0;
}

int
pattern1595 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[1], i1)
      || pattern1589 (
i1, 
i2) != 0)
    return -1;
  return 0;
}

int
pattern1604 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[0], i1))
    return -1;
  switch (GET_MODE (operands[2]))
    {
    case E_V4SImode:
      if (!register_operand (operands[2], E_V4SImode))
        return -1;
      return 0;

    case E_V4DImode:
      if (!register_operand (operands[2], E_V4DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1612 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[3], i1))
    return -1;
  switch (GET_MODE (operands[2]))
    {
    case E_V8SImode:
      if (!register_operand (operands[2], E_V8SImode))
        return -1;
      return 0;

    case E_V4DImode:
      if (!register_operand (operands[2], E_V4DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1620 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 1);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
    return -1;
  x5 = XEXP (x3, 0);
  if (!rtx_equal_p (x5, operands[1]))
    return -1;
  x6 = XVECEXP (x1, 0, 0);
  x7 = XEXP (x6, 1);
  x8 = XVECEXP (x7, 0, 0);
  switch (GET_MODE (x8))
    {
    case E_SImode:
      if (!nonimmediate_operand (operands[1], E_SImode)
          || !register_operand (operands[0], E_SImode)
          || GET_MODE (x3) != E_SImode)
        return -1;
      return 0;

    case E_DImode:
      if (!nonimmediate_operand (operands[1], E_DImode)
          || !register_operand (operands[0], E_DImode)
          || GET_MODE (x3) != E_DImode)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1636 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1)
      || !nonimmediate_operand (operands[3], i2)
      || !const0_operand (operands[5], i1))
    return -1;
  return 0;
}

int
pattern1646 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[1], i1)
      || !register_operand (operands[2], i1))
    return -1;
  x4 = XVECEXP (x3, 0, 2);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[3], i1)
      || !const0_operand (operands[4], i1)
      || !register_operand (operands[5], i2))
    return -1;
  return 0;
}

int
pattern1659 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 2);
  if (XWINT (x2, 0) != 2L)
    return -1;
  x3 = XVECEXP (x1, 0, 3);
  if (XWINT (x3, 0) != 2L)
    return -1;
  x4 = XVECEXP (x1, 0, 4);
  if (XWINT (x4, 0) != 4L)
    return -1;
  x5 = XVECEXP (x1, 0, 5);
  if (XWINT (x5, 0) != 4L)
    return -1;
  x6 = XVECEXP (x1, 0, 6);
  if (XWINT (x6, 0) != 6L)
    return -1;
  x7 = XVECEXP (x1, 0, 7);
  if (XWINT (x7, 0) != 6L)
    return -1;
  return 0;
}

int
pattern1668 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !register_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1678 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], E_DImode))
    return -1;
  x2 = XEXP (x1, 0);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  if (!nonimmediate_operand (operands[1], E_DImode))
    return -1;
  x4 = XEXP (x1, 1);
  if (GET_MODE (x4) != E_DImode)
    return -1;
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != E_TImode)
    return -1;
  x6 = XEXP (x5, 0);
  if (GET_MODE (x6) != E_TImode)
    return -1;
  x7 = XEXP (x6, 0);
  operands[2] = x7;
  if (!register_operand (operands[2], E_DImode))
    return -1;
  x8 = XEXP (x5, 1);
  operands[4] = x8;
  if (!const_0_to_255_operand (operands[4], E_QImode))
    return -1;
  return 0;
}

int
pattern1690 (rtx x1, int i1, int i2, int i3, int i4, int i5)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 12);
  if (x2 != const_int_rtx[MAX_SAVED_CONST_INT + i4])
    return -1;
  x3 = XVECEXP (x1, 0, 13);
  if (x3 != const_int_rtx[MAX_SAVED_CONST_INT + i3])
    return -1;
  x4 = XVECEXP (x1, 0, 14);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + i2])
    return -1;
  x5 = XVECEXP (x1, 0, 15);
  if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + i1])
    return -1;
  x6 = XVECEXP (x1, 0, 16);
  if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + i5])
    return -1;
  return 0;
}

int
pattern1700 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[0], i1))
    return -1;
  switch (GET_MODE (operands[2]))
    {
    case E_V16SImode:
      if (!register_operand (operands[2], E_V16SImode)
          || !register_operand (operands[6], E_HImode)
          || !register_operand (operands[3], E_V16SImode))
        return -1;
      return 0;

    case E_V8DImode:
      if (!register_operand (operands[2], E_V8DImode)
          || !register_operand (operands[6], E_QImode)
          || !register_operand (operands[3], E_V8SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1712 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!vsib_mem_operator (operands[5], i1)
      || !register_operand (operands[6], E_QImode))
    return -1;
  x2 = XEXP (x1, 1);
  if (GET_MODE (x2) != i1
      || !scratch_operand (operands[1], E_QImode))
    return -1;
  x3 = XEXP (x1, 0);
  x4 = XEXP (x3, 0);
  switch (GET_MODE (x4))
    {
    case E_SImode:
      return 0;

    case E_DImode:
      return 1;

    default:
      return -1;
    }
}

int
pattern1722 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2
      || !register_operand (operands[6], E_QImode)
      || !vsib_mem_operator (operands[5], i1)
      || !scratch_operand (operands[1], E_QImode))
    return -1;
  x2 = XVECEXP (x1, 0, 2);
  x3 = XEXP (x2, 0);
  switch (GET_MODE (x3))
    {
    case E_SImode:
      return pattern1721 (
E_SImode); /* [-1, 1] */

    case E_DImode:
      res = pattern1721 (
E_DImode);
      if (res >= 0)
        return res + 2; /* [2, 3] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1733 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i1)
    return -1;
  x4 = XEXP (x3, 0);
  if (GET_MODE (x4) != i1
      || !nonimmediate_operand (operands[1], i1)
      || !register_operand (operands[2], i1)
      || !register_operand (operands[3], i1)
      || !const0_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern1740 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1
      || !register_operand (operands[2], i1)
      || !vsib_mem_operator (operands[7], i2)
      || !register_operand (operands[5], i1))
    return -1;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 0);
  switch (GET_MODE (x3))
    {
    case E_SImode:
      return pattern1739 (
E_SImode); /* [-1, 1] */

    case E_DImode:
      res = pattern1739 (
E_DImode);
      if (res >= 0)
        return res + 2; /* [2, 3] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1749 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2
      || !register_operand (operands[1], i2)
      || !register_operand (operands[7], E_QImode)
      || !vsib_mem_operator (operands[6], i1)
      || !scratch_operand (operands[2], E_QImode))
    return -1;
  x2 = XVECEXP (x1, 0, 2);
  x3 = XEXP (x2, 0);
  switch (GET_MODE (x3))
    {
    case E_SImode:
      return pattern1748 (
E_SImode); /* [-1, 1] */

    case E_DImode:
      res = pattern1748 (
E_DImode);
      if (res >= 0)
        return res + 2; /* [2, 3] */
      return -1;

    default:
      return -1;
    }
}

int
pattern1762 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1))
    return -1;
  operands[2] = x1;
  x2 = PATTERN (peep2_next_insn (1));
  return pattern1761 (x2, 
i1); /* [-1, 0] */
}

int
pattern1769 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[0], i1))
    return -1;
  switch (GET_MODE (operands[2]))
    {
    case E_V16SImode:
      if (!register_operand (operands[2], E_V16SImode)
          || !register_operand (operands[6], E_HImode)
          || !register_operand (operands[3], E_V16SImode)
          || !scratch_operand (operands[1], E_HImode))
        return -1;
      return 0;

    case E_V8DImode:
      if (pattern1768 (
E_QImode, 
E_V8SImode, 
E_V8DImode) != 0)
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1777 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1))
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[1], i1))
    return -1;
  x4 = XVECEXP (x1, 0, 1);
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i1)
    return -1;
  x6 = XEXP (x4, 1);
  if (GET_MODE (x6) != i1)
    return -1;
  x7 = XEXP (x6, 0);
  if (GET_MODE (x7) != i1
      || !const_int_operand (operands[2], i1))
    return -1;
  return 0;
}

int
pattern1789 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[3], i1))
    return -1;
  switch (GET_MODE (operands[4]))
    {
    case E_V4SImode:
      if (!register_operand (operands[4], E_V4SImode))
        return -1;
      return 0;

    case E_V2DImode:
      if (!register_operand (operands[4], E_V2DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1797 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i2
      || !nonimmediate_operand (operands[1], i1)
      || !const_int_operand (operands[3], i2))
    return -1;
  x6 = XEXP (x3, 1);
  if (GET_MODE (x6) != i2)
    return -1;
  x7 = XEXP (x6, 0);
  if (GET_MODE (x7) != i1
      || !x86_64_immediate_operand (operands[2], i1)
      || !register_operand (operands[0], i1))
    return -1;
  x8 = XVECEXP (x1, 0, 1);
  x9 = XEXP (x8, 1);
  if (GET_MODE (x9) != i1)
    return -1;
  return 0;
}

int
pattern1806 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i1)
      || GET_MODE (x1) != i1)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1)
    return -1;
  x3 = XEXP (x2, 0);
  if (GET_MODE (x3) != i2
      || !nonimmediate_operand (operands[1], i1))
    return -1;
  x4 = XEXP (x1, 1);
  operands[2] = x4;
  if (!nonimm_or_0_operand (operands[2], i1))
    return -1;
  x5 = XEXP (x1, 2);
  operands[3] = x5;
  x6 = XEXP (x3, 1);
  if (!rtx_equal_p (x6, operands[1]))
    return -1;
  return 0;
}

int
pattern1818 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[0], i1))
    return -1;
  switch (GET_MODE (operands[2]))
    {
    case E_V8SImode:
      if (!register_operand (operands[2], E_V8SImode)
          || !register_operand (operands[3], E_V8SImode))
        return -1;
      return 0;

    case E_V4DImode:
      if (!register_operand (operands[2], E_V4DImode)
          || !register_operand (operands[3], E_V4SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1826 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[2], i1)
      || !register_operand (operands[0], i1))
    return -1;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != i1
      || !register_operand (operands[3], i1)
      || !register_operand (operands[5], i1)
      || !register_operand (operands[1], i1))
    return -1;
  x4 = XVECEXP (x1, 0, 2);
  x5 = XEXP (x4, 1);
  if (GET_MODE (x5) != i1
      || !register_operand (operands[4], i1))
    return -1;
  return 0;
}

int
pattern1833 (machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!vsib_address_operand (operands[2], i1))
    return -1;
  switch (GET_MODE (operands[3]))
    {
    case E_V8SImode:
      if (!register_operand (operands[3], E_V8SImode)
          || !register_operand (operands[4], E_V8SImode))
        return -1;
      return 0;

    case E_V4DImode:
      if (!register_operand (operands[3], E_V4DImode)
          || !register_operand (operands[4], E_V4SImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1839 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[2], i1)
      || !register_operand (operands[4], i2))
    return -1;
  return pattern1838 (x1, 
i1); /* [-1, 1] */
}

int
pattern1844 ()
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  int res ATTRIBUTE_UNUSED;
  if (!const_0_to_7_operand (operands[4], E_VOIDmode)
      || !const_0_to_7_operand (operands[5], E_VOIDmode)
      || !const_0_to_7_operand (operands[6], E_VOIDmode)
      || !const_8_to_15_operand (operands[7], E_VOIDmode)
      || !const_8_to_15_operand (operands[8], E_VOIDmode)
      || !const_8_to_15_operand (operands[9], E_VOIDmode)
      || !const_8_to_15_operand (operands[10], E_VOIDmode))
    return -1;
  return 0;
}

int
pattern1850 (rtx x1, machine_mode i1, machine_mode i2, machine_mode i3)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[0], i2)
      || GET_MODE (x1) != i2)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_MODE (x2) != i1
      || !register_operand (operands[2], i2)
      || !vsib_mem_operator (operands[7], i3)
      || !register_operand (operands[5], i2)
      || !scratch_operand (operands[1], i1))
    return -1;
  x3 = XVECEXP (x2, 0, 1);
  x4 = XEXP (x3, 0);
  switch (GET_MODE (x4))
    {
    case E_SImode:
      if (!vsib_address_operand (operands[3], E_SImode))
        return -1;
      return 0;

    case E_DImode:
      if (!vsib_address_operand (operands[3], E_DImode))
        return -1;
      return 1;

    default:
      return -1;
    }
}

int
pattern1859 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  if (!x86_64_general_operand (operands[1], i1))
    return -1;
  x2 = XVECEXP (x1, 0, 1);
  x3 = XEXP (x2, 1);
  if (XINT (x3, 1) != 112
      || GET_MODE (x3) != i1)
    return -1;
  x4 = XVECEXP (x1, 0, 2);
  x5 = XEXP (x4, 1);
  if (GET_CODE (x5) != COMPARE
      || GET_MODE (x5) != E_CCmode
      || !memory_operand (operands[2], i1)
      || !register_operand (operands[3], i1))
    return -1;
  x6 = XEXP (x4, 0);
  if (GET_MODE (x6) != E_CCmode)
    return -1;
  x7 = XEXP (x5, 0);
  if (!rtx_equal_p (x7, operands[2]))
    return -1;
  x8 = XEXP (x5, 1);
  if (!rtx_equal_p (x8, operands[0])
      || !register_operand (operands[5], i1)
      || !x86_64_general_operand (operands[6], i1))
    return -1;
  return 0;
}

int
pattern1866 (rtx x1, machine_mode i1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  if (!register_operand (operands[4], E_SImode)
      || GET_MODE (x1) != E_SImode
      || !nonmemory_operand (operands[2], E_SImode))
    return -1;
  x2 = PATTERN (peep2_next_insn (3));
  x3 = XEXP (x2, 1);
  operands[5] = x3;
  if (!register_operand (operands[5], i1))
    return -1;
  x4 = PATTERN (peep2_next_insn (4));
  x5 = XEXP (x4, 1);
  x6 = XEXP (x5, 0);
  operands[6] = x6;
  x7 = XEXP (x5, 1);
  operands[7] = x7;
  return 0;
}

int
pattern1874 (rtx x1, machine_mode i1, machine_mode i2)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  if (GET_MODE (x5) != i2
      || !ix86_carry_flag_operator (operands[4], i2))
    return -1;
  x6 = XEXP (x5, 1);
  if (GET_MODE (x6) != i2
      || !nonimmediate_operand (operands[1], i1)
      || !const_int_operand (operands[6], i2))
    return -1;
  x7 = XEXP (x3, 1);
  if (GET_MODE (x7) != i2)
    return -1;
  x8 = XEXP (x7, 0);
  if (GET_MODE (x8) != i1)
    return -1;
  x9 = XEXP (x8, 0);
  if (GET_MODE (x9) != i1
      || !ix86_carry_flag_operator (operands[5], i1))
    return -1;
  x10 = XVECEXP (x1, 0, 1);
  x11 = XEXP (x10, 1);
  return pattern1873 (x11, 
i1); /* [-1, 0] */
}

int
pattern1884 (rtx x1)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 8);
  if (XWINT (x2, 0) != 12L)
    return -1;
  x3 = XVECEXP (x1, 0, 9);
  if (XWINT (x3, 0) != 44L)
    return -1;
  x4 = XVECEXP (x1, 0, 10);
  if (XWINT (x4, 0) != 13L)
    return -1;
  x5 = XVECEXP (x1, 0, 11);
  if (XWINT (x5, 0) != 45L)
    return -1;
  x6 = XVECEXP (x1, 0, 12);
  if (XWINT (x6, 0) != 14L)
    return -1;
  x7 = XVECEXP (x1, 0, 13);
  if (XWINT (x7, 0) != 46L)
    return -1;
  x8 = XVECEXP (x1, 0, 14);
  if (XWINT (x8, 0) != 15L)
    return -1;
  x9 = XVECEXP (x1, 0, 15);
  if (XWINT (x9, 0) != 47L)
    return -1;
  return 0;
}

 int
recog_4 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  operands[0] = x3;
  res = recog_3 (x1, insn, pnum_clobbers);
  if (res >= 0)
    return res;
  if (GET_CODE (x3) != SUBREG
      || pattern259 (x3) != 0)
    return -1;
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  operands[0] = x5;
  if (!int248_register_operand (operands[0], E_VOIDmode))
    return -1;
  x6 = XEXP (x2, 1);
  operands[1] = x6;
  switch (pattern1354 ())
    {
    case 0:
      if (const0_operand (operands[1], E_QImode)
          && 
#line 1629 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
        return 24; /* *cmpqi_exthi_2 */
      if (general_operand (operands[1], E_QImode)
          && 
#line 1654 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)))
        return 27; /* *cmpqi_exthi_3 */
      break;

    case 1:
      if (const0_operand (operands[1], E_QImode)
          && 
#line 1629 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
        return 25; /* *cmpqi_extsi_2 */
      if (general_operand (operands[1], E_QImode)
          && 
#line 1654 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)))
        return 28; /* *cmpqi_extsi_3 */
      break;

    case 2:
      if (const0_operand (operands[1], E_QImode)
          && (
#line 1629 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        return 26; /* *cmpqi_extdi_2 */
      if (general_operand (operands[1], E_QImode)
          && (
#line 1654 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        return 29; /* *cmpqi_extdi_3 */
      break;

    default:
      break;
    }
  if (GET_CODE (x6) != SUBREG
      || maybe_ne (SUBREG_BYTE (x6), 0)
      || GET_MODE (x6) != E_QImode)
    return -1;
  x7 = XEXP (x6, 0);
  switch (GET_CODE (x7))
    {
    case SIGN_EXTRACT:
    case ZERO_EXTRACT:
      operands[3] = x7;
      x8 = XEXP (x7, 1);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x9 = XEXP (x7, 2);
      if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
        return -1;
      x10 = XEXP (x7, 0);
      operands[1] = x10;
      if (!int248_register_operand (operands[1], E_VOIDmode))
        return -1;
      switch (GET_MODE (operands[2]))
        {
        case E_HImode:
          if (!extract_operator (operands[2], E_HImode)
              || !extract_operator (operands[3], E_HImode)
              || !
#line 1673 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)))
            return -1;
          return 30; /* *cmpqi_exthi_4 */

        case E_SImode:
          if (!extract_operator (operands[2], E_SImode)
              || !extract_operator (operands[3], E_SImode)
              || !
#line 1673 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)))
            return -1;
          return 31; /* *cmpqi_extsi_4 */

        case E_DImode:
          if (!extract_operator (operands[2], E_DImode)
              || !extract_operator (operands[3], E_DImode)
              || !(
#line 1673 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 32; /* *cmpqi_extdi_4 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_12 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  switch (GET_CODE (x4))
    {
    case CONST_INT:
    case CONST_DOUBLE:
    case CONST_VECTOR:
    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x4;
      x5 = XVECEXP (x3, 0, 2);
      if (GET_CODE (x5) != CONST_INT)
        return -1;
      operands[3] = x5;
      x6 = XVECEXP (x3, 0, 1);
      operands[2] = x6;
      switch (pattern966 (x3))
        {
        case 0:
          switch (GET_MODE (operands[1]))
            {
            case E_HFmode:
              if (register_operand (operands[1], E_HFmode)
                  && nonimmediate_operand (operands[2], E_HFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && 
#line 19694 "../../src/gcc/config/i386/i386.md"
(TARGET_AVX512FP16))
                return 1457; /* setcc_hf_mask */
              break;

            case E_V8SImode:
              if (register_operand (operands[1], E_V8SImode)
                  && nonimmediate_operand (operands[2], E_V8SImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 307 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3285; /* avx512vl_cmpv8si3 */
              break;

            case E_V4SImode:
              if (register_operand (operands[1], E_V4SImode)
                  && nonimmediate_operand (operands[2], E_V4SImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 307 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3289; /* avx512vl_cmpv4si3 */
              break;

            case E_V8DImode:
              if (register_operand (operands[1], E_V8DImode)
                  && nonimmediate_operand (operands[2], E_V8DImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 308 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 3291; /* avx512f_cmpv8di3 */
              break;

            case E_V4DImode:
              if (register_operand (operands[1], E_V4DImode)
                  && nonimmediate_operand (operands[2], E_V4DImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 308 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3295; /* avx512vl_cmpv4di3 */
              break;

            case E_V2DImode:
              if (register_operand (operands[1], E_V2DImode)
                  && nonimmediate_operand (operands[2], E_V2DImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 308 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3299; /* avx512vl_cmpv2di3 */
              break;

            case E_V8HFmode:
              if (register_operand (operands[1], E_V8HFmode)
                  && nonimmediate_operand (operands[2], E_V8HFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 311 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return 3309; /* avx512fp16_cmpv8hf3 */
              break;

            case E_V8SFmode:
              if (register_operand (operands[1], E_V8SFmode)
                  && nonimmediate_operand (operands[2], E_V8SFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 312 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3315; /* avx512vl_cmpv8sf3 */
              break;

            case E_V4SFmode:
              if (register_operand (operands[1], E_V4SFmode)
                  && nonimmediate_operand (operands[2], E_V4SFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 312 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3319; /* avx512vl_cmpv4sf3 */
              break;

            case E_V8DFmode:
              if (register_operand (operands[1], E_V8DFmode)
                  && nonimmediate_operand (operands[2], E_V8DFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 313 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 3321; /* avx512f_cmpv8df3 */
              break;

            case E_V4DFmode:
              if (register_operand (operands[1], E_V4DFmode)
                  && nonimmediate_operand (operands[2], E_V4DFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 313 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3325; /* avx512vl_cmpv4df3 */
              break;

            case E_V2DFmode:
              if (register_operand (operands[1], E_V2DFmode)
                  && nonimmediate_operand (operands[2], E_V2DFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 313 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3329; /* avx512vl_cmpv2df3 */
              break;

            case E_V8HImode:
              if (register_operand (operands[1], E_V8HImode)
                  && nonimmediate_operand (operands[2], E_V8HImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4486 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3446; /* avx512vl_cmpv8hi3 */
              break;

            case E_V8BFmode:
              if (register_operand (operands[1], E_V8BFmode)
                  && nonimmediate_operand (operands[2], E_V8BFmode)
                  && const_0_to_31_operand (operands[3], E_VOIDmode)
                  && 
#line 32459 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return 10733; /* avx10_2_cmpbf16_v8bf */
              break;

            default:
              break;
            }
          break;

        case 1:
          switch (GET_MODE (operands[1]))
            {
            case E_V16SImode:
              if (register_operand (operands[1], E_V16SImode)
                  && nonimmediate_operand (operands[2], E_V16SImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 307 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 3281; /* avx512f_cmpv16si3 */
              break;

            case E_V16HFmode:
              if (register_operand (operands[1], E_V16HFmode)
                  && nonimmediate_operand (operands[2], E_V16HFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 310 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return 3305; /* avx512vl_cmpv16hf3 */
              break;

            case E_V16SFmode:
              if (register_operand (operands[1], E_V16SFmode)
                  && nonimmediate_operand (operands[2], E_V16SFmode)
                  && const_0_to_31_operand (operands[3], E_SImode)
                  && (
#line 4394 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 312 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 3311; /* avx512f_cmpv16sf3 */
              break;

            case E_V16QImode:
              if (register_operand (operands[1], E_V16QImode)
                  && nonimmediate_operand (operands[2], E_V16QImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4486 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3438; /* avx512vl_cmpv16qi3 */
              break;

            case E_V16HImode:
              if (register_operand (operands[1], E_V16HImode)
                  && nonimmediate_operand (operands[2], E_V16HImode)
                  && const_0_to_7_operand (operands[3], E_SImode)
                  && (
#line 4486 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return 3444; /* avx512vl_cmpv16hi3 */
              break;

            case E_V16BFmode:
              if (register_operand (operands[1], E_V16BFmode)
                  && nonimmediate_operand (operands[2], E_V16BFmode)
                  && const_0_to_31_operand (operands[3], E_VOIDmode)
                  && 
#line 32459 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return 10731; /* avx10_2_cmpbf16_v16bf */
              break;

            default:
              break;
            }
          break;

        default:
          break;
        }
      if (XWINT (x5, 0) != 0L)
        return -1;
      operands[2] = x6;
      switch (pattern967 (x3))
        {
        case 0:
          if (!(
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3500; /* *avx512vl_eqv16qi3_1 */

        case 1:
          if (!(
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3512; /* *avx512vl_eqv16hi3_1 */

        case 2:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 3568; /* *avx512f_eqv16si3_1 */

        case 3:
          if (!(
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3516; /* *avx512vl_eqv8hi3_1 */

        case 4:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3572; /* *avx512vl_eqv8si3_1 */

        case 5:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3576; /* *avx512vl_eqv4si3_1 */

        case 6:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 3580; /* *avx512f_eqv8di3_1 */

        case 7:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3584; /* *avx512vl_eqv4di3_1 */

        case 8:
          if (!(
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3588; /* *avx512vl_eqv2di3_1 */

        default:
          return -1;
        }

    case US_MINUS:
      switch (pattern418 (x3))
        {
        case 0:
          if (!(
#line 4788 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && ix86_pre_reload_split ()
  && ix86_binary_operator_ok (US_MINUS, V16QImode, operands)
  && (INTVAL (operands[4]) & 3) == 0) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3648; /* *avx512vl_ucmpv16qi3_1 */

        case 1:
          if (!(
#line 4788 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && ix86_pre_reload_split ()
  && ix86_binary_operator_ok (US_MINUS, V16HImode, operands)
  && (INTVAL (operands[4]) & 3) == 0) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3654; /* *avx512vl_ucmpv16hi3_1 */

        case 2:
          if (!(
#line 4788 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && ix86_pre_reload_split ()
  && ix86_binary_operator_ok (US_MINUS, V8HImode, operands)
  && (INTVAL (operands[4]) & 3) == 0) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 3656; /* *avx512vl_ucmpv8hi3_1 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_20 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  operands[1] = x3;
  switch (GET_CODE (x2))
    {
    case SIGN_EXTRACT:
      x4 = XEXP (x2, 1);
      switch (XWINT (x4, 0))
        {
        case 8L:
          x5 = XEXP (x2, 2);
          if (XWINT (x5, 0) != 8L
              || !int248_register_operand (operands[1], E_VOIDmode))
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_HImode:
              if (!register_operand (operands[0], E_HImode)
                  || GET_MODE (x2) != E_HImode)
                return -1;
              return 118; /* *extvhi */

            case E_SImode:
              if (!register_operand (operands[0], E_SImode)
                  || GET_MODE (x2) != E_SImode)
                return -1;
              return 119; /* *extvsi */

            default:
              return -1;
            }

        case 1L:
          if (pnum_clobbers == NULL)
            return -1;
          x5 = XEXP (x2, 2);
          if (XWINT (x5, 0) != 0L)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_SImode:
              if (!register_operand (operands[0], E_SImode)
                  || GET_MODE (x2) != E_SImode
                  || !register_operand (operands[1], E_SImode))
                return -1;
              *pnum_clobbers = 1;
              return 120; /* *extvsi_1_0 */

            case E_DImode:
              if (!register_operand (operands[0], E_DImode)
                  || GET_MODE (x2) != E_DImode
                  || !register_operand (operands[1], E_DImode)
                  || !
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              *pnum_clobbers = 1;
              return 121; /* *extvdi_1_0 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case ZERO_EXTRACT:
      x4 = XEXP (x2, 1);
      if (XWINT (x4, 0) != 8L)
        return -1;
      x5 = XEXP (x2, 2);
      if (XWINT (x5, 0) != 8L
          || !int248_register_operand (operands[1], E_VOIDmode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_HImode:
          if (!register_operand (operands[0], E_HImode)
              || GET_MODE (x2) != E_HImode)
            return -1;
          return 122; /* *extzvhi */

        case E_SImode:
          if (!register_operand (operands[0], E_SImode)
              || GET_MODE (x2) != E_SImode)
            return -1;
          return 123; /* *extzvsi */

        case E_DImode:
          if (!register_operand (operands[0], E_DImode)
              || GET_MODE (x2) != E_DImode
              || !
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return -1;
          return 124; /* *extzvdi */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_23 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
    case MEM:
      switch (pattern1 (x1, pnum_clobbers))
        {
        case 0:
          if (!(
#line 16643 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (8 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 8 * BITS_PER_UNIT - 1))
	 == (2 * 8 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1129; /* *ashrti3_doubleword_mask_1 */

        case 1:
          x4 = XEXP (x2, 1);
          switch (GET_CODE (x4))
            {
            case CONST_INT:
              switch (pattern255 (x1))
                {
                case 0:
                  return 138; /* *insvqi_3 */

                case 1:
                  return 140; /* *insvqi_3 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 142; /* *insvqi_3 */
                  break;

                default:
                  break;
                }
              break;

            case SUBREG:
              if (pnum_clobbers != NULL
                  && pattern421 (x1, 
E_TImode) == 0
                  && (
#line 16582 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (8 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 8 * BITS_PER_UNIT - 1))
	 == (2 * 8 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                {
                  *pnum_clobbers = 1;
                  return 1125; /* *ashrti3_doubleword_mask */
                }
              break;

            default:
              break;
            }
          operands[2] = x4;
          switch (pattern256 (x1, pnum_clobbers))
            {
            case 0:
              switch (GET_MODE (operands[0]))
                {
                case E_TImode:
                  if (pnum_clobbers == NULL
                      || pattern738 (x2, 
E_TImode, 
E_QImode) != 0
                      || !
#line 1196 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return -1;
                  *pnum_clobbers = 1;
                  return 1133; /* ashrti3_doubleword */

                case E_QImode:
                  if (pattern623 (x2, 
E_QImode) != 0)
                    return -1;
                  if (
#line 17532 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ASHIFTRT, QImode, operands, TARGET_APX_NDD)
   && TARGET_APX_NF))
                    return 1208; /* *ashrqi3_1_nf */
                  if (pnum_clobbers == NULL
                      || !
#line 17532 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ASHIFTRT, QImode, operands, TARGET_APX_NDD)
   && true))
                    return -1;
                  *pnum_clobbers = 1;
                  return 1209; /* *ashrqi3_1 */

                case E_HImode:
                  if (pattern623 (x2, 
E_HImode) != 0)
                    return -1;
                  if (
#line 17532 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ASHIFTRT, HImode, operands, TARGET_APX_NDD)
   && TARGET_APX_NF))
                    return 1210; /* *ashrhi3_1_nf */
                  if (pnum_clobbers == NULL
                      || !
#line 17532 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ASHIFTRT, HImode, operands, TARGET_APX_NDD)
   && true))
                    return -1;
                  *pnum_clobbers = 1;
                  return 1211; /* *ashrhi3_1 */

                case E_V4HImode:
                  if (pattern738 (x2, 
E_V4HImode, 
E_DImode) != 0
                      || !
#line 3854 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX || TARGET_MMX_WITH_SSE))
                    return -1;
                  return 2198; /* mmx_ashrv4hi3 */

                case E_V2SImode:
                  if (pattern738 (x2, 
E_V2SImode, 
E_DImode) != 0
                      || !
#line 3854 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX || TARGET_MMX_WITH_SSE))
                    return -1;
                  return 2199; /* mmx_ashrv2si3 */

                case E_V2HImode:
                  if (pattern738 (x2, 
E_V2HImode, 
E_DImode) != 0
                      || !
#line 3945 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE2))
                    return -1;
                  return 2212; /* ashrv2hi3 */

                case E_V2QImode:
                  if (pnum_clobbers == NULL
                      || pattern738 (x2, 
E_V2QImode, 
E_QImode) != 0
                      || !
#line 4007 "../../src/gcc/config/i386/mmx.md"
(!TARGET_PARTIAL_REG_STALL || optimize_size))
                    return -1;
                  *pnum_clobbers = 1;
                  return 2216; /* ashrv2qi3 */

                default:
                  return -1;
                }

            case 1:
              if (!
#line 17638 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                return -1;
              *pnum_clobbers = 1;
              return 1217; /* *ashrqi3_1_slp */

            case 2:
              if (!
#line 17638 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                return -1;
              *pnum_clobbers = 1;
              return 1219; /* *ashrhi3_1_slp */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case ASHIFT:
      x5 = XEXP (x1, 0);
      operands[0] = x5;
      x6 = XEXP (x3, 0);
      operands[1] = x6;
      x7 = XEXP (x3, 1);
      operands[2] = x7;
      if (!const_int_operand (operands[2], E_QImode))
        return -1;
      x4 = XEXP (x2, 1);
      operands[3] = x4;
      if (!const_int_operand (operands[3], E_QImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_TImode:
          if (pnum_clobbers == NULL
              || pattern755 (x2, 
E_TImode) != 0
              || !(
#line 17988 "../../src/gcc/config/i386/i386.md"
(INTVAL (operands[2]) == INTVAL (operands[3])
   && UINTVAL (operands[2]) < 8 * BITS_PER_UNIT) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1281; /* *extendti2_doubleword_highpart */

        case E_V2DImode:
          if (pattern755 (x2, 
E_V2DImode) != 0)
            return -1;
          if (
#line 18006 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT && TARGET_STV && TARGET_AVX512VL
   && INTVAL (operands[2]) == INTVAL (operands[3])
   && UINTVAL (operands[2]) < 32))
            return 1282; /* *extendv2di2_highpart_stv */
          if (!
#line 18023 "../../src/gcc/config/i386/i386.md"
(!TARGET_AVX512VL
   && INTVAL (operands[2]) == INTVAL (operands[3])
   && UINTVAL (operands[2]) < 32
   && ix86_pre_reload_split ()))
            return -1;
          return 1283; /* *extendv2di2_highpart_stv_noavx512vl */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_28 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x4;
      switch (GET_MODE (operands[0]))
        {
        case E_DImode:
          if (GET_MODE (x3) == E_DImode)
            {
              if (register_operand (operands[0], E_DImode))
                {
                  switch (GET_MODE (operands[1]))
                    {
                    case E_SImode:
                      if (nonimmediate_operand (operands[1], E_SImode)
                          && 
#line 4971 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                        return 184; /* *extendsidi2_rex64 */
                      break;

                    case E_QImode:
                      if (nonimmediate_operand (operands[1], E_QImode)
                          && 
#line 5130 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                        return 187; /* extendqidi2 */
                      break;

                    case E_HImode:
                      if (nonimmediate_operand (operands[1], E_HImode)
                          && 
#line 5130 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                        return 188; /* extendhidi2 */
                      break;

                    default:
                      break;
                    }
                }
              if (pnum_clobbers != NULL
                  && nonimmediate_operand (operands[0], E_DImode)
                  && register_operand (operands[1], E_SImode)
                  && 
#line 4985 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT))
                {
                  *pnum_clobbers = 2;
                  return 185; /* extendsidi2_1 */
                }
            }
          break;

        case E_TImode:
          if (pattern260 (x3, pnum_clobbers, 
E_DImode, 
E_TImode) == 0
              && 
#line 4993 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            {
              *pnum_clobbers = 2;
              return 186; /* extendditi2 */
            }
          break;

        case E_SImode:
          if (register_operand (operands[0], E_SImode)
              && GET_MODE (x3) == E_SImode)
            {
              switch (GET_MODE (operands[1]))
                {
                case E_HImode:
                  if (nonimmediate_operand (operands[1], E_HImode))
                    return 189; /* extendhisi2 */
                  break;

                case E_QImode:
                  if (nonimmediate_operand (operands[1], E_QImode))
                    return 191; /* extendqisi2 */
                  break;

                default:
                  break;
                }
            }
          break;

        case E_HImode:
          if (register_operand (operands[0], E_HImode)
              && GET_MODE (x3) == E_HImode
              && nonimmediate_operand (operands[1], E_QImode))
            return 193; /* extendqihi2 */
          break;

        default:
          break;
        }
      if (GET_CODE (x4) != SUBREG
          || pattern259 (x4) != 0)
        return -1;
      x5 = XEXP (x4, 0);
      x6 = XEXP (x5, 0);
      operands[1] = x6;
      if (!int248_register_operand (operands[1], E_VOIDmode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_HImode:
          switch (pattern1355 (x3, 
E_HImode))
            {
            case 0:
              return 194; /* *extendqihi_ext_1 */

            case 1:
              return 195; /* *extendqihi_ext_1 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 196; /* *extendqihi_ext_1 */

            default:
              return -1;
            }

        case E_SImode:
          switch (pattern1355 (x3, 
E_SImode))
            {
            case 0:
              return 197; /* *extendqisi_ext_1 */

            case 1:
              return 198; /* *extendqisi_ext_1 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 199; /* *extendqisi_ext_1 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case SS_TRUNCATE:
      if (GET_MODE (x4) != E_V2HImode)
        return -1;
      x5 = XEXP (x4, 0);
      if (GET_CODE (x5) != FIX
          || GET_MODE (x5) != E_V2SImode
          || !register_operand (operands[0], E_V2SImode)
          || GET_MODE (x3) != E_V2SImode)
        return -1;
      x6 = XEXP (x5, 0);
      operands[1] = x6;
      if (!nonimmediate_operand (operands[1], E_V2SFmode)
          || !
#line 1612 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW_A))
        return -1;
      return 2082; /* mmx_pf2iw */

    case VEC_SELECT:
      x7 = XEXP (x4, 1);
      if (GET_CODE (x7) != PARALLEL)
        return -1;
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      switch (XVECLEN (x7, 0))
        {
        case 4:
          if (pattern608 (x3) != 0
              || !
#line 5011 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE4_1 && TARGET_MMX_WITH_SSE))
            return -1;
          return 2304; /* sse4_1_sign_extendv4qiv4hi2 */

        case 2:
          switch (pattern609 (x3))
            {
            case 0:
              if (!
#line 5043 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE4_1 && TARGET_MMX_WITH_SSE))
                return -1;
              return 2306; /* sse4_1_sign_extendv2hiv2si2 */

            case 1:
              if (!
#line 5075 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE4_1 && TARGET_MMX_WITH_SSE))
                return -1;
              return 2308; /* sse4_1_sign_extendv2qiv2si2 */

            case 2:
              if (!
#line 5101 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE4_1))
                return -1;
              return 2310; /* sse4_1_sign_extendv2qiv2hi2 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_38 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x3;
      res = recog_35 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      if (pnum_clobbers == NULL
          || GET_CODE (x3) != SUBREG
          || maybe_ne (SUBREG_BYTE (x3), 0))
        return -1;
      x4 = XEXP (x3, 0);
      switch (GET_CODE (x4))
        {
        case SIGN_EXTRACT:
        case ZERO_EXTRACT:
          operands[3] = x4;
          x5 = XEXP (x4, 1);
          if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
            return -1;
          x6 = XEXP (x4, 2);
          if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 8]
              || GET_MODE (x2) != E_QImode
              || GET_MODE (x3) != E_QImode)
            return -1;
          x7 = XEXP (x4, 0);
          operands[2] = x7;
          switch (pattern1265 (x1))
            {
            case 0:
              if (
#line 12768 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                {
                  *pnum_clobbers = 1;
                  return 731; /* *andqi_exthi_1_slp */
                }
              break;

            case 1:
              if (
#line 12768 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                {
                  *pnum_clobbers = 1;
                  return 734; /* *andqi_extsi_1_slp */
                }
              break;

            case 2:
              if ((
#line 12768 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                {
                  *pnum_clobbers = 1;
                  return 737; /* *andqi_extdi_1_slp */
                }
              break;

            case 3:
              *pnum_clobbers = 1;
              return 755; /* *andqi_exthi_0 */

            case 4:
              *pnum_clobbers = 1;
              return 758; /* *andqi_extsi_0 */

            case 5:
              if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                {
                  *pnum_clobbers = 1;
                  return 761; /* *andqi_extdi_0 */
                }
              break;

            default:
              break;
            }
          x8 = XEXP (x2, 1);
          if (GET_CODE (x8) != SUBREG)
            return -1;
          switch (pattern1268 (x1))
            {
            case 0:
              if (!
#line 12801 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                return -1;
              *pnum_clobbers = 1;
              return 740; /* *andqi_exthi_2_slp */

            case 1:
              if (!
#line 12801 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                return -1;
              *pnum_clobbers = 1;
              return 743; /* *andqi_extsi_2_slp */

            case 2:
              if (!(
#line 12801 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              *pnum_clobbers = 1;
              return 746; /* *andqi_extdi_2_slp */

            case 3:
              *pnum_clobbers = 1;
              return 764; /* *andqi_ext2hi_0 */

            case 4:
              *pnum_clobbers = 1;
              return 767; /* *andqi_ext2si_0 */

            case 5:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              *pnum_clobbers = 1;
              return 770; /* *andqi_ext2di_0 */

            default:
              return -1;
            }

        case ROTATE:
          if (GET_MODE (x4) != E_SImode)
            return -1;
          x7 = XEXP (x4, 0);
          if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + -2])
            return -1;
          x9 = XEXP (x1, 0);
          operands[0] = x9;
          x5 = XEXP (x4, 1);
          operands[2] = x5;
          if (!register_operand (operands[2], E_QImode))
            return -1;
          x8 = XEXP (x2, 1);
          operands[1] = x8;
          switch (GET_MODE (operands[0]))
            {
            case E_QImode:
              if (pattern1356 (x2, 
E_QImode) != 0
                  || !
#line 18942 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()))
                return -1;
              *pnum_clobbers = 1;
              return 1409; /* *btrqi_1 */

            case E_HImode:
              if (pattern1356 (x2, 
E_HImode) != 0
                  || !
#line 18942 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()))
                return -1;
              *pnum_clobbers = 1;
              return 1410; /* *btrhi_1 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case NOT:
      x9 = XEXP (x1, 0);
      operands[0] = x9;
      x4 = XEXP (x3, 0);
      operands[1] = x4;
      res = recog_36 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      if (pnum_clobbers == NULL
          || !register_operand (operands[0], E_QImode)
          || GET_CODE (x4) != SUBREG
          || maybe_ne (SUBREG_BYTE (x4), 0)
          || GET_MODE (x4) != E_QImode)
        return -1;
      x7 = XEXP (x4, 0);
      if (GET_CODE (x7) != LSHIFTRT)
        return -1;
      x8 = XEXP (x2, 1);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 1]
          || GET_MODE (x2) != E_QImode
          || GET_MODE (x3) != E_QImode)
        return -1;
      x10 = XEXP (x7, 0);
      operands[1] = x10;
      x11 = XEXP (x7, 1);
      operands[2] = x11;
      if (!register_operand (operands[2], E_QImode))
        return -1;
      switch (GET_MODE (x7))
        {
        case E_SImode:
          if (!register_operand (operands[1], E_SImode)
              || !
#line 19344 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()))
            return -1;
          *pnum_clobbers = 1;
          return 1436; /* *btsi_setncqi */

        case E_DImode:
          if (!register_operand (operands[1], E_DImode)
              || !(
#line 19344 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1437; /* *btdi_setncqi */

        default:
          return -1;
        }

    case UNSPEC:
      x9 = XEXP (x1, 0);
      operands[0] = x9;
      switch (XVECLEN (x3, 0))
        {
        case 3:
          x12 = XVECEXP (x3, 0, 2);
          if (GET_CODE (x12) != CONST_INT)
            return -1;
          x13 = XVECEXP (x3, 0, 0);
          operands[1] = x13;
          x14 = XVECEXP (x3, 0, 1);
          operands[2] = x14;
          switch (XINT (x3, 1))
            {
            case 59:
              operands[3] = x12;
              res = recog_37 (x1, insn, pnum_clobbers);
              if (res >= 0)
                return res;
              if (XWINT (x12, 0) != 0L)
                return -1;
              switch (pattern971 (x2))
                {
                case 0:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3501; /* *avx512vl_eqv16qi3_mask_1 */

                case 1:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3513; /* *avx512vl_eqv16hi3_mask_1 */

                case 2:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 3569; /* *avx512f_eqv16si3_mask_1 */

                case 3:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3517; /* *avx512vl_eqv8hi3_mask_1 */

                case 4:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3573; /* *avx512vl_eqv8si3_mask_1 */

                case 5:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3577; /* *avx512vl_eqv4si3_mask_1 */

                case 6:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 3581; /* *avx512f_eqv8di3_mask_1 */

                case 7:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3585; /* *avx512vl_eqv4di3_mask_1 */

                case 8:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 3589; /* *avx512vl_eqv2di3_mask_1 */

                default:
                  return -1;
                }

            case 157:
              if (XWINT (x12, 0) == 0L)
                {
                  switch (pattern971 (x2))
                    {
                    case 0:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3503; /* *avx512vl_eqv16qi3_mask_1 */
                      break;

                    case 1:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3515; /* *avx512vl_eqv16hi3_mask_1 */
                      break;

                    case 2:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                        return 3571; /* *avx512f_eqv16si3_mask_1 */
                      break;

                    case 3:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4581 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3519; /* *avx512vl_eqv8hi3_mask_1 */
                      break;

                    case 4:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3575; /* *avx512vl_eqv8si3_mask_1 */
                      break;

                    case 5:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3579; /* *avx512vl_eqv4si3_mask_1 */
                      break;

                    case 6:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                        return 3583; /* *avx512f_eqv8di3_mask_1 */
                      break;

                    case 7:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3587; /* *avx512vl_eqv4di3_mask_1 */
                      break;

                    case 8:
                      if ((
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4670 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return 3591; /* *avx512vl_eqv2di3_mask_1 */
                      break;

                    default:
                      break;
                    }
                }
              operands[3] = x12;
              if (!const_0_to_7_operand (operands[3], E_SImode))
                return -1;
              switch (pattern1070 (x2))
                {
                case 0:
                  switch (pattern740 ())
                    {
                    case 0:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4596 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3523; /* avx512vl_ucmpv16qi3_mask */

                    case 1:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4596 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3529; /* avx512vl_ucmpv16hi3_mask */

                    case 2:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                        return -1;
                      return 3593; /* avx512f_ucmpv16si3_mask */

                    default:
                      return -1;
                    }

                case 1:
                  switch (pattern741 ())
                    {
                    case 0:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4596 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3531; /* avx512vl_ucmpv8hi3_mask */

                    case 1:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3595; /* avx512vl_ucmpv8si3_mask */

                    case 2:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3597; /* avx512vl_ucmpv4si3_mask */

                    case 3:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                        return -1;
                      return 3599; /* avx512f_ucmpv8di3_mask */

                    case 4:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3601; /* avx512vl_ucmpv4di3_mask */

                    case 5:
                      if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4685 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                        return -1;
                      return 3603; /* avx512vl_ucmpv2di3_mask */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case 2:
          x13 = XVECEXP (x3, 0, 0);
          operands[1] = x13;
          x14 = XVECEXP (x3, 0, 1);
          operands[2] = x14;
          switch (XINT (x3, 1))
            {
            case 158:
              switch (pattern742 (x2))
                {
                case 0:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 506 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8118; /* avx512vl_testmv16qi3_mask */

                case 1:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 508 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8122; /* avx512vl_testmv16hi3_mask */

                case 2:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8126; /* avx512f_testmv16si3_mask */

                case 3:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 509 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8124; /* avx512vl_testmv8hi3_mask */

                case 4:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8128; /* avx512vl_testmv8si3_mask */

                case 5:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8130; /* avx512vl_testmv4si3_mask */

                case 6:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8132; /* avx512f_testmv8di3_mask */

                case 7:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8134; /* avx512vl_testmv4di3_mask */

                case 8:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19065 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8136; /* avx512vl_testmv2di3_mask */

                default:
                  return -1;
                }

            case 159:
              switch (pattern742 (x2))
                {
                case 0:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 506 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8142; /* avx512vl_testnmv16qi3_mask */

                case 1:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 508 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8146; /* avx512vl_testnmv16hi3_mask */

                case 2:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8150; /* avx512f_testnmv16si3_mask */

                case 3:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 509 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW))))
                    return -1;
                  return 8148; /* avx512vl_testnmv8hi3_mask */

                case 4:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8152; /* avx512vl_testnmv8si3_mask */

                case 5:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8154; /* avx512vl_testnmv4si3_mask */

                case 6:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8156; /* avx512f_testnmv8di3_mask */

                case 7:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8158; /* avx512vl_testnmv4di3_mask */

                case 8:
                  if (!(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19076 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                    return -1;
                  return 8160; /* avx512vl_testnmv2di3_mask */

                default:
                  return -1;
                }

            case 193:
              if (!const_0_to_255_operand (operands[2], E_VOIDmode))
                return -1;
              x8 = XEXP (x2, 1);
              switch (GET_CODE (x8))
                {
                case REG:
                case SUBREG:
                  operands[3] = x8;
                  switch (GET_MODE (operands[0]))
                    {
                    case E_HImode:
                      if (pattern283 (x2, 
E_HImode) != 0)
                        return -1;
                      switch (GET_MODE (operands[1]))
                        {
                        case E_V16HFmode:
                          if (!vector_operand (operands[1], E_V16HFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V16HFmode)) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
                            return -1;
                          return 9994; /* avx512dq_fpclassv16hf_mask */

                        case E_V16SFmode:
                          if (!vector_operand (operands[1], E_V16SFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V16SFmode)) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                            return -1;
                          return 9998; /* avx512dq_fpclassv16sf_mask */

                        default:
                          return -1;
                        }

                    case E_QImode:
                      if (pattern283 (x2, 
E_QImode) != 0)
                        return -1;
                      switch (GET_MODE (operands[1]))
                        {
                        case E_V8HFmode:
                          if (!vector_operand (operands[1], E_V8HFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V8HFmode)) && 
#line 526 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
                            return -1;
                          return 9996; /* avx512dq_fpclassv8hf_mask */

                        case E_V8SFmode:
                          if (!vector_operand (operands[1], E_V8SFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V8SFmode)) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                            return -1;
                          return 10000; /* avx512dq_fpclassv8sf_mask */

                        case E_V4SFmode:
                          if (!vector_operand (operands[1], E_V4SFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V4SFmode)) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                            return -1;
                          return 10002; /* avx512dq_fpclassv4sf_mask */

                        case E_V8DFmode:
                          if (!vector_operand (operands[1], E_V8DFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V8DFmode)) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                            return -1;
                          return 10004; /* avx512dq_fpclassv8df_mask */

                        case E_V4DFmode:
                          if (!vector_operand (operands[1], E_V4DFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V4DFmode)) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                            return -1;
                          return 10006; /* avx512dq_fpclassv4df_mask */

                        case E_V2DFmode:
                          if (!vector_operand (operands[1], E_V2DFmode)
                              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29867 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V2DFmode)) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                            return -1;
                          return 10008; /* avx512dq_fpclassv2df_mask */

                        default:
                          return -1;
                        }

                    default:
                      return -1;
                    }

                case CONST_INT:
                  if (XWINT (x8, 0) != 1L
                      || !register_operand (operands[0], E_QImode)
                      || GET_MODE (x2) != E_QImode
                      || GET_MODE (x3) != E_QImode)
                    return -1;
                  switch (GET_MODE (operands[1]))
                    {
                    case E_V8HFmode:
                      if (!nonimmediate_operand (operands[1], E_V8HFmode)
                          || !(
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V8HFmode)) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
                        return -1;
                      return 10009; /* avx512dq_vmfpclassv8hf */

                    case E_V4SFmode:
                      if (!nonimmediate_operand (operands[1], E_V4SFmode)
                          || !
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V4SFmode)))
                        return -1;
                      return 10011; /* avx512dq_vmfpclassv4sf */

                    case E_V2DFmode:
                      if (!nonimmediate_operand (operands[1], E_V2DFmode)
                          || !(
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V2DFmode)) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                        return -1;
                      return 10013; /* avx512dq_vmfpclassv2df */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            case 214:
              if (GET_MODE (x3) != E_HImode
                  || !register_operand (operands[0], E_HImode)
                  || GET_MODE (x2) != E_HImode
                  || !register_operand (operands[1], E_V16QImode)
                  || !nonimmediate_operand (operands[2], E_V16QImode))
                return -1;
              x8 = XEXP (x2, 1);
              operands[3] = x8;
              if (!register_operand (operands[3], E_HImode)
                  || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 30934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BITALG) && 
#line 327 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              return 10330; /* avx512vl_vpshufbitqmbv16qi_mask */

            case 262:
              if (!const_0_to_255_operand (operands[2], E_VOIDmode))
                return -1;
              x8 = XEXP (x2, 1);
              operands[3] = x8;
              switch (GET_MODE (operands[0]))
                {
                case E_HImode:
                  if (pattern1071 (x2, 
E_HImode, 
E_V16BFmode) != 0
                      || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 32448 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256)))
                    return -1;
                  return 10726; /* avx10_2_fpclassbf16_v16bf_mask */

                case E_QImode:
                  if (pattern1071 (x2, 
E_QImode, 
E_V8BFmode) != 0
                      || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 32448 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256)))
                    return -1;
                  return 10728; /* avx10_2_fpclassbf16_v8bf_mask */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    case AND:
      if (GET_MODE (x3) != E_QImode)
        return -1;
      x4 = XEXP (x3, 0);
      if (pattern83 (x4, 
E_QImode, 
193) != 0)
        return -1;
      x15 = XEXP (x3, 1);
      if (x15 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return -1;
      x9 = XEXP (x1, 0);
      operands[0] = x9;
      if (!register_operand (operands[0], E_QImode)
          || GET_MODE (x2) != E_QImode)
        return -1;
      x16 = XVECEXP (x4, 0, 0);
      operands[1] = x16;
      x17 = XVECEXP (x4, 0, 1);
      operands[2] = x17;
      if (!const_0_to_255_operand (operands[2], E_VOIDmode))
        return -1;
      x8 = XEXP (x2, 1);
      operands[3] = x8;
      if (!register_operand (operands[3], E_QImode))
        return -1;
      switch (GET_MODE (operands[1]))
        {
        case E_V8HFmode:
          if (!nonimmediate_operand (operands[1], E_V8HFmode)
              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V8HFmode)) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
            return -1;
          return 10010; /* avx512dq_vmfpclassv8hf_mask */

        case E_V4SFmode:
          if (!nonimmediate_operand (operands[1], E_V4SFmode)
              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V4SFmode))))
            return -1;
          return 10012; /* avx512dq_vmfpclassv4sf_mask */

        case E_V2DFmode:
          if (!nonimmediate_operand (operands[1], E_V2DFmode)
              || !(
#line 122 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29882 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || VALID_AVX512FP16_REG_MODE(V2DFmode)) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
            return -1;
          return 10014; /* avx512dq_vmfpclassv2df_mask */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_75 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x3, 1);
  operands[2] = x5;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      if (!register_operand (operands[0], E_SImode)
          || GET_MODE (x2) != E_SImode
          || GET_MODE (x3) != E_HImode
          || !nonimmediate_operand (operands[1], E_HImode)
          || !immediate_operand (operands[2], E_HImode))
        return -1;
      if (
#line 10643 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_ZU && TARGET_APX_NF))
        return 596; /* *imulhisizu_nf */
      if (pnum_clobbers == NULL
          || !
#line 10643 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_ZU && true))
        return -1;
      *pnum_clobbers = 1;
      return 597; /* *imulhisizu */

    case E_DImode:
      if (!register_operand (operands[0], E_DImode)
          || GET_MODE (x2) != E_DImode)
        return -1;
      switch (GET_MODE (x3))
        {
        case E_HImode:
          if (!nonimmediate_operand (operands[1], E_HImode)
              || !immediate_operand (operands[2], E_HImode))
            return -1;
          if (
#line 10643 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_ZU && TARGET_APX_NF))
            return 598; /* *imulhidizu_nf */
          if (pnum_clobbers == NULL
              || !
#line 10643 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_ZU && true))
            return -1;
          *pnum_clobbers = 1;
          return 599; /* *imulhidizu */

        case E_SImode:
          if (!nonimmediate_operand (operands[1], E_SImode)
              || !x86_64_general_operand (operands[2], E_SImode))
            return -1;
          if (
#line 10655 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && TARGET_APX_NF))
            return 600; /* *mulsi3_1_zext_nf */
          if (pnum_clobbers == NULL
              || !
#line 10655 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && true))
            return -1;
          *pnum_clobbers = 1;
          return 601; /* *mulsi3_1_zext */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_77 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case NEG:
      if (pnum_clobbers == NULL)
        return -1;
      x4 = XEXP (x1, 0);
      if (GET_CODE (x4) != REG
          || REGNO (x4) != 17)
        return -1;
      x5 = XEXP (x3, 0);
      operands[2] = x5;
      x6 = XEXP (x2, 1);
      operands[1] = x6;
      switch (GET_MODE (x3))
        {
        case E_QImode:
          if (!general_operand (operands[2], E_QImode)
              || !nonimmediate_operand (operands[1], E_QImode)
              || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 314; /* *addqi_3 */

        case E_HImode:
          if (!general_operand (operands[2], E_HImode)
              || !nonimmediate_operand (operands[1], E_HImode)
              || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 315; /* *addhi_3 */

        case E_SImode:
          if (!x86_64_general_operand (operands[2], E_SImode)
              || !nonimmediate_operand (operands[1], E_SImode)
              || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 316; /* *addsi_3 */

        case E_DImode:
          if (!x86_64_general_operand (operands[2], E_DImode)
              || !nonimmediate_operand (operands[1], E_DImode)
              || !(
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 317; /* *adddi_3 */

        default:
          return -1;
        }

    case REG:
    case SUBREG:
    case MEM:
      if (pnum_clobbers == NULL)
        return -1;
      operands[1] = x3;
      x4 = XEXP (x1, 0);
      if (GET_CODE (x4) != REG
          || REGNO (x4) != 17)
        return -1;
      x6 = XEXP (x2, 1);
      operands[2] = x6;
      switch (GET_MODE (operands[1]))
        {
        case E_DImode:
          if (!nonimmediate_operand (operands[1], E_DImode)
              || !x86_64_immediate_operand (operands[2], E_DImode)
              || !
#line 7326 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_match_ccmode (insn, CCGCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 319; /* *adddi_4 */

        case E_QImode:
          if (!nonimmediate_operand (operands[1], E_QImode)
              || !const_int_operand (operands[2], E_QImode)
              || !
#line 7371 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 320; /* *addqi_4 */

        case E_HImode:
          if (!nonimmediate_operand (operands[1], E_HImode)
              || !const_int_operand (operands[2], E_HImode)
              || !
#line 7371 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 321; /* *addhi_4 */

        case E_SImode:
          if (!nonimmediate_operand (operands[1], E_SImode)
              || !const_int_operand (operands[2], E_SImode)
              || !
#line 7371 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 322; /* *addsi_4 */

        default:
          return -1;
        }

    case PLUS:
      if (pnum_clobbers == NULL)
        return -1;
      x4 = XEXP (x1, 0);
      if (GET_CODE (x4) != REG
          || REGNO (x4) != 17)
        return -1;
      x5 = XEXP (x3, 0);
      operands[1] = x5;
      x7 = XEXP (x3, 1);
      operands[2] = x7;
      x6 = XEXP (x2, 1);
      if (x6 == const_int_rtx[MAX_SAVED_CONST_INT + 0])
        {
          switch (pattern47 (x3))
            {
            case 0:
              if (
#line 7410 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                {
                  *pnum_clobbers = 1;
                  return 323; /* *addqi_5 */
                }
              break;

            case 1:
              if (
#line 7410 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                {
                  *pnum_clobbers = 1;
                  return 324; /* *addhi_5 */
                }
              break;

            case 2:
              if (
#line 7410 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                {
                  *pnum_clobbers = 1;
                  return 325; /* *addsi_5 */
                }
              break;

            case 3:
              if ((
#line 7410 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                {
                  *pnum_clobbers = 1;
                  return 326; /* *adddi_5 */
                }
              break;

            default:
              break;
            }
        }
      if (GET_MODE (x4) != E_CCCmode
          || GET_MODE (x2) != E_CCCmode
          || !rtx_equal_p (x6, operands[2]))
        return -1;
      switch (pattern47 (x3))
        {
        case 0:
          if (!
#line 10025 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 543; /* *addqi3_cconly_overflow_2 */

        case 1:
          if (!
#line 10025 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 544; /* *addhi3_cconly_overflow_2 */

        case 2:
          if (!
#line 10025 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 545; /* *addsi3_cconly_overflow_2 */

        case 3:
          if (!(
#line 10025 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 546; /* *adddi3_cconly_overflow_2 */

        default:
          return -1;
        }

    case AND:
      x6 = XEXP (x2, 1);
      if (x6 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x4 = XEXP (x1, 0);
      if (GET_CODE (x4) != REG
          || REGNO (x4) != 17)
        return -1;
      x5 = XEXP (x3, 0);
      switch (GET_CODE (x5))
        {
        case REG:
        case SUBREG:
        case MEM:
          operands[0] = x5;
          x7 = XEXP (x3, 1);
          operands[1] = x7;
          switch (GET_MODE (x3))
            {
            case E_DImode:
              if (nonimmediate_operand (operands[0], E_DImode)
                  && x86_64_szext_nonmemory_operand (operands[1], E_DImode)
                  && 
#line 12071 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_match_ccmode
	(insn,
	 /* If we are going to emit testl instead of testq, and the operands[1]
	    constant might have the SImode sign bit set, make sure the sign
	    flag isn't tested, because the instruction will set the sign flag
	    based on bit 31 rather than bit 63.  If it isn't CONST_INT,
	    conservatively assume it might have bit 31 set.  */
	 (satisfies_constraint_Z (operands[1])
	  && (!CONST_INT_P (operands[1])
	      || val_signbit_known_set_p (SImode, INTVAL (operands[1]))))
	 ? CCZmode : CCNOmode)))
                return 682; /* *testdi_1 */
              break;

            case E_QImode:
              if (nonimmediate_operand (operands[0], E_QImode)
                  && nonmemory_operand (operands[1], E_QImode))
                {
                  if (
#line 12096 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn,
		      CONST_INT_P (operands[1])
		      && INTVAL (operands[1]) >= 0 ? CCNOmode : CCZmode)))
                    return 683; /* *testqi_1_maybe_si */
                  if (
#line 12127 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                    return 684; /* *testqi_1 */
                }
              break;

            case E_HImode:
              if (nonimmediate_operand (operands[0], E_HImode)
                  && nonmemory_operand (operands[1], E_HImode)
                  && 
#line 12127 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                return 685; /* *testhi_1 */
              break;

            case E_SImode:
              if (nonimmediate_operand (operands[0], E_SImode)
                  && x86_64_szext_nonmemory_operand (operands[1], E_SImode)
                  && 
#line 12127 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                return 686; /* *testsi_1 */
              break;

            default:
              break;
            }
          if (GET_CODE (x5) != SUBREG
              || maybe_ne (SUBREG_BYTE (x5), 0)
              || GET_MODE (x5) != E_QImode)
            return -1;
          x8 = XEXP (x5, 0);
          switch (GET_CODE (x8))
            {
            case SIGN_EXTRACT:
            case ZERO_EXTRACT:
              operands[2] = x8;
              x9 = XEXP (x8, 1);
              if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
                return -1;
              x10 = XEXP (x8, 2);
              if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 8]
                  || GET_MODE (x3) != E_QImode)
                return -1;
              x11 = XEXP (x8, 0);
              operands[0] = x11;
              if (!int248_register_operand (operands[0], E_VOIDmode))
                return -1;
              operands[1] = x7;
              if (general_operand (operands[1], E_QImode))
                {
                  switch (GET_MODE (operands[2]))
                    {
                    case E_HImode:
                      if (extract_operator (operands[2], E_HImode)
                          && 
#line 12156 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                        return 687; /* *testqi_exthi_1 */
                      break;

                    case E_SImode:
                      if (extract_operator (operands[2], E_SImode)
                          && 
#line 12156 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                        return 688; /* *testqi_extsi_1 */
                      break;

                    case E_DImode:
                      if (extract_operator (operands[2], E_DImode)
                          && (
#line 12156 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 689; /* *testqi_extdi_1 */
                      break;

                    default:
                      break;
                    }
                }
              if (GET_CODE (x7) != SUBREG
                  || maybe_ne (SUBREG_BYTE (x7), 0)
                  || GET_MODE (x7) != E_QImode)
                return -1;
              x12 = XEXP (x7, 0);
              switch (GET_CODE (x12))
                {
                case SIGN_EXTRACT:
                case ZERO_EXTRACT:
                  operands[3] = x12;
                  x13 = XEXP (x12, 1);
                  if (x13 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
                    return -1;
                  x14 = XEXP (x12, 2);
                  if (x14 != const_int_rtx[MAX_SAVED_CONST_INT + 8])
                    return -1;
                  x15 = XEXP (x12, 0);
                  operands[1] = x15;
                  if (!int248_register_operand (operands[1], E_VOIDmode))
                    return -1;
                  switch (GET_MODE (operands[2]))
                    {
                    case E_HImode:
                      if (!extract_operator (operands[2], E_HImode)
                          || !extract_operator (operands[3], E_HImode)
                          || !
#line 12177 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                        return -1;
                      return 690; /* *testqi_exthi_2 */

                    case E_SImode:
                      if (!extract_operator (operands[2], E_SImode)
                          || !extract_operator (operands[3], E_SImode)
                          || !
#line 12177 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)))
                        return -1;
                      return 691; /* *testqi_extsi_2 */

                    case E_DImode:
                      if (!extract_operator (operands[2], E_DImode)
                          || !extract_operator (operands[3], E_DImode)
                          || !(
#line 12177 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return -1;
                      return 692; /* *testqi_extdi_2 */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case NOT:
          if (pnum_clobbers == NULL)
            return -1;
          x8 = XEXP (x5, 0);
          operands[1] = x8;
          x7 = XEXP (x3, 1);
          operands[2] = x7;
          switch (GET_MODE (x3))
            {
            case E_SImode:
              if (GET_MODE (x5) != E_SImode
                  || !register_operand (operands[1], E_SImode)
                  || !nonimmediate_operand (operands[2], E_SImode)
                  || !
#line 13386 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI && ix86_match_ccmode (insn, CCNOmode)))
                return -1;
              *pnum_clobbers = 1;
              return 817; /* *andn_si_ccno */

            case E_DImode:
              if (GET_MODE (x5) != E_DImode
                  || !register_operand (operands[1], E_DImode)
                  || !nonimmediate_operand (operands[2], E_DImode)
                  || !(
#line 13386 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI && ix86_match_ccmode (insn, CCNOmode)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              *pnum_clobbers = 1;
              return 818; /* *andn_di_ccno */

            default:
              return -1;
            }

        case NEG:
          if (pnum_clobbers == NULL)
            return -1;
          switch (pattern754 (x3))
            {
            case 0:
              if (!
#line 21849 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI && ix86_match_ccmode (insn, CCNOmode)))
                return -1;
              *pnum_clobbers = 1;
              return 1576; /* *bmi_blsi_si_ccno */

            case 1:
              if (!(
#line 21849 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI && ix86_match_ccmode (insn, CCNOmode)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              *pnum_clobbers = 1;
              return 1577; /* *bmi_blsi_di_ccno */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case ZERO_EXTRACT:
      switch (pattern46 (x1))
        {
        case 0:
          if (!
#line 12212 "../../src/gcc/config/i386/i386.md"
(/* Ensure that resulting mask is zero or sign extended operand.  */
   INTVAL (operands[4]) >= 0
   && ((INTVAL (operands[3]) > 0
	&& INTVAL (operands[3]) + INTVAL (operands[4]) <= 32)
       || (HImode == DImode
	   && INTVAL (operands[3]) > 32
	   && INTVAL (operands[3]) + INTVAL (operands[4]) == 64))
   && ix86_match_ccmode (insn,
			 /* If zero_extract mode precision is the same
			    as len, the SF of the zero_extract
			    comparison will be the most significant
			    extracted bit, but this could be matched
			    after splitting only for pos 0 len all bits
			    trivial extractions.  Require CCZmode.  */
			 (GET_MODE_PRECISION (HImode)
			  == INTVAL (operands[3]))
			 /* Otherwise, require CCZmode if we'd use a mask
			    with the most significant bit set and can't
			    widen it to wider mode.  *testdi_1 also
			    requires CCZmode if the mask has bit
			    31 set and all bits above it clear.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     >= 32)
			 /* We can't widen also if val is not a REG.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     == GET_MODE_PRECISION (GET_MODE (operands[2]))
			     && !register_operand (operands[2],
						   GET_MODE (operands[2])))
			 /* And we shouldn't widen if
			    TARGET_PARTIAL_REG_STALL.  */
			 || (TARGET_PARTIAL_REG_STALL
			     && (INTVAL (operands[3]) + INTVAL (operands[4])
				 >= (paradoxical_subreg_p (operands[2])
				     && (GET_MODE_CLASS
					  (GET_MODE (SUBREG_REG (operands[2])))
					 == MODE_INT)
				     ? GET_MODE_PRECISION
					 (GET_MODE (SUBREG_REG (operands[2])))
				     : GET_MODE_PRECISION
					 (GET_MODE (operands[2])))))
			 ? CCZmode : CCNOmode)))
            return -1;
          return 694; /* *testqi_ext_3 */

        case 1:
          if (!
#line 12212 "../../src/gcc/config/i386/i386.md"
(/* Ensure that resulting mask is zero or sign extended operand.  */
   INTVAL (operands[4]) >= 0
   && ((INTVAL (operands[3]) > 0
	&& INTVAL (operands[3]) + INTVAL (operands[4]) <= 32)
       || (SImode == DImode
	   && INTVAL (operands[3]) > 32
	   && INTVAL (operands[3]) + INTVAL (operands[4]) == 64))
   && ix86_match_ccmode (insn,
			 /* If zero_extract mode precision is the same
			    as len, the SF of the zero_extract
			    comparison will be the most significant
			    extracted bit, but this could be matched
			    after splitting only for pos 0 len all bits
			    trivial extractions.  Require CCZmode.  */
			 (GET_MODE_PRECISION (SImode)
			  == INTVAL (operands[3]))
			 /* Otherwise, require CCZmode if we'd use a mask
			    with the most significant bit set and can't
			    widen it to wider mode.  *testdi_1 also
			    requires CCZmode if the mask has bit
			    31 set and all bits above it clear.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     >= 32)
			 /* We can't widen also if val is not a REG.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     == GET_MODE_PRECISION (GET_MODE (operands[2]))
			     && !register_operand (operands[2],
						   GET_MODE (operands[2])))
			 /* And we shouldn't widen if
			    TARGET_PARTIAL_REG_STALL.  */
			 || (TARGET_PARTIAL_REG_STALL
			     && (INTVAL (operands[3]) + INTVAL (operands[4])
				 >= (paradoxical_subreg_p (operands[2])
				     && (GET_MODE_CLASS
					  (GET_MODE (SUBREG_REG (operands[2])))
					 == MODE_INT)
				     ? GET_MODE_PRECISION
					 (GET_MODE (SUBREG_REG (operands[2])))
				     : GET_MODE_PRECISION
					 (GET_MODE (operands[2])))))
			 ? CCZmode : CCNOmode)))
            return -1;
          return 695; /* *testqi_ext_3 */

        case 2:
          if (!(
#line 12212 "../../src/gcc/config/i386/i386.md"
(/* Ensure that resulting mask is zero or sign extended operand.  */
   INTVAL (operands[4]) >= 0
   && ((INTVAL (operands[3]) > 0
	&& INTVAL (operands[3]) + INTVAL (operands[4]) <= 32)
       || (DImode == DImode
	   && INTVAL (operands[3]) > 32
	   && INTVAL (operands[3]) + INTVAL (operands[4]) == 64))
   && ix86_match_ccmode (insn,
			 /* If zero_extract mode precision is the same
			    as len, the SF of the zero_extract
			    comparison will be the most significant
			    extracted bit, but this could be matched
			    after splitting only for pos 0 len all bits
			    trivial extractions.  Require CCZmode.  */
			 (GET_MODE_PRECISION (DImode)
			  == INTVAL (operands[3]))
			 /* Otherwise, require CCZmode if we'd use a mask
			    with the most significant bit set and can't
			    widen it to wider mode.  *testdi_1 also
			    requires CCZmode if the mask has bit
			    31 set and all bits above it clear.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     >= 32)
			 /* We can't widen also if val is not a REG.  */
			 || (INTVAL (operands[3]) + INTVAL (operands[4])
			     == GET_MODE_PRECISION (GET_MODE (operands[2]))
			     && !register_operand (operands[2],
						   GET_MODE (operands[2])))
			 /* And we shouldn't widen if
			    TARGET_PARTIAL_REG_STALL.  */
			 || (TARGET_PARTIAL_REG_STALL
			     && (INTVAL (operands[3]) + INTVAL (operands[4])
				 >= (paradoxical_subreg_p (operands[2])
				     && (GET_MODE_CLASS
					  (GET_MODE (SUBREG_REG (operands[2])))
					 == MODE_INT)
				     ? GET_MODE_PRECISION
					 (GET_MODE (SUBREG_REG (operands[2])))
				     : GET_MODE_PRECISION
					 (GET_MODE (operands[2])))))
			 ? CCZmode : CCNOmode)) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 696; /* *testqi_ext_3 */

        default:
          return -1;
        }

    case IOR:
      switch (pattern48 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 884; /* *iorqi_3 */

        case 1:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 886; /* *iorhi_3 */

        case 2:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 888; /* *iorsi_3 */

        case 3:
          if (!(
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 890; /* *iordi_3 */

        default:
          return -1;
        }

    case XOR:
      switch (pattern48 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 885; /* *xorqi_3 */

        case 1:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 887; /* *xorhi_3 */

        case 2:
          if (!
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          *pnum_clobbers = 1;
          return 889; /* *xorsi_3 */

        case 3:
          if (!(
#line 13935 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 891; /* *xordi_3 */

        default:
          return -1;
        }

    case ASHIFT:
      switch (pattern49 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 16448 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& (TARGET_SHIFT1
	    || TARGET_DOUBLE_WITH_ADD)))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1115; /* *ashlqi3_cconly */

        case 1:
          if (!
#line 16448 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& (TARGET_SHIFT1
	    || TARGET_DOUBLE_WITH_ADD)))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1116; /* *ashlhi3_cconly */

        case 2:
          if (!
#line 16448 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& (TARGET_SHIFT1
	    || TARGET_DOUBLE_WITH_ADD)))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1117; /* *ashlsi3_cconly */

        case 3:
          if (!(
#line 16448 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& (TARGET_SHIFT1
	    || TARGET_DOUBLE_WITH_ADD)))
   && ix86_match_ccmode (insn, CCGOCmode)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1118; /* *ashldi3_cconly */

        default:
          return -1;
        }

    case LSHIFTRT:
      switch (pattern49 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1230; /* *lshrqi3_cconly */

        case 1:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1232; /* *lshrhi3_cconly */

        case 2:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1234; /* *lshrsi3_cconly */

        case 3:
          if (!(
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1236; /* *lshrdi3_cconly */

        default:
          return -1;
        }

    case ASHIFTRT:
      switch (pattern49 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1231; /* *ashrqi3_cconly */

        case 1:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1233; /* *ashrhi3_cconly */

        case 2:
          if (!
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)))
            return -1;
          *pnum_clobbers = 1;
          return 1235; /* *ashrsi3_cconly */

        case 3:
          if (!(
#line 17750 "../../src/gcc/config/i386/i386.md"
((optimize_function_for_size_p (cfun)
    || !TARGET_PARTIAL_FLAG_REG_STALL
    || (operands[2] == const1_rtx
	&& TARGET_SHIFT1))
   && ix86_match_ccmode (insn, CCGOCmode)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          *pnum_clobbers = 1;
          return 1237; /* *ashrdi3_cconly */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_108 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  switch (XINT (x2, 1))
    {
    case 17:
      if (GET_MODE (x2) != E_BLKmode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      if (!rtx_equal_p (x4, operands[0]))
        return -1;
      return 1487; /* *memory_blockage */

    case 14:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      switch (GET_CODE (x4))
        {
        case CONST_INT:
          if (XWINT (x4, 0) != 0L)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_SImode:
              if (pnum_clobbers == NULL
                  || !register_operand (operands[0], E_SImode)
                  || GET_MODE (x2) != E_SImode
                  || !
#line 20753 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT))
                return -1;
              *pnum_clobbers = 1;
              return 1498; /* *set_got */

            case E_DImode:
              if (!register_operand (operands[0], E_DImode)
                  || GET_MODE (x2) != E_DImode
                  || !
#line 20783 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 1500; /* set_got_rex64 */

            default:
              return -1;
            }

        case LABEL_REF:
          if (pnum_clobbers == NULL
              || !register_operand (operands[0], E_SImode)
              || GET_MODE (x2) != E_SImode)
            return -1;
          x5 = XEXP (x4, 0);
          operands[1] = x5;
          if (!
#line 20775 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT))
            return -1;
          *pnum_clobbers = 1;
          return 1499; /* *set_got_labelled */

        default:
          return -1;
        }

    case 15:
      if (GET_MODE (x2) != E_DImode)
        return -1;
      x4 = XVECEXP (x2, 0, 0);
      if (GET_CODE (x4) != LABEL_REF)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      if (!register_operand (operands[0], E_DImode))
        return -1;
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      if (!
#line 20792 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
        return -1;
      return 1501; /* set_rip_rex64 */

    case 16:
      if (GET_MODE (x2) != E_DImode)
        return -1;
      x4 = XVECEXP (x2, 0, 0);
      if (GET_CODE (x4) != LABEL_REF)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      if (!register_operand (operands[0], E_DImode))
        return -1;
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      if (!
#line 20803 "../../src/gcc/config/i386/i386.md"
(TARGET_LP64))
        return -1;
      return 1502; /* set_got_offset_rex64 */

    case 97:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      switch (pattern300 (x2))
        {
        case 0:
          if ((
#line 21646 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NF) && 
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI)))
            return 1546; /* tzcnt_si_nf */
          if (pnum_clobbers == NULL
              || !
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI))
            return -1;
          *pnum_clobbers = 1;
          return 1550; /* tzcnt_si */

        case 1:
          if ((
#line 21646 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NF) && (((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI))))
            return 1548; /* tzcnt_di_nf */
          if (pnum_clobbers == NULL
              || !(((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 21628 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI)))
            return -1;
          *pnum_clobbers = 1;
          return 1552; /* tzcnt_di */

        default:
          return -1;
        }

    case 96:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      switch (pattern300 (x2))
        {
        case 0:
          if ((
#line 21646 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NF) && 
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT)))
            return 1547; /* lzcnt_si_nf */
          if (pnum_clobbers == NULL
              || !
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT))
            return -1;
          *pnum_clobbers = 1;
          return 1551; /* lzcnt_si */

        case 1:
          if ((
#line 21646 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NF) && (((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT))))
            return 1549; /* lzcnt_di_nf */
          if (pnum_clobbers == NULL
              || !(((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 21629 "../../src/gcc/config/i386/i386.md"
(TARGET_LZCNT)))
            return -1;
          *pnum_clobbers = 1;
          return 1553; /* lzcnt_di */

        default:
          return -1;
        }

    case 19:
      x4 = XVECEXP (x2, 0, 0);
      if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      switch (pattern23 (x2))
        {
        case 0:
          if (!
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode))
            return -1;
          return 1658; /* *load_tp_si */

        case 1:
          if (!
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode))
            return -1;
          return 1659; /* *load_tp_di */

        default:
          return -1;
        }

    case 22:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!tls_symbolic_operand (operands[1], E_VOIDmode))
        return -1;
      switch (pattern23 (x2))
        {
        case 0:
          if (!(
#line 23334 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && TARGET_GNU2_TLS) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
            return -1;
          return 1667; /* *tls_dynamic_gnu2_lea_64_si */

        case 1:
          if (!(
#line 23334 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && TARGET_GNU2_TLS) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
            return -1;
          return 1668; /* *tls_dynamic_gnu2_lea_64_di */

        default:
          return -1;
        }

    case 70:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_XFmode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_DImode:
          if (pnum_clobbers == NULL
              || !nonimmediate_operand (operands[0], E_DImode)
              || GET_MODE (x2) != E_DImode
              || !
#line 25113 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387))
            return -1;
          *pnum_clobbers = 1;
          return 1733; /* lrintxfdi2 */

        case E_SImode:
          if (!nonimmediate_operand (operands[0], E_SImode)
              || GET_MODE (x2) != E_SImode
              || !
#line 25122 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387))
            return -1;
          return 1735; /* lrintxfsi2 */

        default:
          return -1;
        }

    case 78:
      switch (pattern120 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 25329 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387
   && flag_unsafe_math_optimizations
   && ix86_pre_reload_split ()))
            return -1;
          *pnum_clobbers = 1;
          return 1746; /* *fistsi2_floor_1 */

        case 1:
          if (!
#line 25329 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387
   && flag_unsafe_math_optimizations
   && ix86_pre_reload_split ()))
            return -1;
          *pnum_clobbers = 1;
          return 1748; /* *fistdi2_floor_1 */

        default:
          return -1;
        }

    case 79:
      switch (pattern120 (x1, pnum_clobbers))
        {
        case 0:
          if (!
#line 25329 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387
   && flag_unsafe_math_optimizations
   && ix86_pre_reload_split ()))
            return -1;
          *pnum_clobbers = 1;
          return 1747; /* *fistsi2_ceil_1 */

        case 1:
          if (!
#line 25329 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_FANCY_MATH_387
   && flag_unsafe_math_optimizations
   && ix86_pre_reload_split ()))
            return -1;
          *pnum_clobbers = 1;
          return 1749; /* *fistdi2_ceil_1 */

        default:
          return -1;
        }

    case 49:
      return recog_107 (x1, insn, pnum_clobbers);

    case 18:
      if (pnum_clobbers == NULL)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          if (!memory_operand (operands[0], E_SImode)
              || GET_MODE (x2) != E_SImode
              || !const0_operand (operands[1], E_SImode)
              || !
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode))
            return -1;
          *pnum_clobbers = 1;
          return 1861; /* probe_stack_1_si */

        case E_DImode:
          if (!memory_operand (operands[0], E_DImode)
              || GET_MODE (x2) != E_DImode
              || !const0_operand (operands[1], E_DImode)
              || !
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode))
            return -1;
          *pnum_clobbers = 1;
          return 1862; /* probe_stack_1_di */

        default:
          return -1;
        }

    case 33:
      if (GET_MODE (x2) != E_BLKmode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      if (!rtx_equal_p (x4, operands[0]))
        return -1;
      return 1955; /* *pause */

    case 102:
      switch (pattern121 (x1))
        {
        case 0:
          if (!
#line 29793 "../../src/gcc/config/i386/i386.md"
(TARGET_MOVDIRI))
            return -1;
          return 1986; /* movdirisi */

        case 1:
          if (!(
#line 29793 "../../src/gcc/config/i386/i386.md"
(TARGET_MOVDIRI) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 1987; /* movdiridi */

        default:
          return -1;
        }

    case 103:
      if (GET_MODE (x2) != E_XImode)
        return -1;
      x3 = XEXP (x1, 0);
      if (GET_CODE (x3) != MEM
          || GET_MODE (x3) != E_XImode)
        return -1;
      x6 = XEXP (x3, 0);
      operands[0] = x6;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!memory_operand (operands[1], E_XImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          if (!register_operand (operands[0], E_SImode)
              || !(
#line 29801 "../../src/gcc/config/i386/i386.md"
(TARGET_MOVDIR64B) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
            return -1;
          return 1988; /* movdir64b_si */

        case E_DImode:
          if (!register_operand (operands[0], E_DImode)
              || !(
#line 29801 "../../src/gcc/config/i386/i386.md"
(TARGET_MOVDIR64B) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
            return -1;
          return 1989; /* movdir64b_di */

        default:
          return -1;
        }

    case 111:
      if (GET_MODE (x2) != E_DImode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      if (!memory_operand (operands[0], E_DImode))
        return -1;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_DImode)
          || !
#line 636 "../../src/gcc/config/i386/mmx.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE)
   && (TARGET_SSE || TARGET_3DNOW_A)))
        return -1;
      return 2048; /* sse_movntq */

    case 117:
      switch (pattern121 (x1))
        {
        case 0:
          if (!
#line 2008 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))
            return -1;
          return 2561; /* sse2_movntisi */

        case 1:
          if (!(
#line 2008 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 2562; /* sse2_movntidi */

        default:
          return -1;
        }

    case 156:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      switch (GET_CODE (x4))
        {
        case VEC_SELECT:
          switch (pattern451 (x4))
            {
            case 0:
              switch (pattern1094 (x2, 
E_SImode))
                {
                case 0:
                  if (!
#line 7824 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                    return -1;
                  return 4546; /* avx512fp16_vcvtsh2usi */

                case 1:
                  if (!
#line 9036 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
                    return -1;
                  return 4911; /* avx512f_vcvtss2usi */

                case 2:
                  if (!
#line 9072 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
                    return -1;
                  return 4923; /* avx512f_vcvtsd2usi */

                default:
                  return -1;
                }

            case 1:
              switch (pattern1094 (x2, 
E_DImode))
                {
                case 0:
                  if (!(
#line 7824 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4550; /* avx512fp16_vcvtsh2usiq */

                case 1:
                  if (!(
#line 9036 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4913; /* avx512f_vcvtss2usiq */

                case 2:
                  if (!(
#line 9072 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4925; /* avx512f_vcvtsd2usiq */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case REG:
        case SUBREG:
        case MEM:
          operands[1] = x4;
          if (!nonimmediate_operand (operands[1], E_HFmode))
            return -1;
          switch (pattern23 (x2))
            {
            case 0:
              if (!
#line 7835 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                return -1;
              return 4554; /* avx512fp16_vcvtsh2usi_2 */

            case 1:
              if (!(
#line 7835 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 4556; /* avx512fp16_vcvtsh2usiq_2 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 46:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      switch (GET_CODE (x4))
        {
        case VEC_SELECT:
          switch (pattern451 (x4))
            {
            case 0:
              switch (pattern1095 (x2, 
E_SImode))
                {
                case 0:
                  if (!
#line 7824 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                    return -1;
                  return 4548; /* avx512fp16_vcvtsh2si */

                case 1:
                  if (!
#line 8564 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
                    return -1;
                  return 4794; /* sse_cvtss2si */

                case 2:
                  if (!
#line 9108 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))
                    return -1;
                  return 4935; /* sse2_cvtsd2si */

                default:
                  return -1;
                }

            case 1:
              switch (pattern1095 (x2, 
E_DImode))
                {
                case 0:
                  if (!(
#line 7824 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4552; /* avx512fp16_vcvtsh2siq */

                case 1:
                  if (!(
#line 8564 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4796; /* sse_cvtss2siq */

                case 2:
                  if (!(
#line 9108 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4937; /* sse2_cvtsd2siq */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case REG:
        case SUBREG:
        case MEM:
          operands[1] = x4;
          switch (GET_MODE (operands[0]))
            {
            case E_SImode:
              switch (pattern766 (x2, 
E_SImode))
                {
                case 0:
                  if (!
#line 7835 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                    return -1;
                  return 4555; /* avx512fp16_vcvtsh2si_2 */

                case 1:
                  if (!
#line 8577 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
                    return -1;
                  return 4798; /* sse_cvtss2si_2 */

                case 2:
                  if (!
#line 9122 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))
                    return -1;
                  return 4939; /* sse2_cvtsd2si_2 */

                default:
                  return -1;
                }

            case E_DImode:
              switch (pattern766 (x2, 
E_DImode))
                {
                case 0:
                  if (!(
#line 7835 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4557; /* avx512fp16_vcvtsh2siq_2 */

                case 1:
                  if (!(
#line 8577 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4799; /* sse_cvtss2siq_2 */

                case 2:
                  if (!(
#line 9122 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return -1;
                  return 4940; /* sse2_cvtsd2siq_2 */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 172:
      switch (pattern123 (x1))
        {
        case 0:
          if (!
#line 7989 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
            return -1;
          return 4694; /* unspec_avx512fp16_fix_truncsi2 */

        case 1:
          if (!
#line 8592 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
            return -1;
          return 4800; /* unspec_sse_cvttss2si */

        case 2:
          if (!
#line 9137 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))
            return -1;
          return 4941; /* unspec_sse2_cvttsd2si */

        case 3:
          if (!(
#line 7989 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4698; /* unspec_avx512fp16_fix_truncdi2 */

        case 4:
          if (!(
#line 8592 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4802; /* unspec_sse_cvttss2siq */

        case 5:
          if (!(
#line 9137 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4943; /* unspec_sse2_cvttsd2siq */

        default:
          return -1;
        }

    case 173:
      switch (pattern123 (x1))
        {
        case 0:
          if (!
#line 7989 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
            return -1;
          return 4696; /* unspec_avx512fp16_fixuns_truncsi2 */

        case 1:
          if (!
#line 9047 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
            return -1;
          return 4915; /* unspec_avx512f_vcvttss2usi */

        case 2:
          if (!
#line 9083 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
            return -1;
          return 4927; /* unspec_avx512f_vcvttsd2usi */

        case 3:
          if (!(
#line 7989 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4700; /* unspec_avx512fp16_fixuns_truncdi2 */

        case 4:
          if (!(
#line 9047 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4917; /* unspec_avx512f_vcvttss2usiq */

        case 5:
          if (!(
#line 9083 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 4929; /* unspec_avx512f_vcvttsd2usiq */

        default:
          return -1;
        }

    case 191:
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      switch (GET_MODE (operands[0]))
        {
        case E_DImode:
          if (!register_operand (operands[0], E_DImode)
              || GET_MODE (x2) != E_DImode
              || !register_operand (operands[1], E_V64QImode)
              || !(
#line 10273 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 5200; /* avx512bw_cvtb2maskv64qi */

        case E_SImode:
          if (!register_operand (operands[0], E_SImode)
              || GET_MODE (x2) != E_SImode)
            return -1;
          switch (GET_MODE (operands[1]))
            {
            case E_V32QImode:
              if (!register_operand (operands[1], E_V32QImode)
                  || !(
#line 10273 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 317 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 5202; /* avx512vl_cvtb2maskv32qi */

            case E_V32HImode:
              if (!register_operand (operands[1], E_V32HImode)
                  || !(
#line 10273 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 318 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 5203; /* avx512bw_cvtw2maskv32hi */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 275:
      switch (pattern125 (x1))
        {
        case 0:
          if (!
#line 32610 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
            return -1;
          return 10919; /* avx10_2_vcvttsd2sissi */

        case 1:
          if (!
#line 32623 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
            return -1;
          return 10927; /* avx10_2_vcvttss2sissi */

        case 2:
          if (!(
#line 32610 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 10923; /* avx10_2_vcvttsd2sisdi */

        case 3:
          if (!(
#line 32623 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 10931; /* avx10_2_vcvttss2sisdi */

        default:
          return -1;
        }

    case 276:
      switch (pattern125 (x1))
        {
        case 0:
          if (!
#line 32610 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
            return -1;
          return 10921; /* avx10_2_vcvttsd2usissi */

        case 1:
          if (!
#line 32623 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
            return -1;
          return 10929; /* avx10_2_vcvttss2usissi */

        case 2:
          if (!(
#line 32610 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 10925; /* avx10_2_vcvttsd2usisdi */

        case 3:
          if (!(
#line 32623 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 10933; /* avx10_2_vcvttss2usisdi */

        default:
          return -1;
        }

    case 280:
      if (GET_MODE (x2) != E_BLKmode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      if (!rtx_equal_p (x4, operands[0])
          || !
#line 60 "../../src/gcc/config/i386/sync.md"
(TARGET_SSE2))
        return -1;
      return 11013; /* *sse2_lfence */

    case 281:
      if (GET_MODE (x2) != E_BLKmode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      if (!rtx_equal_p (x4, operands[0])
          || !
#line 79 "../../src/gcc/config/i386/sync.md"
(TARGET_SSE || TARGET_3DNOW_A))
        return -1;
      return 11014; /* *sse_sfence */

    case 282:
      if (GET_MODE (x2) != E_BLKmode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      x4 = XVECEXP (x2, 0, 0);
      if (!rtx_equal_p (x4, operands[0]))
        return -1;
      if (
#line 98 "../../src/gcc/config/i386/sync.md"
(TARGET_64BIT || TARGET_SSE2))
        return 11015; /* mfence_sse2 */
      if (pnum_clobbers == NULL)
        return -1;
      *pnum_clobbers = 1;
      return 11016; /* mfence_nosse */

    case 284:
      if (GET_MODE (x2) != E_DImode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      if (!memory_operand (operands[0], E_DImode))
        return -1;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_DFmode)
          || !
#line 356 "../../src/gcc/config/i386/sync.md"
(TARGET_80387))
        return -1;
      return 11024; /* storedi_via_fpu */

    case 286:
      if (GET_MODE (x2) != E_DImode)
        return -1;
      x3 = XEXP (x1, 0);
      operands[0] = x3;
      if (!memory_operand (operands[0], E_DImode))
        return -1;
      x4 = XVECEXP (x2, 0, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_DFmode)
          || !
#line 382 "../../src/gcc/config/i386/sync.md"
(TARGET_SSE))
        return -1;
      return 11026; /* storedi_via_sse */

    default:
      return -1;
    }
}

 int
recog_147 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  switch (XVECLEN (x4, 0))
    {
    case 1:
      x5 = XEXP (x2, 2);
      if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return -1;
      x6 = XVECEXP (x4, 0, 0);
      operands[1] = x6;
      x7 = XEXP (x3, 1);
      operands[3] = x7;
      x8 = XEXP (x3, 2);
      operands[4] = x8;
      if (!register_operand (operands[4], E_QImode))
        return -1;
      x9 = XEXP (x2, 1);
      operands[2] = x9;
      switch (XINT (x4, 1))
        {
        case 54:
          if (pattern1286 (x2) != 0
              || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 2978 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
            return -1;
          return 2892; /* avx512fp16_vmrcpv8hf2_mask */

        case 161:
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1371 (x2, 
E_V4SFmode) != 0
                  || !
#line 3034 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
                return -1;
              return 2908; /* srcp14v4sf_mask */

            case E_V2DFmode:
              if (pattern1371 (x2, 
E_V2DFmode) != 0
                  || !(
#line 3034 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2909; /* srcp14v2df_mask */

            default:
              return -1;
            }

        case 162:
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1371 (x2, 
E_V4SFmode) != 0
                  || !
#line 3188 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
                return -1;
              return 2986; /* rsqrt14_v4sf_mask */

            case E_V2DFmode:
              if (pattern1371 (x2, 
E_V2DFmode) != 0
                  || !(
#line 3188 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2987; /* rsqrt14_v2df_mask */

            default:
              return -1;
            }

        case 55:
          if (pattern1286 (x2) != 0
              || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 3236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
            return -1;
          return 2991; /* avx512fp16_vmrsqrtv8hf2_mask */

        default:
          return -1;
        }

    case 2:
      x5 = XEXP (x2, 2);
      if (GET_CODE (x5) != CONST_INT)
        return -1;
      switch (XINT (x4, 1))
        {
        case 63:
          switch (pattern768 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 3158; /* avx512fp16_ieee_vmmaxv8hf3_mask */

            case 1:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE)))
                return -1;
              return 3166; /* sse_ieee_vmmaxv4sf3_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 3174; /* sse2_ieee_vmmaxv2df3_mask */

            default:
              return -1;
            }

        case 62:
          switch (pattern768 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 3162; /* avx512fp16_ieee_vmminv8hf3_mask */

            case 1:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE)))
                return -1;
              return 3170; /* sse_ieee_vmminv4sf3_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 3485 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 3178; /* sse2_ieee_vmminv2df3_mask */

            default:
              return -1;
            }

        case 221:
          if (pattern769 (x2) != 0
              || !(
#line 412 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 7522 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
            return -1;
          return 4416; /* avx512fp16_fmulcsh_v8hf_mask */

        case 222:
          if (pattern769 (x2) != 0
              || !(
#line 412 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 7522 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
            return -1;
          return 4420; /* avx512fp16_fcmulcsh_v8hf_mask */

        case 58:
          switch (pattern768 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 13625 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 5423; /* avx512f_vmscalefv8hf_mask */

            case 1:
              if (!
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F))
                return -1;
              return 5427; /* avx512f_vmscalefv4sf_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 13625 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 5431; /* avx512f_vmscalefv2df_mask */

            default:
              return -1;
            }

        case 165:
          switch (pattern768 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 14058 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 7072; /* avx512f_sgetexpv8hf_mask */

            case 1:
              if (!
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F))
                return -1;
              return 7076; /* avx512f_sgetexpv4sf_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 14058 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 7080; /* avx512f_sgetexpv2df_mask */

            default:
              return -1;
            }

        case 94:
          if (XWINT (x5, 0) != 1L)
            return -1;
          x6 = XVECEXP (x4, 0, 0);
          operands[2] = x6;
          x10 = XVECEXP (x4, 0, 1);
          operands[3] = x10;
          if (!const_0_to_255_operand (operands[3], E_SImode))
            return -1;
          x7 = XEXP (x3, 1);
          operands[4] = x7;
          x8 = XEXP (x3, 2);
          operands[5] = x8;
          if (!register_operand (operands[5], E_QImode))
            return -1;
          x9 = XEXP (x2, 1);
          operands[1] = x9;
          switch (GET_MODE (operands[0]))
            {
            case E_V8HFmode:
              if (pattern1541 (x2, 
E_V8HFmode) != 0
                  || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 14252 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 7176; /* avx512f_rndscalev8hf_mask */

            case E_V4SFmode:
              if (pattern1541 (x2, 
E_V4SFmode) != 0
                  || !
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F))
                return -1;
              return 7180; /* avx512f_rndscalev4sf_mask */

            case E_V2DFmode:
              if (pattern1541 (x2, 
E_V2DFmode) != 0
                  || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 14252 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 7184; /* avx512f_rndscalev2df_mask */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 3:
      x5 = XEXP (x2, 2);
      if (GET_CODE (x5) != CONST_INT)
        return -1;
      x6 = XVECEXP (x4, 0, 0);
      operands[1] = x6;
      x10 = XVECEXP (x4, 0, 1);
      operands[2] = x10;
      x11 = XVECEXP (x4, 0, 2);
      operands[3] = x11;
      switch (XINT (x4, 1))
        {
        case 192:
          switch (pattern1108 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4040 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || (VALID_AVX512FP16_REG_MODE (V8HFmode))) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 3226; /* reducesv8hf_mask */

            case 1:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 4040 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || (VALID_AVX512FP16_REG_MODE (V4SFmode)))))
                return -1;
              return 3230; /* reducesv4sf_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 4040 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ || (VALID_AVX512FP16_REG_MODE (V2DFmode))) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 3234; /* reducesv2df_mask */

            default:
              return -1;
            }

        case 217:
          switch (pattern1109 (x2))
            {
            case 0:
              if (!(
#line 394 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 7487 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
                return -1;
              return 4403; /* avx512fp16_fma_fmaddcsh_v8hf_maskz */

            case 1:
              if (!
#line 7507 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                return -1;
              return 4410; /* avx512fp16_fmaddcsh_v8hf_mask */

            default:
              return -1;
            }

        case 219:
          switch (pattern1109 (x2))
            {
            case 0:
              if (!(
#line 394 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 7487 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
                return -1;
              return 4407; /* avx512fp16_fma_fcmaddcsh_v8hf_maskz */

            case 1:
              if (!
#line 7507 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))
                return -1;
              return 4412; /* avx512fp16_fcmaddcsh_v8hf_mask */

            default:
              return -1;
            }

        case 194:
          if (XWINT (x5, 0) != 1L
              || !const_0_to_15_operand (operands[3], E_SImode))
            return -1;
          x7 = XEXP (x3, 1);
          operands[4] = x7;
          x8 = XEXP (x3, 2);
          operands[5] = x8;
          if (!register_operand (operands[5], E_QImode))
            return -1;
          x9 = XEXP (x2, 1);
          if (!rtx_equal_p (x9, operands[1]))
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1106 (x2, 
E_V4SFmode) != 0
                  || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 29848 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ)))
                return -1;
              return 9984; /* avx512dq_rangesv4sf_mask */

            case E_V2DFmode:
              if (pattern1106 (x2, 
E_V2DFmode) != 0
                  || !(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29848 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 9988; /* avx512dq_rangesv2df_mask */

            default:
              return -1;
            }

        case 166:
          if (XWINT (x5, 0) != 1L
              || !const_0_to_15_operand (operands[3], E_SImode))
            return -1;
          switch (pattern1107 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29916 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 10046; /* avx512f_vgetmantv8hf_mask */

            case 1:
              if (!
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F))
                return -1;
              return 10050; /* avx512f_vgetmantv4sf_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 29916 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 10054; /* avx512f_vgetmantv2df_mask */

            default:
              return -1;
            }

        case 278:
          switch (pattern1108 (x2))
            {
            case 0:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 32663 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 10978; /* avx10_2_minmaxsv8hf_mask */

            case 1:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 32663 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256)))
                return -1;
              return 10982; /* avx10_2_minmaxsv4sf_mask */

            case 2:
              if (!(
#line 378 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 32663 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 10986; /* avx10_2_minmaxsv2df_mask */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 4:
      if (XINT (x4, 1) != 163)
        return -1;
      x6 = XVECEXP (x4, 0, 0);
      operands[1] = x6;
      x10 = XVECEXP (x4, 0, 1);
      operands[2] = x10;
      x11 = XVECEXP (x4, 0, 2);
      operands[3] = x11;
      x12 = XVECEXP (x4, 0, 3);
      operands[4] = x12;
      if (!const_0_to_255_operand (operands[4], E_SImode))
        return -1;
      x7 = XEXP (x3, 1);
      switch (GET_CODE (x7))
        {
        case CONST_INT:
        case CONST_DOUBLE:
        case CONST_VECTOR:
          operands[5] = x7;
          x5 = XEXP (x2, 2);
          if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
            return -1;
          x8 = XEXP (x3, 2);
          operands[6] = x8;
          if (!register_operand (operands[6], E_QImode))
            return -1;
          x9 = XEXP (x2, 1);
          if (!rtx_equal_p (x9, operands[2]))
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1636 (x2, 
E_V4SFmode, 
E_V4SImode) != 0
                  || !
#line 154 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F))
                return -1;
              return 7135; /* avx512f_sfixupimmv4sf_maskz_1 */

            case E_V2DFmode:
              if (pattern1636 (x2, 
E_V2DFmode, 
E_V2DImode) != 0
                  || !(
#line 154 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 14207 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 7139; /* avx512f_sfixupimmv2df_maskz_1 */

            default:
              return -1;
            }

        case REG:
        case SUBREG:
          if (!rtx_equal_p (x7, operands[2]))
            return -1;
          x8 = XEXP (x3, 2);
          if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
            return -1;
          x5 = XEXP (x2, 2);
          operands[5] = x5;
          if (!register_operand (operands[5], E_QImode))
            return -1;
          x9 = XEXP (x2, 1);
          if (!rtx_equal_p (x9, operands[1]))
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1637 (x2, 
E_V4SImode, 
E_V4SFmode) != 0
                  || !
#line 14226 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
                return -1;
              return 7141; /* avx512f_sfixupimmv4sf_mask */

            case E_V2DFmode:
              if (pattern1637 (x2, 
E_V2DImode, 
E_V2DFmode) != 0
                  || !(
#line 14226 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 7143; /* avx512f_sfixupimmv2df_mask */

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_160 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  switch (pattern638 (x2))
    {
    case 0:
      if (pattern1385 (x2, 
E_V32HFmode, 
E_SImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && 1) && 
#line 5927 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
        return -1;
      return 3945; /* fma_fnmadd_v32hf_maskz_1 */

    case 1:
      if (pattern1385 (x2, 
E_V16HFmode, 
E_HImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && 1) && 
#line 5928 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 3949; /* fma_fnmadd_v16hf_maskz_1 */

    case 2:
      if (pattern1385 (x2, 
E_V8HFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (16 == 64 || TARGET_AVX512VL) && 1) && 
#line 5929 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 3953; /* fma_fnmadd_v8hf_maskz_1 */

    case 3:
      if (pattern1385 (x2, 
E_V16SFmode, 
E_HImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && 1) && 
#line 5931 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 3957; /* fma_fnmadd_v16sf_maskz_1 */

    case 4:
      if (pattern1385 (x2, 
E_V8SFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 3961; /* fma_fnmadd_v8sf_maskz_1 */

    case 5:
      if (pattern1385 (x2, 
E_V4SFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (16 == 64 || TARGET_AVX512VL) && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 3965; /* fma_fnmadd_v4sf_maskz_1 */

    case 6:
      if (pattern1385 (x2, 
E_V8DFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && 1) && 
#line 5933 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 3968; /* fma_fnmadd_v8df_maskz_1 */

    case 7:
      if (pattern1385 (x2, 
E_V4DFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 3972; /* fma_fnmadd_v4df_maskz_1 */

    case 8:
      if (pattern1385 (x2, 
E_V2DFmode, 
E_QImode) != 0
          || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (16 == 64 || TARGET_AVX512VL) && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 3976; /* fma_fnmadd_v2df_maskz_1 */

    case 9:
      if (pattern1386 (x2, 
E_SImode, 
E_V32BFmode) != 0
          || !(
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
        return -1;
      return 10646; /* avx10_2_fnmaddbf16_v32bf_maskz_1 */

    case 10:
      if (pattern1386 (x2, 
E_HImode, 
E_V16BFmode) != 0
          || !
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10648; /* avx10_2_fnmaddbf16_v16bf_maskz_1 */

    case 11:
      if (pattern1386 (x2, 
E_QImode, 
E_V8BFmode) != 0
          || !
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10650; /* avx10_2_fnmaddbf16_v8bf_maskz_1 */

    case 12:
      if (pattern1387 (x2, 
E_V4SFmode) != 0
          || !
#line 6987 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA4))
        return -1;
      return 4324; /* *fma4i_vmfnmadd_v4sf */

    case 13:
      if (pattern1387 (x2, 
E_V2DFmode) != 0
          || !(
#line 6987 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA4) && 
#line 474 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return -1;
      return 4325; /* *fma4i_vmfnmadd_v2df */

    case 14:
      if (pattern1297 (x2, 
E_V32HFmode, 
E_SImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V32HFmode)
          && vector_operand (operands[3], E_V32HFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
            return 3977; /* avx512bw_fnmadd_v32hf_mask */
        }
      if (!vector_operand (operands[1], E_V32HFmode)
          || !nonimmediate_operand (operands[3], E_V32HFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
        return -1;
      return 3992; /* avx512bw_fnmadd_v32hf_mask3 */

    case 15:
      if (pattern1297 (x2, 
E_V16HFmode, 
E_HImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V16HFmode)
          && vector_operand (operands[3], E_V16HFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
            return 3979; /* avx512vl_fnmadd_v16hf_mask */
        }
      if (!vector_operand (operands[1], E_V16HFmode)
          || !nonimmediate_operand (operands[3], E_V16HFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 3994; /* avx512vl_fnmadd_v16hf_mask3 */

    case 16:
      if (pattern1297 (x2, 
E_V8HFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V8HFmode)
          && vector_operand (operands[3], E_V8HFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 526 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
            return 3981; /* avx512fp16_fnmadd_v8hf_mask */
        }
      if (!vector_operand (operands[1], E_V8HFmode)
          || !nonimmediate_operand (operands[3], E_V8HFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 526 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 3996; /* avx512fp16_fnmadd_v8hf_mask3 */

    case 17:
      if (pattern1297 (x2, 
E_V16SFmode, 
E_HImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V16SFmode)
          && vector_operand (operands[3], E_V16SFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return 3982; /* avx512f_fnmadd_v16sf_mask */
        }
      if (!vector_operand (operands[1], E_V16SFmode)
          || !nonimmediate_operand (operands[3], E_V16SFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 3997; /* avx512f_fnmadd_v16sf_mask3 */

    case 18:
      if (pattern1297 (x2, 
E_V8SFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V8SFmode)
          && vector_operand (operands[3], E_V8SFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 3984; /* avx512vl_fnmadd_v8sf_mask */
        }
      if (!vector_operand (operands[1], E_V8SFmode)
          || !nonimmediate_operand (operands[3], E_V8SFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 3999; /* avx512vl_fnmadd_v8sf_mask3 */

    case 19:
      if (pattern1297 (x2, 
E_V4SFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V4SFmode)
          && vector_operand (operands[3], E_V4SFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 3986; /* avx512vl_fnmadd_v4sf_mask */
        }
      if (!vector_operand (operands[1], E_V4SFmode)
          || !nonimmediate_operand (operands[3], E_V4SFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 4001; /* avx512vl_fnmadd_v4sf_mask3 */

    case 20:
      if (pattern1297 (x2, 
E_V8DFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V8DFmode)
          && vector_operand (operands[3], E_V8DFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return 3987; /* avx512f_fnmadd_v8df_mask */
        }
      if (!vector_operand (operands[1], E_V8DFmode)
          || !nonimmediate_operand (operands[3], E_V8DFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 4002; /* avx512f_fnmadd_v8df_mask3 */

    case 21:
      if (pattern1297 (x2, 
E_V4DFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V4DFmode)
          && vector_operand (operands[3], E_V4DFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 3989; /* avx512vl_fnmadd_v4df_mask */
        }
      if (!vector_operand (operands[1], E_V4DFmode)
          || !nonimmediate_operand (operands[3], E_V4DFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 4004; /* avx512vl_fnmadd_v4df_mask3 */

    case 22:
      if (pattern1297 (x2, 
E_V2DFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V2DFmode)
          && vector_operand (operands[3], E_V2DFmode))
        {
          x6 = XEXP (x2, 1);
          if (rtx_equal_p (x6, operands[1])
              && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 3991; /* avx512vl_fnmadd_v2df_mask */
        }
      if (!vector_operand (operands[1], E_V2DFmode)
          || !nonimmediate_operand (operands[3], E_V2DFmode))
        return -1;
      x6 = XEXP (x2, 1);
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 4006; /* avx512vl_fnmadd_v2df_mask3 */

    case 23:
      if (pattern1298 (x2, 
E_SImode, 
E_V32BFmode) != 0)
        return -1;
      x6 = XEXP (x2, 1);
      if (rtx_equal_p (x6, operands[1])
          && (
#line 32230 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
        return 10651; /* avx10_2_fnmaddbf16_v32bf_mask */
      if (!rtx_equal_p (x6, operands[3])
          || !(
#line 32248 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
        return -1;
      return 10654; /* avx10_2_fnmaddbf16_v32bf_mask3 */

    case 24:
      if (pattern1298 (x2, 
E_HImode, 
E_V16BFmode) != 0)
        return -1;
      x6 = XEXP (x2, 1);
      if (rtx_equal_p (x6, operands[1])
          && 
#line 32230 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return 10652; /* avx10_2_fnmaddbf16_v16bf_mask */
      if (!rtx_equal_p (x6, operands[3])
          || !
#line 32248 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10655; /* avx10_2_fnmaddbf16_v16bf_mask3 */

    case 25:
      if (pattern1298 (x2, 
E_QImode, 
E_V8BFmode) != 0)
        return -1;
      x6 = XEXP (x2, 1);
      if (rtx_equal_p (x6, operands[1])
          && 
#line 32230 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return 10653; /* avx10_2_fnmaddbf16_v8bf_mask */
      if (!rtx_equal_p (x6, operands[3])
          || !
#line 32248 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10656; /* avx10_2_fnmaddbf16_v8bf_mask3 */

    case 26:
      if (pattern1388 (x2, 
E_V8HFmode) != 0
          || !(
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16)))
        return -1;
      return 4236; /* *fmai_fnmadd_v8hf */

    case 27:
      if (pattern1388 (x2, 
E_V4SFmode) != 0
          || !
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F))
        return -1;
      return 4238; /* *fmai_fnmadd_v4sf */

    case 28:
      if (pattern1388 (x2, 
E_V2DFmode) != 0
          || !(
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return -1;
      return 4240; /* *fmai_fnmadd_v2df */

    case 29:
      return recog_159 (x1, insn, pnum_clobbers);

    default:
      return -1;
    }
}

 int
recog_164 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 1);
  operands[2] = x5;
  x6 = XEXP (x2, 1);
  operands[3] = x6;
  x7 = XEXP (x2, 2);
  operands[4] = x7;
  if (!register_operand (operands[4], E_QImode))
    return -1;
  x8 = XEXP (x3, 1);
  x9 = XVECEXP (x8, 0, 0);
  switch (XWINT (x9, 0))
    {
    case 1L:
      x10 = XVECEXP (x8, 0, 1);
      if (XWINT (x10, 0) != 3L)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V2DFmode:
          if (pattern1582 (x2, 
E_V2DFmode, 
E_V4DFmode) != 0
              || !
#line 13397 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))
            return -1;
          return 5409; /* avx512vl_unpckhpd128_mask */

        case E_V2DImode:
          if (pattern1583 (x2, 
E_V2DImode, 
E_V4DImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 14508 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && TARGET_AVX512VL)))
            return -1;
          return 7205; /* vec_interleave_highv2di_mask */

        default:
          return -1;
        }

    case 0L:
      x10 = XVECEXP (x8, 0, 1);
      if (XWINT (x10, 0) != 2L)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V2DFmode:
          if (pattern1582 (x2, 
E_V2DFmode, 
E_V4DFmode) != 0
              || !
#line 13540 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))
            return -1;
          return 5419; /* avx512vl_unpcklpd128_mask */

        case E_V2DImode:
          if (pattern1583 (x2, 
E_V2DImode, 
E_V4DImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 14558 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && TARGET_AVX512VL)))
            return -1;
          return 7211; /* vec_interleave_lowv2di_mask */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_166 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19, x20, x21, x22, x23, x24, x25;
  rtx x26, x27, x28, x29, x30, x31, x32, x33;
  rtx x34, x35, x36, x37, x38, x39, x40, x41;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  operands[1] = x5;
  x6 = XEXP (x3, 1);
  switch (XVECLEN (x6, 0))
    {
    case 16:
      x7 = XVECEXP (x6, 0, 0);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x6, 0, 1);
      if (GET_CODE (x8) == CONST_INT)
        {
          res = recog_161 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
        }
      operands[3] = x7;
      x9 = XEXP (x4, 1);
      operands[2] = x9;
      operands[4] = x8;
      x10 = XVECEXP (x6, 0, 2);
      operands[5] = x10;
      x11 = XVECEXP (x6, 0, 3);
      operands[6] = x11;
      x12 = XVECEXP (x6, 0, 4);
      operands[7] = x12;
      x13 = XVECEXP (x6, 0, 5);
      operands[8] = x13;
      x14 = XVECEXP (x6, 0, 6);
      operands[9] = x14;
      x15 = XVECEXP (x6, 0, 7);
      operands[10] = x15;
      x16 = XVECEXP (x6, 0, 8);
      operands[11] = x16;
      x17 = XVECEXP (x6, 0, 9);
      operands[12] = x17;
      x18 = XVECEXP (x6, 0, 10);
      operands[13] = x18;
      x19 = XVECEXP (x6, 0, 11);
      operands[14] = x19;
      x20 = XVECEXP (x6, 0, 12);
      operands[15] = x20;
      x21 = XVECEXP (x6, 0, 13);
      operands[16] = x21;
      x22 = XVECEXP (x6, 0, 14);
      operands[17] = x22;
      x23 = XVECEXP (x6, 0, 15);
      operands[18] = x23;
      x24 = XEXP (x2, 1);
      operands[19] = x24;
      x25 = XEXP (x2, 2);
      operands[20] = x25;
      if (!register_operand (operands[20], E_HImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SFmode:
          if (pattern1641 (x2, 
E_V16SFmode, 
E_V32SFmode) != 0
              || !nonimm_or_0_operand (operands[19], E_V16SFmode))
            return -1;
          if (const_0_to_3_operand (operands[3], E_VOIDmode)
              && const_0_to_3_operand (operands[4], E_VOIDmode)
              && const_16_to_19_operand (operands[5], E_VOIDmode)
              && const_16_to_19_operand (operands[6], E_VOIDmode)
              && const_4_to_7_operand (operands[7], E_VOIDmode)
              && const_4_to_7_operand (operands[8], E_VOIDmode)
              && const_20_to_23_operand (operands[9], E_VOIDmode)
              && const_20_to_23_operand (operands[10], E_VOIDmode)
              && const_8_to_11_operand (operands[11], E_VOIDmode)
              && const_8_to_11_operand (operands[12], E_VOIDmode)
              && const_24_to_27_operand (operands[13], E_VOIDmode)
              && const_24_to_27_operand (operands[14], E_VOIDmode)
              && const_12_to_15_operand (operands[15], E_VOIDmode)
              && const_12_to_15_operand (operands[16], E_VOIDmode)
              && const_28_to_31_operand (operands[17], E_VOIDmode)
              && const_28_to_31_operand (operands[18], E_VOIDmode)
              && (
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 14297 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512
   && (INTVAL (operands[3]) == (INTVAL (operands[7]) - 4)
       && INTVAL (operands[4]) == (INTVAL (operands[8]) - 4)
       && INTVAL (operands[5]) == (INTVAL (operands[9]) - 4)
       && INTVAL (operands[6]) == (INTVAL (operands[10]) - 4)
       && INTVAL (operands[3]) == (INTVAL (operands[11]) - 8)
       && INTVAL (operands[4]) == (INTVAL (operands[12]) - 8)
       && INTVAL (operands[5]) == (INTVAL (operands[13]) - 8)
       && INTVAL (operands[6]) == (INTVAL (operands[14]) - 8)
       && INTVAL (operands[3]) == (INTVAL (operands[15]) - 12)
       && INTVAL (operands[4]) == (INTVAL (operands[16]) - 12)
       && INTVAL (operands[5]) == (INTVAL (operands[17]) - 12)
       && INTVAL (operands[6]) == (INTVAL (operands[18]) - 12)))))
            return 7194; /* avx512f_shufps512_1_mask */
          if (!const_0_to_15_operand (operands[3], E_VOIDmode)
              || pattern1869 () != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 20426 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (INTVAL (operands[3]) & 3) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2
   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3
   && (INTVAL (operands[7]) & 3) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2
   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3
   && (INTVAL (operands[11]) & 3) == 0
   && INTVAL (operands[11]) == INTVAL (operands[12]) - 1
   && INTVAL (operands[11]) == INTVAL (operands[13]) - 2
   && INTVAL (operands[11]) == INTVAL (operands[14]) - 3
   && (INTVAL (operands[15]) & 3) == 0
   && INTVAL (operands[15]) == INTVAL (operands[16]) - 1
   && INTVAL (operands[15]) == INTVAL (operands[17]) - 2
   && INTVAL (operands[15]) == INTVAL (operands[18]) - 3) && 
#line 721 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          return 8434; /* avx512f_shuf_f32x4_1_mask */

        case E_V16SImode:
          if (pattern1641 (x2, 
E_V16SImode, 
E_V32SImode) != 0
              || !const_0_to_15_operand (operands[3], E_VOIDmode)
              || pattern1869 () != 0
              || !nonimm_or_0_operand (operands[19], E_V16SImode)
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 20426 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (INTVAL (operands[3]) & 3) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2
   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3
   && (INTVAL (operands[7]) & 3) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2
   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3
   && (INTVAL (operands[11]) & 3) == 0
   && INTVAL (operands[11]) == INTVAL (operands[12]) - 1
   && INTVAL (operands[11]) == INTVAL (operands[13]) - 2
   && INTVAL (operands[11]) == INTVAL (operands[14]) - 3
   && (INTVAL (operands[15]) & 3) == 0
   && INTVAL (operands[15]) == INTVAL (operands[16]) - 1
   && INTVAL (operands[15]) == INTVAL (operands[17]) - 2
   && INTVAL (operands[15]) == INTVAL (operands[18]) - 3) && 
#line 721 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          return 8436; /* avx512f_shuf_i32x4_1_mask */

        default:
          return -1;
        }

    case 8:
      x7 = XVECEXP (x6, 0, 0);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x6, 0, 1);
      if (GET_CODE (x8) == CONST_INT)
        {
          res = recog_162 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
        }
      operands[3] = x7;
      x9 = XEXP (x4, 1);
      operands[2] = x9;
      operands[4] = x8;
      x10 = XVECEXP (x6, 0, 2);
      operands[5] = x10;
      x11 = XVECEXP (x6, 0, 3);
      operands[6] = x11;
      x12 = XVECEXP (x6, 0, 4);
      operands[7] = x12;
      x13 = XVECEXP (x6, 0, 5);
      operands[8] = x13;
      x14 = XVECEXP (x6, 0, 6);
      operands[9] = x14;
      x15 = XVECEXP (x6, 0, 7);
      operands[10] = x15;
      x24 = XEXP (x2, 1);
      operands[11] = x24;
      x25 = XEXP (x2, 2);
      operands[12] = x25;
      if (!register_operand (operands[12], E_QImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V8SFmode:
          if (pattern1754 (x2, 
E_V8SFmode, 
E_V16SFmode) != 0)
            return -1;
          if (const_0_to_3_operand (operands[3], E_VOIDmode)
              && const_0_to_3_operand (operands[4], E_VOIDmode)
              && const_8_to_11_operand (operands[5], E_VOIDmode)
              && const_8_to_11_operand (operands[6], E_VOIDmode)
              && const_4_to_7_operand (operands[7], E_VOIDmode)
              && const_4_to_7_operand (operands[8], E_VOIDmode)
              && const_12_to_15_operand (operands[9], E_VOIDmode)
              && const_12_to_15_operand (operands[10], E_VOIDmode)
              && (
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 11490 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX
   && TARGET_AVX512VL
   && (INTVAL (operands[3]) == (INTVAL (operands[7]) - 4)
       && INTVAL (operands[4]) == (INTVAL (operands[8]) - 4)
       && INTVAL (operands[5]) == (INTVAL (operands[9]) - 4)
       && INTVAL (operands[6]) == (INTVAL (operands[10]) - 4)))))
            return 5276; /* avx_shufps256_1_mask */
          if (!const_0_to_7_operand (operands[3], E_VOIDmode)
              || pattern1844 () != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 20347 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL
   && (INTVAL (operands[3]) & 3) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2
   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3
   && (INTVAL (operands[7]) & 3) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2
   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3)))
            return -1;
          return 8432; /* avx512vl_shuf_f32x4_1_mask */

        case E_V8DFmode:
          if (pattern1754 (x2, 
E_V8DFmode, 
E_V16DFmode) != 0)
            return -1;
          if (const_0_to_1_operand (operands[3], E_VOIDmode)
              && const_8_to_9_operand (operands[4], E_VOIDmode)
              && const_2_to_3_operand (operands[5], E_VOIDmode)
              && const_10_to_11_operand (operands[6], E_VOIDmode)
              && const_4_to_5_operand (operands[7], E_VOIDmode)
              && const_12_to_13_operand (operands[8], E_VOIDmode)
              && const_6_to_7_operand (operands[9], E_VOIDmode)
              && const_14_to_15_operand (operands[10], E_VOIDmode)
              && (
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 14362 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return 7196; /* avx512f_shufpd512_1_mask */
          if (!const_0_to_7_operand (operands[3], E_VOIDmode)
              || pattern1844 () != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 20249 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (INTVAL (operands[3]) & 1) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && (INTVAL (operands[5]) & 1) == 0
   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1
   && (INTVAL (operands[7]) & 1) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && (INTVAL (operands[9]) & 1) == 0
   && INTVAL (operands[9]) == INTVAL (operands[10]) - 1) && 
#line 717 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          return 8422; /* avx512f_shuf_f64x2_1_mask */

        case E_V8DImode:
          if (pattern1755 (x2, 
E_V8DImode, 
E_V16DImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 20249 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (INTVAL (operands[3]) & 1) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && (INTVAL (operands[5]) & 1) == 0
   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1
   && (INTVAL (operands[7]) & 1) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && (INTVAL (operands[9]) & 1) == 0
   && INTVAL (operands[9]) == INTVAL (operands[10]) - 1) && 
#line 717 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          return 8424; /* avx512f_shuf_i64x2_1_mask */

        case E_V8SImode:
          if (pattern1755 (x2, 
E_V8SImode, 
E_V16SImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 20347 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL
   && (INTVAL (operands[3]) & 3) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && INTVAL (operands[3]) == INTVAL (operands[5]) - 2
   && INTVAL (operands[3]) == INTVAL (operands[6]) - 3
   && (INTVAL (operands[7]) & 3) == 0
   && INTVAL (operands[7]) == INTVAL (operands[8]) - 1
   && INTVAL (operands[7]) == INTVAL (operands[9]) - 2
   && INTVAL (operands[7]) == INTVAL (operands[10]) - 3)))
            return -1;
          return 8430; /* avx512vl_shuf_i32x4_1_mask */

        default:
          return -1;
        }

    case 4:
      x7 = XVECEXP (x6, 0, 0);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x6, 0, 1);
      if (GET_CODE (x8) == CONST_INT)
        {
          res = recog_163 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
        }
      operands[3] = x7;
      x9 = XEXP (x4, 1);
      operands[2] = x9;
      operands[4] = x8;
      x10 = XVECEXP (x6, 0, 2);
      operands[5] = x10;
      x11 = XVECEXP (x6, 0, 3);
      operands[6] = x11;
      x24 = XEXP (x2, 1);
      operands[7] = x24;
      x25 = XEXP (x2, 2);
      operands[8] = x25;
      if (!register_operand (operands[8], E_QImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V4SFmode:
          if (pattern1640 (x2, 
E_V4SFmode, 
E_V8SFmode) != 0
              || !
#line 11543 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))
            return -1;
          return 5277; /* sse_shufps_v4sf_mask */

        case E_V4DFmode:
          if (pattern1641 (x2, 
E_V4DFmode, 
E_V8DFmode) != 0
              || !nonimm_or_0_operand (operands[7], E_V4DFmode))
            return -1;
          if (const_0_to_1_operand (operands[3], E_VOIDmode)
              && const_4_to_5_operand (operands[4], E_VOIDmode)
              && const_2_to_3_operand (operands[5], E_VOIDmode)
              && const_6_to_7_operand (operands[6], E_VOIDmode)
              && (
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 14411 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX && TARGET_AVX512VL)))
            return 7198; /* avx_shufpd256_1_mask */
          if (!const_0_to_3_operand (operands[3], E_VOIDmode)
              || !const_0_to_3_operand (operands[4], E_VOIDmode)
              || !const_4_to_7_operand (operands[5], E_VOIDmode)
              || !const_4_to_7_operand (operands[6], E_VOIDmode)
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 20192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL
   && (INTVAL (operands[3]) & 1) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && (INTVAL (operands[5]) & 1) == 0
   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1)))
            return -1;
          return 8420; /* avx512dq_shuf_f64x2_1_mask */

        case E_V4DImode:
          if (pattern1640 (x2, 
E_V4DImode, 
E_V8DImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 20192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL
   && (INTVAL (operands[3]) & 1) == 0
   && INTVAL (operands[3]) == INTVAL (operands[4]) - 1
   && (INTVAL (operands[5]) & 1) == 0
   && INTVAL (operands[5]) == INTVAL (operands[6]) - 1)))
            return -1;
          return 8418; /* avx512dq_shuf_i64x2_1_mask */

        default:
          return -1;
        }

    case 2:
      x7 = XVECEXP (x6, 0, 0);
      if (GET_CODE (x7) != CONST_INT)
        return -1;
      x8 = XVECEXP (x6, 0, 1);
      if (GET_CODE (x8) == CONST_INT)
        {
          res = recog_164 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
        }
      operands[3] = x7;
      if (!const_0_to_1_operand (operands[3], E_VOIDmode)
          || pattern1214 (x2, 
E_V2DFmode, 
E_V4DFmode) != 0)
        return -1;
      operands[4] = x8;
      if (!const_2_to_3_operand (operands[4], E_VOIDmode))
        return -1;
      x24 = XEXP (x2, 1);
      operands[5] = x24;
      if (!nonimm_or_0_operand (operands[5], E_V2DFmode))
        return -1;
      x25 = XEXP (x2, 2);
      operands[6] = x25;
      if (!register_operand (operands[6], E_QImode)
          || !
#line 14453 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))
        return -1;
      return 7199; /* sse2_shufpd_v2df_mask */

    case 64:
      return recog_165 (x1, insn, pnum_clobbers);

    case 32:
      if (pattern899 (x6) != 0)
        return -1;
      x9 = XEXP (x4, 1);
      operands[2] = x9;
      x24 = XEXP (x2, 1);
      operands[3] = x24;
      x25 = XEXP (x2, 2);
      operands[4] = x25;
      if (!register_operand (operands[4], E_SImode))
        return -1;
      x7 = XVECEXP (x6, 0, 0);
      switch (XWINT (x7, 0))
        {
        case 8L:
          x8 = XVECEXP (x6, 0, 1);
          if (XWINT (x8, 0) != 40L)
            return -1;
          x10 = XVECEXP (x6, 0, 2);
          if (XWINT (x10, 0) != 9L)
            return -1;
          x11 = XVECEXP (x6, 0, 3);
          if (XWINT (x11, 0) != 41L)
            return -1;
          x12 = XVECEXP (x6, 0, 4);
          if (XWINT (x12, 0) != 10L)
            return -1;
          x13 = XVECEXP (x6, 0, 5);
          if (XWINT (x13, 0) != 42L)
            return -1;
          x14 = XVECEXP (x6, 0, 6);
          if (XWINT (x14, 0) != 11L)
            return -1;
          x15 = XVECEXP (x6, 0, 7);
          if (XWINT (x15, 0) != 43L
              || pattern1884 (x6) != 0)
            return -1;
          x26 = XVECEXP (x6, 0, 16);
          if (XWINT (x26, 0) != 24L)
            return -1;
          x27 = XVECEXP (x6, 0, 17);
          if (XWINT (x27, 0) != 56L)
            return -1;
          x28 = XVECEXP (x6, 0, 18);
          if (XWINT (x28, 0) != 25L)
            return -1;
          x29 = XVECEXP (x6, 0, 19);
          if (XWINT (x29, 0) != 57L)
            return -1;
          x30 = XVECEXP (x6, 0, 20);
          if (XWINT (x30, 0) != 26L)
            return -1;
          x31 = XVECEXP (x6, 0, 21);
          if (XWINT (x31, 0) != 58L)
            return -1;
          x32 = XVECEXP (x6, 0, 22);
          if (XWINT (x32, 0) != 27L)
            return -1;
          x33 = XVECEXP (x6, 0, 23);
          if (XWINT (x33, 0) != 59L
              || pattern1889 (x6) != 0
              || pattern1582 (x2, 
E_V32QImode, 
E_V64QImode) != 0
              || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 19465 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL && TARGET_AVX512BW)))
            return -1;
          return 8326; /* avx2_interleave_highv32qi_mask */

        case 0L:
          x8 = XVECEXP (x6, 0, 1);
          if (XWINT (x8, 0) != 32L)
            return -1;
          x10 = XVECEXP (x6, 0, 2);
          if (XWINT (x10, 0) != 1L)
            return -1;
          x11 = XVECEXP (x6, 0, 3);
          if (XWINT (x11, 0) != 33L)
            return -1;
          x12 = XVECEXP (x6, 0, 4);
          if (XWINT (x12, 0) != 2L)
            return -1;
          x13 = XVECEXP (x6, 0, 5);
          if (XWINT (x13, 0) != 34L)
            return -1;
          x14 = XVECEXP (x6, 0, 6);
          if (XWINT (x14, 0) != 3L)
            return -1;
          x15 = XVECEXP (x6, 0, 7);
          if (XWINT (x15, 0) != 35L)
            return -1;
          x26 = XVECEXP (x6, 0, 16);
          if (XWINT (x26, 0) != 16L)
            return -1;
          x27 = XVECEXP (x6, 0, 17);
          if (XWINT (x27, 0) != 48L)
            return -1;
          x28 = XVECEXP (x6, 0, 18);
          if (XWINT (x28, 0) != 17L)
            return -1;
          x29 = XVECEXP (x6, 0, 19);
          if (XWINT (x29, 0) != 49L)
            return -1;
          x30 = XVECEXP (x6, 0, 20);
          if (XWINT (x30, 0) != 18L)
            return -1;
          x31 = XVECEXP (x6, 0, 21);
          if (XWINT (x31, 0) != 50L)
            return -1;
          x32 = XVECEXP (x6, 0, 22);
          if (XWINT (x32, 0) != 19L)
            return -1;
          x33 = XVECEXP (x6, 0, 23);
          if (XWINT (x33, 0) != 51L)
            return -1;
          x16 = XVECEXP (x6, 0, 8);
          switch (XWINT (x16, 0))
            {
            case 4L:
              x17 = XVECEXP (x6, 0, 9);
              if (XWINT (x17, 0) != 36L)
                return -1;
              x18 = XVECEXP (x6, 0, 10);
              if (XWINT (x18, 0) != 5L)
                return -1;
              x19 = XVECEXP (x6, 0, 11);
              if (XWINT (x19, 0) != 37L)
                return -1;
              x20 = XVECEXP (x6, 0, 12);
              if (XWINT (x20, 0) != 6L)
                return -1;
              x21 = XVECEXP (x6, 0, 13);
              if (XWINT (x21, 0) != 38L)
                return -1;
              x22 = XVECEXP (x6, 0, 14);
              if (XWINT (x22, 0) != 7L)
                return -1;
              x23 = XVECEXP (x6, 0, 15);
              if (XWINT (x23, 0) != 39L)
                return -1;
              x34 = XVECEXP (x6, 0, 24);
              if (XWINT (x34, 0) != 20L)
                return -1;
              x35 = XVECEXP (x6, 0, 25);
              if (XWINT (x35, 0) != 52L)
                return -1;
              x36 = XVECEXP (x6, 0, 26);
              if (XWINT (x36, 0) != 21L)
                return -1;
              x37 = XVECEXP (x6, 0, 27);
              if (XWINT (x37, 0) != 53L)
                return -1;
              x38 = XVECEXP (x6, 0, 28);
              if (XWINT (x38, 0) != 22L)
                return -1;
              x39 = XVECEXP (x6, 0, 29);
              if (XWINT (x39, 0) != 54L)
                return -1;
              x40 = XVECEXP (x6, 0, 30);
              if (XWINT (x40, 0) != 23L)
                return -1;
              x41 = XVECEXP (x6, 0, 31);
              if (XWINT (x41, 0) != 55L
                  || pattern1582 (x2, 
E_V32QImode, 
E_V64QImode) != 0
                  || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 19561 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL && TARGET_AVX512BW)))
                return -1;
              return 8332; /* avx2_interleave_lowv32qi_mask */

            case 8L:
              x17 = XVECEXP (x6, 0, 9);
              if (XWINT (x17, 0) != 40L)
                return -1;
              x18 = XVECEXP (x6, 0, 10);
              if (XWINT (x18, 0) != 9L)
                return -1;
              x19 = XVECEXP (x6, 0, 11);
              if (XWINT (x19, 0) != 41L)
                return -1;
              x20 = XVECEXP (x6, 0, 12);
              if (XWINT (x20, 0) != 10L)
                return -1;
              x21 = XVECEXP (x6, 0, 13);
              if (XWINT (x21, 0) != 42L)
                return -1;
              x22 = XVECEXP (x6, 0, 14);
              if (XWINT (x22, 0) != 11L)
                return -1;
              x23 = XVECEXP (x6, 0, 15);
              if (XWINT (x23, 0) != 43L)
                return -1;
              x34 = XVECEXP (x6, 0, 24);
              if (XWINT (x34, 0) != 24L)
                return -1;
              x35 = XVECEXP (x6, 0, 25);
              if (XWINT (x35, 0) != 56L)
                return -1;
              x36 = XVECEXP (x6, 0, 26);
              if (XWINT (x36, 0) != 25L)
                return -1;
              x37 = XVECEXP (x6, 0, 27);
              if (XWINT (x37, 0) != 57L)
                return -1;
              x38 = XVECEXP (x6, 0, 28);
              if (XWINT (x38, 0) != 26L)
                return -1;
              x39 = XVECEXP (x6, 0, 29);
              if (XWINT (x39, 0) != 58L)
                return -1;
              x40 = XVECEXP (x6, 0, 30);
              if (XWINT (x40, 0) != 27L)
                return -1;
              x41 = XVECEXP (x6, 0, 31);
              if (XWINT (x41, 0) != 59L)
                return -1;
              switch (GET_MODE (operands[0]))
                {
                case E_V32HImode:
                  if (pattern1582 (x2, 
E_V32HImode, 
E_V64HImode) != 0
                      || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19681 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8354; /* avx512bw_interleave_lowv32hi_mask */

                case E_V32HFmode:
                  if (pattern1582 (x2, 
E_V32HFmode, 
E_V64HFmode) != 0
                      || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19681 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8356; /* avx512bw_interleave_lowv32hf_mask */

                case E_V32BFmode:
                  if (pattern1582 (x2, 
E_V32BFmode, 
E_V64BFmode) != 0
                      || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19681 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                    return -1;
                  return 8358; /* avx512bw_interleave_lowv32bf_mask */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case 4L:
          x8 = XVECEXP (x6, 0, 1);
          if (XWINT (x8, 0) != 36L)
            return -1;
          x10 = XVECEXP (x6, 0, 2);
          if (XWINT (x10, 0) != 5L)
            return -1;
          x11 = XVECEXP (x6, 0, 3);
          if (XWINT (x11, 0) != 37L)
            return -1;
          x12 = XVECEXP (x6, 0, 4);
          if (XWINT (x12, 0) != 6L)
            return -1;
          x13 = XVECEXP (x6, 0, 5);
          if (XWINT (x13, 0) != 38L)
            return -1;
          x14 = XVECEXP (x6, 0, 6);
          if (XWINT (x14, 0) != 7L)
            return -1;
          x15 = XVECEXP (x6, 0, 7);
          if (XWINT (x15, 0) != 39L
              || pattern1884 (x6) != 0)
            return -1;
          x26 = XVECEXP (x6, 0, 16);
          if (XWINT (x26, 0) != 20L)
            return -1;
          x27 = XVECEXP (x6, 0, 17);
          if (XWINT (x27, 0) != 52L)
            return -1;
          x28 = XVECEXP (x6, 0, 18);
          if (XWINT (x28, 0) != 21L)
            return -1;
          x29 = XVECEXP (x6, 0, 19);
          if (XWINT (x29, 0) != 53L)
            return -1;
          x30 = XVECEXP (x6, 0, 20);
          if (XWINT (x30, 0) != 22L)
            return -1;
          x31 = XVECEXP (x6, 0, 21);
          if (XWINT (x31, 0) != 54L)
            return -1;
          x32 = XVECEXP (x6, 0, 22);
          if (XWINT (x32, 0) != 23L)
            return -1;
          x33 = XVECEXP (x6, 0, 23);
          if (XWINT (x33, 0) != 55L
              || pattern1889 (x6) != 0)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_V32HImode:
              if (pattern1582 (x2, 
E_V32HImode, 
E_V64HImode) != 0
                  || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19613 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 8336; /* avx512bw_interleave_highv32hi_mask */

            case E_V32HFmode:
              if (pattern1582 (x2, 
E_V32HFmode, 
E_V64HFmode) != 0
                  || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19613 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 8338; /* avx512bw_interleave_highv32hf_mask */

            case E_V32BFmode:
              if (pattern1582 (x2, 
E_V32BFmode, 
E_V64BFmode) != 0
                  || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 19613 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1032 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 8340; /* avx512bw_interleave_highv32bf_mask */

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_194 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  switch (pattern149 (x2))
    {
    case 0:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24130 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512BW && TARGET_AVX512VL)))
        return -1;
      return 8758; /* avx2_sign_extendv16qiv16hi2_mask */

    case 1:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24184 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
        return -1;
      return 8766; /* avx512bw_sign_extendv32qiv32hi2_mask */

    case 2:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24254 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512BW && TARGET_AVX512VL)))
        return -1;
      return 8778; /* *sse4_1_sign_extendv8qiv8hi2_mask_1 */

    case 3:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24379 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8790; /* avx512f_sign_extendv16qiv16si2_mask */

    case 4:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24522 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8818; /* avx512f_sign_extendv16hiv16si2_mask */

    case 5:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24411 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
        return -1;
      return 8798; /* *avx2_sign_extendv8qiv8si2_mask_1 */

    case 6:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24575 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
        return -1;
      return 8826; /* avx2_sign_extendv8hiv8si2_mask */

    case 7:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24472 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
        return -1;
      return 8810; /* *sse4_1_sign_extendv4qiv4si2_mask_1 */

    case 8:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24645 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
        return -1;
      return 8838; /* *sse4_1_sign_extendv4hiv4si2_mask_1 */

    case 9:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24776 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8854; /* *avx512f_sign_extendv8qiv8di2_mask_1 */

    case 10:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24947 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8885; /* avx512f_sign_extendv8hiv8di2_mask */

    case 11:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25084 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8913; /* avx512f_sign_extendv8siv8di2_mask */

    case 12:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24834 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
        return -1;
      return 8866; /* *avx2_sign_extendv4qiv4di2_mask_1 */

    case 13:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24977 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
        return -1;
      return 8893; /* *avx2_sign_extendv4hiv4di2_mask_1 */

    case 14:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25135 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
        return -1;
      return 8919; /* avx2_sign_extendv4siv4di2_mask */

    case 15:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24896 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
        return -1;
      return 8878; /* *sse4_1_sign_extendv2qiv2di2_mask_1 */

    case 16:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25035 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
        return -1;
      return 8905; /* *sse4_1_sign_extendv2hiv2di2_mask_1 */

    case 17:
      if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25201 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
        return -1;
      return 8929; /* *sse4_1_sign_extendv2siv2di2_mask_1 */

    case 18:
      x3 = XEXP (x2, 0);
      x4 = XEXP (x3, 0);
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      switch (pattern903 (x2))
        {
        case 0:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24242 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512BW && TARGET_AVX512VL)))
            return 8774; /* sse4_1_sign_extendv8qiv8hi2_mask */
          break;

        case 1:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24400 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
            return 8794; /* avx2_sign_extendv8qiv8si2_mask */
          break;

        case 2:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24766 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return 8850; /* avx512f_sign_extendv8qiv8di2_mask */
          break;

        case 3:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24460 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
            return 8806; /* sse4_1_sign_extendv4qiv4si2_mask */
          break;

        case 4:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24633 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
            return 8834; /* sse4_1_sign_extendv4hiv4si2_mask */
          break;

        case 5:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24823 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
            return 8862; /* avx2_sign_extendv4qiv4di2_mask */
          break;

        case 6:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24966 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL)))
            return 8889; /* avx2_sign_extendv4hiv4di2_mask */
          break;

        case 7:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24884 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
            return 8874; /* sse4_1_sign_extendv2qiv2di2_mask */
          break;

        case 8:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25023 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
            return 8901; /* sse4_1_sign_extendv2hiv2di2_mask */
          break;

        case 9:
          if ((
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25189 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL)))
            return 8925; /* sse4_1_sign_extendv2siv2di2_mask */
          break;

        default:
          break;
        }
      if (GET_CODE (x5) != SUBREG)
        return -1;
      switch (pattern906 (x2))
        {
        case 0:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24278 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512BW && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8782; /* *sse4_1_sign_extendv8qiv8hi2_mask_2 */

        case 1:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24430 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8802; /* *avx2_sign_extendv8qiv8si2_mask_2 */

        case 2:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24794 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512 && ix86_pre_reload_split ())))
            return -1;
          return 8858; /* *avx512f_sign_extendv8qiv8di2_mask_2 */

        case 3:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24664 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8842; /* *sse4_1_sign_extendv4hiv4si2_mask_2 */

        case 4:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24994 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8897; /* *avx2_sign_extendv4hiv4di2_mask_2 */

        case 5:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25219 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8933; /* *sse4_1_sign_extendv2siv2di2_mask_2 */

        case 6:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24495 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8814; /* *sse4_1_sign_extendv4qiv4si2_mask_2 */

        case 7:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 24855 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8870; /* *avx2_sign_extendv4qiv4di2_mask_2 */

        case 8:
          if (!(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 25057 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1 && TARGET_AVX512VL
   && ix86_pre_reload_split ())))
            return -1;
          return 8909; /* *sse4_1_sign_extendv2hiv2di2_mask_2 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_205 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  x5 = XEXP (x3, 1);
  operands[2] = x5;
  x6 = XEXP (x2, 1);
  operands[3] = x6;
  x7 = XEXP (x2, 2);
  operands[4] = x7;
  switch (GET_MODE (operands[0]))
    {
    case E_V8SFmode:
      if (pattern127 (x2, 
E_V8SFmode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && TARGET_AVX512VL
   && (!true || 32 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 428 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX))))
        return -1;
      return 3728; /* *iorv8sf3_mask */

    case E_V4SFmode:
      if (pattern127 (x2, 
E_V4SFmode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && TARGET_AVX512VL
   && (!true || 32 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2])))))
        return -1;
      return 3734; /* *iorv4sf3_mask */

    case E_V4DFmode:
      if (pattern127 (x2, 
E_V4DFmode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && TARGET_AVX512VL
   && (!true || 64 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 429 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX))))
        return -1;
      return 3740; /* *iorv4df3_mask */

    case E_V2DFmode:
      if (pattern127 (x2, 
E_V2DFmode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && TARGET_AVX512VL
   && (!true || 64 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 429 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
        return -1;
      return 3746; /* *iorv2df3_mask */

    case E_V16SFmode:
      if (pattern128 (x2, 
E_V16SFmode, 
E_HImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!true || 32 != 16)) && 
#line 493 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 3758; /* *iorv16sf3_mask */

    case E_V8DFmode:
      if (pattern128 (x2, 
E_V8DFmode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!true || 64 != 16)) && 
#line 494 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 3764; /* *iorv8df3_mask */

    case E_V16SImode:
      if (pattern485 (x2, 
E_V16SImode, 
E_HImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (64 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V16SImode, operands)) && 
#line 807 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512))))
        return -1;
      return 8011; /* *iorv16si3_mask */

    case E_V8SImode:
      if (pattern485 (x2, 
E_V8SImode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (32 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V8SImode, operands)) && 
#line 807 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX))))
        return -1;
      return 8017; /* *iorv8si3_mask */

    case E_V4SImode:
      if (pattern485 (x2, 
E_V4SImode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (16 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V4SImode, operands))))
        return -1;
      return 8023; /* *iorv4si3_mask */

    case E_V8DImode:
      if (pattern485 (x2, 
E_V8DImode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (64 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V8DImode, operands)) && 
#line 808 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512))))
        return -1;
      return 8029; /* *iorv8di3_mask */

    case E_V4DImode:
      if (pattern485 (x2, 
E_V4DImode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (32 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V4DImode, operands)) && 
#line 808 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX))))
        return -1;
      return 8035; /* *iorv4di3_mask */

    case E_V2DImode:
      if (pattern485 (x2, 
E_V2DImode, 
E_QImode) != 0
          || !(
#line 84 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && (16 == 64 || TARGET_AVX512VL)
   && ix86_binary_operator_ok (IOR, V2DImode, operands))))
        return -1;
      return 8041; /* *iorv2di3_mask */

    default:
      return -1;
    }
}

 int
recog_214 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XVECEXP (x2, 0, 0);
  operands[1] = x3;
  switch (GET_MODE (operands[0]))
    {
    case E_V8SFmode:
      if (!register_operand (operands[0], E_V8SFmode)
          || GET_MODE (x2) != E_V8SFmode
          || !vector_operand (operands[1], E_V8SFmode)
          || !(
#line 2911 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 440 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return -1;
      return 2881; /* avx_rcpv8sf2 */

    case E_V4SFmode:
      if (!register_operand (operands[0], E_V4SFmode)
          || GET_MODE (x2) != E_V4SFmode
          || !vector_operand (operands[1], E_V4SFmode)
          || !
#line 2911 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
        return -1;
      return 2882; /* sse_rcpv4sf2 */

    case E_V32HFmode:
      if (!register_operand (operands[0], E_V32HFmode)
          || GET_MODE (x2) != E_V32HFmode
          || !nonimmediate_operand (operands[1], E_V32HFmode)
          || !(
#line 2965 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 554 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 2885; /* avx512fp16_rcpv32hf2 */

    case E_V16HFmode:
      if (!register_operand (operands[0], E_V16HFmode)
          || GET_MODE (x2) != E_V16HFmode
          || !nonimmediate_operand (operands[1], E_V16HFmode)
          || !(
#line 2965 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 554 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 2887; /* avx512fp16_rcpv16hf2 */

    case E_V8HFmode:
      if (!register_operand (operands[0], E_V8HFmode)
          || GET_MODE (x2) != E_V8HFmode
          || !nonimmediate_operand (operands[1], E_V8HFmode)
          || !(
#line 2965 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16) && 
#line 554 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 2889; /* avx512fp16_rcpv8hf2 */

    case E_V32BFmode:
      if (!register_operand (operands[0], E_V32BFmode)
          || GET_MODE (x2) != E_V32BFmode
          || !nonimmediate_operand (operands[1], E_V32BFmode)
          || !(
#line 32409 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
        return -1;
      return 10693; /* avx10_2_rcpbf16_v32bf */

    case E_V16BFmode:
      if (!register_operand (operands[0], E_V16BFmode)
          || GET_MODE (x2) != E_V16BFmode
          || !nonimmediate_operand (operands[1], E_V16BFmode)
          || !
#line 32409 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10695; /* avx10_2_rcpbf16_v16bf */

    case E_V8BFmode:
      if (!register_operand (operands[0], E_V8BFmode)
          || GET_MODE (x2) != E_V8BFmode
          || !nonimmediate_operand (operands[1], E_V8BFmode)
          || !
#line 32409 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10697; /* avx10_2_rcpbf16_v8bf */

    default:
      return -1;
    }
}

 int
recog_221 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XVECEXP (x2, 0, 0);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  x6 = XEXP (x5, 0);
  operands[1] = x6;
  switch (pattern1130 (x2))
    {
    case 0:
      if (pattern1595 (x2, 
E_V32HFmode, 
E_SImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 5927 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
        return -1;
      return 3947; /* fma_fnmadd_v32hf_maskz_1_round */

    case 1:
      if (pattern1595 (x2, 
E_V16HFmode, 
E_HImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 5928 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
        return -1;
      return 3951; /* fma_fnmadd_v16hf_maskz_1_round */

    case 2:
      if (pattern1595 (x2, 
E_V16SFmode, 
E_HImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 5931 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 3959; /* fma_fnmadd_v16sf_maskz_1_round */

    case 3:
      if (pattern1595 (x2, 
E_V8SFmode, 
E_QImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
        return -1;
      return 3963; /* fma_fnmadd_v8sf_maskz_1_round */

    case 4:
      if (pattern1595 (x2, 
E_V8DFmode, 
E_QImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 5933 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 3970; /* fma_fnmadd_v8df_maskz_1_round */

    case 5:
      if (pattern1595 (x2, 
E_V4DFmode, 
E_QImode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
        return -1;
      return 3974; /* fma_fnmadd_v4df_maskz_1_round */

    case 6:
      if (pattern1596 (x2, 
E_V32HFmode, 
E_SImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V32HFmode)
          && register_operand (operands[3], E_V32HFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
            return 3978; /* avx512bw_fnmadd_v32hf_mask_round */
        }
      if (!register_operand (operands[1], E_V32HFmode)
          || !nonimmediate_operand (operands[3], E_V32HFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
        return -1;
      return 3993; /* avx512bw_fnmadd_v32hf_mask3_round */

    case 7:
      if (pattern1596 (x2, 
E_V16HFmode, 
E_HImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V16HFmode)
          && register_operand (operands[3], E_V16HFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
            return 3980; /* avx512vl_fnmadd_v16hf_mask_round */
        }
      if (!register_operand (operands[1], E_V16HFmode)
          || !nonimmediate_operand (operands[3], E_V16HFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
        return -1;
      return 3995; /* avx512vl_fnmadd_v16hf_mask3_round */

    case 8:
      if (pattern1596 (x2, 
E_V16SFmode, 
E_HImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V16SFmode)
          && register_operand (operands[3], E_V16SFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return 3983; /* avx512f_fnmadd_v16sf_mask_round */
        }
      if (!register_operand (operands[1], E_V16SFmode)
          || !nonimmediate_operand (operands[3], E_V16SFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 3998; /* avx512f_fnmadd_v16sf_mask3_round */

    case 9:
      if (pattern1596 (x2, 
E_V8SFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V8SFmode)
          && register_operand (operands[3], E_V8SFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return 3985; /* avx512vl_fnmadd_v8sf_mask_round */
        }
      if (!register_operand (operands[1], E_V8SFmode)
          || !nonimmediate_operand (operands[3], E_V8SFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
        return -1;
      return 4000; /* avx512vl_fnmadd_v8sf_mask3_round */

    case 10:
      if (pattern1596 (x2, 
E_V8DFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V8DFmode)
          && register_operand (operands[3], E_V8DFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return 3988; /* avx512f_fnmadd_v8df_mask_round */
        }
      if (!register_operand (operands[1], E_V8DFmode)
          || !nonimmediate_operand (operands[3], E_V8DFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
        return -1;
      return 4003; /* avx512f_fnmadd_v8df_mask3_round */

    case 11:
      if (pattern1596 (x2, 
E_V4DFmode, 
E_QImode) != 0)
        return -1;
      if (nonimmediate_operand (operands[1], E_V4DFmode)
          && register_operand (operands[3], E_V4DFmode))
        {
          x7 = XEXP (x3, 1);
          if (rtx_equal_p (x7, operands[1])
              && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6194 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return 3990; /* avx512vl_fnmadd_v4df_mask_round */
        }
      if (!register_operand (operands[1], E_V4DFmode)
          || !nonimmediate_operand (operands[3], E_V4DFmode))
        return -1;
      x7 = XEXP (x3, 1);
      if (!rtx_equal_p (x7, operands[3])
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6212 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
        return -1;
      return 4005; /* avx512vl_fnmadd_v4df_mask3_round */

    case 12:
      if (pattern1650 (x2, 
E_V8HFmode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
        return -1;
      return 4237; /* *fmai_fnmadd_v8hf_round */

    case 13:
      if (pattern1650 (x2, 
E_V4SFmode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F)))
        return -1;
      return 4239; /* *fmai_fnmadd_v4sf_round */

    case 14:
      if (pattern1650 (x2, 
E_V2DFmode) != 0
          || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6632 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
        return -1;
      return 4241; /* *fmai_fnmadd_v2df_round */

    case 15:
      x7 = XEXP (x3, 1);
      switch (GET_CODE (x7))
        {
        case CONST_INT:
        case CONST_DOUBLE:
        case CONST_VECTOR:
          operands[4] = x7;
          x8 = XEXP (x3, 2);
          operands[5] = x8;
          x9 = XVECEXP (x2, 0, 1);
          operands[6] = x9;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern1597 (x2, 
E_V4SFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4)))
                return -1;
              return 4014; /* *fma_fnmsub_v4sf */

            case E_V2DFmode:
              if (pattern1597 (x2, 
E_V2DFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4)))
                return -1;
              return 4018; /* *fma_fnmsub_v2df */

            case E_V8SFmode:
              if (pattern1598 (x2, 
E_V8SFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V8SFmode)
                  && nonimmediate_operand (operands[2], E_V8SFmode)
                  && nonimmediate_operand (operands[3], E_V8SFmode)
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4)))
                return 4022; /* *fma_fnmsub_v8sf */
              if (!register_operand (operands[1], E_V8SFmode)
                  || !register_operand (operands[2], E_V8SFmode)
                  || !register_operand (operands[3], E_V8SFmode)
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              return 4046; /* fma_fnmsub_v8sf_maskz_1_round */

            case E_V4DFmode:
              if (pattern1598 (x2, 
E_V4DFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4DFmode)
                  && nonimmediate_operand (operands[2], E_V4DFmode)
                  && nonimmediate_operand (operands[3], E_V4DFmode)
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4)))
                return 4026; /* *fma_fnmsub_v4df */
              if (!register_operand (operands[1], E_V4DFmode)
                  || !register_operand (operands[2], E_V4DFmode)
                  || !register_operand (operands[3], E_V4DFmode)
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              return 4057; /* fma_fnmsub_v4df_maskz_1_round */

            case E_V32HFmode:
              if (pattern1599 (x2, 
E_SImode, 
E_V32HFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 5927 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
                return -1;
              return 4030; /* fma_fnmsub_v32hf_maskz_1_round */

            case E_V16HFmode:
              if (pattern1599 (x2, 
E_HImode, 
E_V16HFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (32 == 64 || TARGET_AVX512VL) && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 5928 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
                return -1;
              return 4034; /* fma_fnmsub_v16hf_maskz_1_round */

            case E_V16SFmode:
              if (pattern1599 (x2, 
E_HImode, 
E_V16SFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 5931 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 4042; /* fma_fnmsub_v16sf_maskz_1_round */

            case E_V8DFmode:
              if (pattern1599 (x2, 
E_QImode, 
E_V8DFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && (64 == 64 || TARGET_AVX512VL) && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 5933 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 4053; /* fma_fnmsub_v8df_maskz_1_round */

            default:
              return -1;
            }

        case REG:
        case SUBREG:
        case MEM:
          switch (pattern1129 (x2))
            {
            case 0:
              if (pattern1600 (x2, 
E_V32HFmode, 
E_SImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V32HFmode)
                  && register_operand (operands[3], E_V32HFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
                return 4061; /* avx512bw_fnmsub_v32hf_mask_round */
              if (!register_operand (operands[1], E_V32HFmode)
                  || !nonimmediate_operand (operands[3], E_V32HFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V32HFmode == V16SFmode
							       || V32HFmode == V8DFmode
							       || V32HFmode == V8DImode
							       || V32HFmode == V16SImode
							       || V32HFmode == V32HImode
							       || V32HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V32HFmode == V8SFmode
								       || V32HFmode == V4DFmode
								       || V32HFmode == V4DImode
								       || V32HFmode == V8SImode
								       || V32HFmode == V16HImode
								       || V32HFmode == V16HFmode)))) && 
#line 524 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512))))
                return -1;
              return 4076; /* avx512bw_fnmsub_v32hf_mask3_round */

            case 1:
              if (pattern1600 (x2, 
E_V16HFmode, 
E_HImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V16HFmode)
                  && register_operand (operands[3], E_V16HFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
                return 4063; /* avx512vl_fnmsub_v16hf_mask_round */
              if (!register_operand (operands[1], E_V16HFmode)
                  || !nonimmediate_operand (operands[3], E_V16HFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16HFmode == V16SFmode
							       || V16HFmode == V8DFmode
							       || V16HFmode == V8DImode
							       || V16HFmode == V16SImode
							       || V16HFmode == V32HImode
							       || V16HFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16HFmode == V8SFmode
								       || V16HFmode == V4DFmode
								       || V16HFmode == V4DImode
								       || V16HFmode == V8SImode
								       || V16HFmode == V16HImode
								       || V16HFmode == V16HFmode)))) && 
#line 525 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL))))
                return -1;
              return 4078; /* avx512vl_fnmsub_v16hf_mask3_round */

            case 2:
              if (pattern1600 (x2, 
E_V16SFmode, 
E_HImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V16SFmode)
                  && register_operand (operands[3], E_V16SFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return 4066; /* avx512f_fnmsub_v16sf_mask_round */
              if (!register_operand (operands[1], E_V16SFmode)
                  || !nonimmediate_operand (operands[3], E_V16SFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V16SFmode == V16SFmode
							       || V16SFmode == V8DFmode
							       || V16SFmode == V8DImode
							       || V16SFmode == V16SImode
							       || V16SFmode == V32HImode
							       || V16SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V16SFmode == V8SFmode
								       || V16SFmode == V4DFmode
								       || V16SFmode == V4DImode
								       || V16SFmode == V8SImode
								       || V16SFmode == V16HImode
								       || V16SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 4081; /* avx512f_fnmsub_v16sf_mask3_round */

            case 3:
              if (pattern1600 (x2, 
E_V8SFmode, 
E_QImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V8SFmode)
                  && register_operand (operands[3], E_V8SFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return 4068; /* avx512vl_fnmsub_v8sf_mask_round */
              if (!register_operand (operands[1], E_V8SFmode)
                  || !nonimmediate_operand (operands[3], E_V8SFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8SFmode == V16SFmode
							       || V8SFmode == V8DFmode
							       || V8SFmode == V8DImode
							       || V8SFmode == V16SImode
							       || V8SFmode == V32HImode
							       || V8SFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8SFmode == V8SFmode
								       || V8SFmode == V4DFmode
								       || V8SFmode == V4DImode
								       || V8SFmode == V8SImode
								       || V8SFmode == V16HImode
								       || V8SFmode == V16HFmode)))) && 
#line 527 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              return 4083; /* avx512vl_fnmsub_v8sf_mask3_round */

            case 4:
              if (pattern1600 (x2, 
E_V8DFmode, 
E_QImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V8DFmode)
                  && register_operand (operands[3], E_V8DFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return 4071; /* avx512f_fnmsub_v8df_mask_round */
              if (!register_operand (operands[1], E_V8DFmode)
                  || !nonimmediate_operand (operands[3], E_V8DFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V8DFmode == V16SFmode
							       || V8DFmode == V8DFmode
							       || V8DFmode == V8DImode
							       || V8DFmode == V16SImode
							       || V8DFmode == V32HImode
							       || V8DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V8DFmode == V8SFmode
								       || V8DFmode == V4DFmode
								       || V8DFmode == V4DImode
								       || V8DFmode == V8SImode
								       || V8DFmode == V16HImode
								       || V8DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              return 4086; /* avx512f_fnmsub_v8df_mask3_round */

            case 5:
              if (pattern1600 (x2, 
E_V4DFmode, 
E_QImode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4DFmode)
                  && register_operand (operands[3], E_V4DFmode)
                  && rtx_equal_p (x7, operands[1])
                  && (
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return 4073; /* avx512vl_fnmsub_v4df_mask_round */
              if (!register_operand (operands[1], E_V4DFmode)
                  || !nonimmediate_operand (operands[3], E_V4DFmode)
                  || !rtx_equal_p (x7, operands[3])
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6323 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ((V4DFmode == V16SFmode
							       || V4DFmode == V8DFmode
							       || V4DFmode == V8DImode
							       || V4DFmode == V16SImode
							       || V4DFmode == V32HImode
							       || V4DFmode == V32HFmode)
							       || (TARGET_AVX10_2_256
								   && (V4DFmode == V8SFmode
								       || V4DFmode == V4DFmode
								       || V4DFmode == V4DImode
								       || V4DFmode == V8SImode
								       || V4DFmode == V16HImode
								       || V4DFmode == V16HFmode)))) && 
#line 528 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              return 4088; /* avx512vl_fnmsub_v4df_mask3_round */

            case 6:
              if (pattern1651 (x2, 
E_V8HFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6651 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 478 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16))))
                return -1;
              return 4243; /* *fmai_fnmsub_v8hf_round */

            case 7:
              if (pattern1651 (x2, 
E_V4SFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && 
#line 6651 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F)))
                return -1;
              return 4245; /* *fmai_fnmsub_v4sf_round */

            case 8:
              if (pattern1651 (x2, 
E_V2DFmode) != 0
                  || !(
#line 234 "../../src/gcc/config/i386/subst.md"
(TARGET_AVX512F) && (
#line 6651 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_AVX512F) && 
#line 479 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))))
                return -1;
              return 4247; /* *fmai_fnmsub_v2df_round */

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_233 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10;
  int res ATTRIBUTE_UNUSED;
  if (pnum_clobbers == NULL)
    return -1;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != MEM)
    return -1;
  operands[5] = x2;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != UNSPEC
      || XVECLEN (x3, 0) != 4
      || XINT (x3, 1) != 154)
    return -1;
  x4 = XVECEXP (x3, 0, 0);
  operands[0] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x3, 0, 2);
  operands[4] = x6;
  if (!const1248_operand (operands[4], E_SImode))
    return -1;
  x7 = XVECEXP (x3, 0, 3);
  operands[6] = x7;
  x8 = XEXP (x1, 1);
  x9 = XVECEXP (x8, 0, 1);
  operands[3] = x9;
  x10 = XVECEXP (x8, 0, 0);
  if (!rtx_equal_p (x10, operands[6]))
    return -1;
  switch (GET_MODE (operands[5]))
    {
    case E_V16SImode:
      if (!vsib_mem_operator (operands[5], E_V16SImode)
          || GET_MODE (x8) != E_V16SImode)
        return -1;
      switch (GET_MODE (x3))
        {
        case E_SImode:
          switch (pattern1700 (
E_SImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9843; /* *avx512f_scattersiv16si */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9867; /* *avx512f_scatterdiv16si */

            default:
              return -1;
            }

        case E_DImode:
          switch (pattern1700 (
E_DImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9855; /* *avx512f_scattersiv16si */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9879; /* *avx512f_scatterdiv16si */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case E_V16SFmode:
      if (!vsib_mem_operator (operands[5], E_V16SFmode)
          || GET_MODE (x8) != E_V16SFmode)
        return -1;
      switch (GET_MODE (x3))
        {
        case E_SImode:
          switch (pattern1701 (
E_SImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9844; /* *avx512f_scattersiv16sf */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9868; /* *avx512f_scatterdiv16sf */

            default:
              return -1;
            }

        case E_DImode:
          switch (pattern1701 (
E_DImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9856; /* *avx512f_scattersiv16sf */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1009 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
                return -1;
              *pnum_clobbers = 1;
              return 9880; /* *avx512f_scatterdiv16sf */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case E_V8DImode:
      switch (pattern1602 (x1, 
E_V8DImode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9845; /* *avx512f_scattersiv8di */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9869; /* *avx512f_scatterdiv8di */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9857; /* *avx512f_scattersiv8di */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9881; /* *avx512f_scatterdiv8di */

        default:
          return -1;
        }

    case E_V8DFmode:
      switch (pattern1602 (x1, 
E_V8DFmode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9846; /* *avx512f_scattersiv8df */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9870; /* *avx512f_scatterdiv8df */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9858; /* *avx512f_scattersiv8df */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1010 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512))))
            return -1;
          *pnum_clobbers = 1;
          return 9882; /* *avx512f_scatterdiv8df */

        default:
          return -1;
        }

    case E_V8SImode:
      switch (pattern1603 (x1, 
E_V8SImode))
        {
        case 0:
          switch (pattern1737 (
E_SImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9847; /* *avx512f_scattersiv8si */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9871; /* *avx512f_scatterdiv8si */

            default:
              return -1;
            }

        case 1:
          switch (pattern1737 (
E_DImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9859; /* *avx512f_scattersiv8si */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9883; /* *avx512f_scatterdiv8si */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case E_V8SFmode:
      switch (pattern1603 (x1, 
E_V8SFmode))
        {
        case 0:
          switch (pattern1738 (
E_SImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9848; /* *avx512f_scattersiv8sf */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9872; /* *avx512f_scatterdiv8sf */

            default:
              return -1;
            }

        case 1:
          switch (pattern1738 (
E_DImode))
            {
            case 0:
              if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9860; /* *avx512f_scattersiv8sf */

            case 1:
              if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1011 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
                return -1;
              *pnum_clobbers = 1;
              return 9884; /* *avx512f_scatterdiv8sf */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case E_V4DImode:
      switch (pattern1605 (x1, 
E_V4DImode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9849; /* *avx512f_scattersiv4di */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9873; /* *avx512f_scatterdiv4di */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9861; /* *avx512f_scattersiv4di */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9885; /* *avx512f_scatterdiv4di */

        default:
          return -1;
        }

    case E_V4DFmode:
      switch (pattern1605 (x1, 
E_V4DFmode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9850; /* *avx512f_scattersiv4df */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9874; /* *avx512f_scatterdiv4df */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9862; /* *avx512f_scattersiv4df */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1012 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9886; /* *avx512f_scatterdiv4df */

        default:
          return -1;
        }

    case E_V4SImode:
      switch (pattern1607 (x1, 
E_V4SImode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9851; /* *avx512f_scattersiv4si */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9875; /* *avx512f_scatterdiv4si */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9863; /* *avx512f_scattersiv4si */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9887; /* *avx512f_scatterdiv4si */

        default:
          return -1;
        }

    case E_V4SFmode:
      switch (pattern1607 (x1, 
E_V4SFmode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9852; /* *avx512f_scattersiv4sf */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9876; /* *avx512f_scatterdiv4sf */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9864; /* *avx512f_scattersiv4sf */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1013 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9888; /* *avx512f_scatterdiv4sf */

        default:
          return -1;
        }

    case E_V2DImode:
      switch (pattern1607 (x1, 
E_V2DImode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9853; /* *avx512f_scattersiv2di */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9877; /* *avx512f_scatterdiv2di */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9865; /* *avx512f_scattersiv2di */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9889; /* *avx512f_scatterdiv2di */

        default:
          return -1;
        }

    case E_V2DFmode:
      switch (pattern1607 (x1, 
E_V2DFmode))
        {
        case 0:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9854; /* *avx512f_scattersiv2df */

        case 1:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9878; /* *avx512f_scatterdiv2df */

        case 2:
          if (!(
#line 29612 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && ((((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9866; /* *avx512f_scattersiv2df */

        case 3:
          if (!(
#line 29652 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && (((
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1014 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL))))
            return -1;
          *pnum_clobbers = 1;
          return 9890; /* *avx512f_scatterdiv2df */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_250 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  switch (GET_CODE (x4))
    {
    case CONST_VECTOR:
      switch (pattern494 (x3))
        {
        case 0:
          if (!
#line 21611 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512VBMI
   && ix86_pre_reload_split ()))
            return -1;
          return 8488; /* *vec_concatv16qi_permt2 */

        case 1:
          if (!
#line 21636 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW
   && ix86_pre_reload_split ()))
            return -1;
          return 8489; /* *vec_concatv8hi_permt2 */

        default:
          return -1;
        }

    case REG:
    case SUBREG:
      operands[1] = x4;
      x5 = XVECEXP (x3, 0, 1);
      operands[2] = x5;
      x6 = XVECEXP (x3, 0, 2);
      operands[3] = x6;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SImode:
          if (pattern170 (x3, 
E_V16SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28143 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9385; /* avx512f_vpermt2varv16si3 */

        case E_V16SFmode:
          if (pattern1027 (x3, 
E_V16SFmode, 
E_V16SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28143 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9387; /* avx512f_vpermt2varv16sf3 */

        case E_V8DImode:
          if (pattern170 (x3, 
E_V8DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28144 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9389; /* avx512f_vpermt2varv8di3 */

        case E_V8DFmode:
          if (pattern1027 (x3, 
E_V8DFmode, 
E_V8DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28144 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9391; /* avx512f_vpermt2varv8df3 */

        case E_V8SImode:
          if (pattern170 (x3, 
E_V8SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28145 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9393; /* avx512vl_vpermt2varv8si3 */

        case E_V8SFmode:
          if (pattern1027 (x3, 
E_V8SFmode, 
E_V8SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28145 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9395; /* avx512vl_vpermt2varv8sf3 */

        case E_V4DImode:
          if (pattern170 (x3, 
E_V4DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28146 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9397; /* avx512vl_vpermt2varv4di3 */

        case E_V4DFmode:
          if (pattern1027 (x3, 
E_V4DFmode, 
E_V4DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28146 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9399; /* avx512vl_vpermt2varv4df3 */

        case E_V4SImode:
          if (pattern170 (x3, 
E_V4SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28147 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9401; /* avx512vl_vpermt2varv4si3 */

        case E_V4SFmode:
          if (pattern1027 (x3, 
E_V4SFmode, 
E_V4SImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28147 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9403; /* avx512vl_vpermt2varv4sf3 */

        case E_V2DImode:
          if (pattern170 (x3, 
E_V2DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28148 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9405; /* avx512vl_vpermt2varv2di3 */

        case E_V2DFmode:
          if (pattern1027 (x3, 
E_V2DFmode, 
E_V2DImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28148 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9407; /* avx512vl_vpermt2varv2df3 */

        case E_V32HImode:
          if (pattern170 (x3, 
E_V32HImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28149 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
            return -1;
          return 9409; /* avx512bw_vpermt2varv32hi3 */

        case E_V16HImode:
          if (pattern170 (x3, 
E_V16HImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28150 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_AVX512VL)))
            return -1;
          return 9411; /* avx512vl_vpermt2varv16hi3 */

        case E_V8HImode:
          if (pattern170 (x3, 
E_V8HImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_AVX512VL)))
            return -1;
          return 9413; /* avx512vl_vpermt2varv8hi3 */

        case E_V64QImode:
          if (pattern170 (x3, 
E_V64QImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28152 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VBMI && TARGET_EVEX512)))
            return -1;
          return 9415; /* avx512bw_vpermt2varv64qi3 */

        case E_V32QImode:
          if (pattern170 (x3, 
E_V32QImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28153 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VBMI && TARGET_AVX512VL)))
            return -1;
          return 9417; /* avx512vl_vpermt2varv32qi3 */

        case E_V16QImode:
          if (pattern170 (x3, 
E_V16QImode) != 0
              || !(
#line 28236 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 28154 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VBMI && TARGET_AVX512VL)))
            return -1;
          return 9419; /* avx512vl_vpermt2varv16qi3 */

        case E_V32HFmode:
          if (pattern1027 (x3, 
E_V32HFmode, 
E_V32HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 557 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9421; /* avx512bw_vpermt2varv32hf3 */

        case E_V16HFmode:
          if (pattern1027 (x3, 
E_V16HFmode, 
E_V16HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 557 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9423; /* avx512vl_vpermt2varv16hf3 */

        case E_V8HFmode:
          if (pattern1027 (x3, 
E_V8HFmode, 
E_V8HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 557 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9425; /* avx512fp16_vpermt2varv8hf3 */

        case E_V32BFmode:
          if (pattern1027 (x3, 
E_V32BFmode, 
E_V32HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 558 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 9427; /* avx512bw_vpermt2varv32bf3 */

        case E_V16BFmode:
          if (pattern1027 (x3, 
E_V16BFmode, 
E_V16HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 558 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9429; /* avx512vl_vpermt2varv16bf3 */

        case E_V8BFmode:
          if (pattern1027 (x3, 
E_V8BFmode, 
E_V8HImode) != 0
              || !(
#line 28251 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 558 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 9431; /* avx512vl_vpermt2varv8bf3 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_254 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x3, 0, 2);
  operands[3] = x6;
  if (!const_0_to_15_operand (operands[3], E_SImode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V16SFmode:
      if (pattern150 (x3, 
E_V16SFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 9963; /* avx512dq_rangepv16sf */

    case E_V8SFmode:
      if (pattern150 (x3, 
E_V8SFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 9967; /* avx512dq_rangepv8sf */

    case E_V4SFmode:
      if (pattern150 (x3, 
E_V4SFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 9971; /* avx512dq_rangepv4sf */

    case E_V8DFmode:
      if (pattern150 (x3, 
E_V8DFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 9973; /* avx512dq_rangepv8df */

    case E_V4DFmode:
      if (pattern150 (x3, 
E_V4DFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 9977; /* avx512dq_rangepv4df */

    case E_V2DFmode:
      if (pattern150 (x3, 
E_V2DFmode) != 0
          || !(
#line 29825 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512DQ && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 9981; /* avx512dq_rangepv2df */

    default:
      return -1;
    }
}

 int
recog_255 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x3, 0, 2);
  operands[3] = x6;
  if (!const_0_to_255_operand (operands[3], E_SImode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V16SImode:
      if (pattern61 (x3, 
E_V16SImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 7083; /* *avx512f_alignv16si */

    case E_V8SImode:
      if (pattern61 (x3, 
E_V8SImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 7085; /* *avx512vl_alignv8si */

    case E_V4SImode:
      if (pattern61 (x3, 
E_V4SImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 7087; /* *avx512vl_alignv4si */

    case E_V8DImode:
      if (pattern61 (x3, 
E_V8DImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
        return -1;
      return 7089; /* *avx512f_alignv8di */

    case E_V4DImode:
      if (pattern61 (x3, 
E_V4DImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 7091; /* *avx512vl_alignv4di */

    case E_V2DImode:
      if (pattern61 (x3, 
E_V2DImode) != 0
          || !(
#line 14069 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 7093; /* *avx512vl_alignv2di */

    default:
      return -1;
    }
}

 int
recog_260 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XVECEXP (x3, 0, 0);
  operands[1] = x4;
  x5 = XVECEXP (x3, 0, 1);
  operands[2] = x5;
  x6 = XVECEXP (x3, 0, 2);
  operands[3] = x6;
  if (!const_int_operand (operands[3], E_SImode))
    return -1;
  switch (GET_MODE (operands[0]))
    {
    case E_V16QImode:
      if (pattern61 (x3, 
E_V16QImode) != 0
          || !
#line 27081 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
        return -1;
      return 9077; /* xop_pcom_tfv16qi3 */

    case E_V8HImode:
      if (pattern61 (x3, 
E_V8HImode) != 0
          || !
#line 27081 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
        return -1;
      return 9078; /* xop_pcom_tfv8hi3 */

    case E_V4SImode:
      if (pattern61 (x3, 
E_V4SImode) != 0
          || !
#line 27081 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
        return -1;
      return 9079; /* xop_pcom_tfv4si3 */

    case E_V2DImode:
      if (pattern61 (x3, 
E_V2DImode) != 0
          || !
#line 27081 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
        return -1;
      return 9080; /* xop_pcom_tfv2di3 */

    default:
      return -1;
    }
}

 int
recog_264 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  switch (XINT (x3, 1))
    {
    case 164:
      x4 = XVECEXP (x3, 0, 0);
      operands[1] = x4;
      x5 = XVECEXP (x3, 0, 1);
      operands[2] = x5;
      x6 = XVECEXP (x3, 0, 2);
      operands[3] = x6;
      x7 = XVECEXP (x3, 0, 3);
      operands[4] = x7;
      if (!const_0_to_255_operand (operands[4], E_SImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SImode:
          if (pattern1136 (x3, 
E_V16SImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return 5463; /* avx512f_vternlogv16si */
          if (!(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16SImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5481; /* *avx512f_vternlogv16si_all */

        case E_V8SImode:
          if (pattern1136 (x3, 
E_V8SImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 5465; /* avx512vl_vternlogv8si */
          if (!(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8SImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5482; /* *avx512vl_vternlogv8si_all */

        case E_V4SImode:
          if (pattern1136 (x3, 
E_V4SImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 5467; /* avx512vl_vternlogv4si */
          if (!
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V4SImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5483; /* *avx512vl_vternlogv4si_all */

        case E_V8DImode:
          if (pattern1136 (x3, 
E_V8DImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return 5469; /* avx512f_vternlogv8di */
          if (!(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8DImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5484; /* *avx512f_vternlogv8di_all */

        case E_V4DImode:
          if (pattern1136 (x3, 
E_V4DImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 5471; /* avx512vl_vternlogv4di */
          if (!(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V4DImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5485; /* *avx512vl_vternlogv4di_all */

        case E_V2DImode:
          if (pattern1136 (x3, 
E_V2DImode) != 0)
            return -1;
          if ((
#line 13664 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return 5473; /* avx512vl_vternlogv2di */
          if (!
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V2DImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5486; /* *avx512vl_vternlogv2di_all */

        case E_V64QImode:
          if (pattern1136 (x3, 
E_V64QImode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V64QImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5475; /* *avx512bw_vternlogv64qi_all */

        case E_V32QImode:
          if (pattern1136 (x3, 
E_V32QImode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V32QImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5476; /* *avx512vl_vternlogv32qi_all */

        case E_V16QImode:
          if (pattern1136 (x3, 
E_V16QImode) != 0
              || !
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16QImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5477; /* *avx512vl_vternlogv16qi_all */

        case E_V32HImode:
          if (pattern1136 (x3, 
E_V32HImode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V32HImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5478; /* *avx512bw_vternlogv32hi_all */

        case E_V16HImode:
          if (pattern1136 (x3, 
E_V16HImode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16HImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5479; /* *avx512vl_vternlogv16hi_all */

        case E_V8HImode:
          if (pattern1136 (x3, 
E_V8HImode) != 0
              || !
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8HImode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5480; /* *avx512vl_vternlogv8hi_all */

        case E_V32HFmode:
          if (pattern1136 (x3, 
E_V32HFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V32HFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5487; /* *avx512bw_vternlogv32hf_all */

        case E_V16HFmode:
          if (pattern1136 (x3, 
E_V16HFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16HFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5488; /* *avx512vl_vternlogv16hf_all */

        case E_V8HFmode:
          if (pattern1136 (x3, 
E_V8HFmode) != 0
              || !
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8HFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5489; /* *avx512fp16_vternlogv8hf_all */

        case E_V32BFmode:
          if (pattern1136 (x3, 
E_V32BFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V32BFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5490; /* *avx512bw_vternlogv32bf_all */

        case E_V16BFmode:
          if (pattern1136 (x3, 
E_V16BFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16BFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5491; /* *avx512vl_vternlogv16bf_all */

        case E_V8BFmode:
          if (pattern1136 (x3, 
E_V8BFmode) != 0
              || !
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8BFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5492; /* *avx512vl_vternlogv8bf_all */

        case E_V16SFmode:
          if (pattern1136 (x3, 
E_V16SFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V16SFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5493; /* *avx512f_vternlogv16sf_all */

        case E_V8SFmode:
          if (pattern1136 (x3, 
E_V8SFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8SFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5494; /* *avx512vl_vternlogv8sf_all */

        case E_V4SFmode:
          if (pattern1136 (x3, 
E_V4SFmode) != 0
              || !
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V4SFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)))
            return -1;
          return 5495; /* *avx512vl_vternlogv4sf_all */

        case E_V8DFmode:
          if (pattern1136 (x3, 
E_V8DFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V8DFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
            return -1;
          return 5496; /* *avx512f_vternlogv8df_all */

        case E_V4DFmode:
          if (pattern1136 (x3, 
E_V4DFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V4DFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 5497; /* *avx512vl_vternlogv4df_all */

        case E_V2DFmode:
          if (pattern1136 (x3, 
E_V2DFmode) != 0
              || !(
#line 13678 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
/* Disallow embeded broadcast for vector HFmode since
   it's not real AVX512FP16 instruction.  */
  && (GET_MODE_SIZE (GET_MODE_INNER (V2DFmode)) >= 4
     || GET_CODE (operands[3]) != VEC_DUPLICATE)) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
            return -1;
          return 5498; /* *avx512vl_vternlogv2df_all */

        default:
          return -1;
        }

    case 163:
      x4 = XVECEXP (x3, 0, 0);
      operands[1] = x4;
      x5 = XVECEXP (x3, 0, 1);
      operands[2] = x5;
      x6 = XVECEXP (x3, 0, 2);
      operands[3] = x6;
      x7 = XVECEXP (x3, 0, 3);
      operands[4] = x7;
      if (!const_0_to_255_operand (operands[4], E_SImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V16SFmode:
          if (pattern1137 (x3, 
E_V16SImode, 
E_V16SFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 7103; /* avx512f_fixupimmv16sf */

        case E_V8SFmode:
          if (pattern1137 (x3, 
E_V8SImode, 
E_V8SFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 7107; /* avx512vl_fixupimmv8sf */

        case E_V4SFmode:
          if (pattern1137 (x3, 
E_V4SImode, 
E_V4SFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 520 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 7111; /* avx512vl_fixupimmv4sf */

        case E_V8DFmode:
          if (pattern1137 (x3, 
E_V8DImode, 
E_V8DFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
            return -1;
          return 7113; /* avx512f_fixupimmv8df */

        case E_V4DFmode:
          if (pattern1137 (x3, 
E_V4DImode, 
E_V4DFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 7117; /* avx512vl_fixupimmv4df */

        case E_V2DFmode:
          if (pattern1137 (x3, 
E_V2DImode, 
E_V2DFmode) != 0
              || !(
#line 14159 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1) && 
#line 521 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
            return -1;
          return 7121; /* avx512vl_fixupimmv2df */

        default:
          return -1;
        }

    case 124:
      if (GET_MODE (x3) != E_V2DImode
          || !register_operand (operands[0], E_V2DImode))
        return -1;
      x4 = XVECEXP (x3, 0, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_V2DImode))
        return -1;
      x5 = XVECEXP (x3, 0, 1);
      operands[2] = x5;
      if (!register_operand (operands[2], E_V2DImode))
        return -1;
      x6 = XVECEXP (x3, 0, 2);
      operands[3] = x6;
      if (!const_0_to_255_operand (operands[3], E_VOIDmode))
        return -1;
      x7 = XVECEXP (x3, 0, 3);
      operands[4] = x7;
      if (!const_0_to_255_operand (operands[4], E_VOIDmode)
          || !
#line 23473 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4A))
        return -1;
      return 8681; /* sse4a_insertqi */

    case 145:
      x4 = XVECEXP (x3, 0, 0);
      operands[1] = x4;
      x5 = XVECEXP (x3, 0, 1);
      operands[2] = x5;
      x6 = XVECEXP (x3, 0, 2);
      operands[3] = x6;
      x7 = XVECEXP (x3, 0, 3);
      operands[4] = x7;
      if (!const_0_to_3_operand (operands[4], E_SImode))
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_V8SFmode:
          if (pattern1138 (x3, 
E_V8SImode, 
E_V8SFmode) != 0
              || !(
#line 27098 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 9081; /* xop_vpermil2v8sf3 */

        case E_V4SFmode:
          if (pattern1138 (x3, 
E_V4SImode, 
E_V4SFmode) != 0
              || !
#line 27098 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9082; /* xop_vpermil2v4sf3 */

        case E_V4DFmode:
          if (pattern1138 (x3, 
E_V4DImode, 
E_V4DFmode) != 0
              || !(
#line 27098 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return -1;
          return 9083; /* xop_vpermil2v4df3 */

        case E_V2DFmode:
          if (pattern1138 (x3, 
E_V2DImode, 
E_V2DFmode) != 0
              || !(
#line 27098 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
            return -1;
          return 9084; /* xop_vpermil2v2df3 */

        default:
          return -1;
        }

    case 153:
      if (pnum_clobbers == NULL)
        return -1;
      x5 = XVECEXP (x3, 0, 1);
      if (GET_CODE (x5) != MEM)
        return -1;
      x8 = XEXP (x5, 0);
      if (GET_CODE (x8) != UNSPEC
          || XVECLEN (x8, 0) != 3
          || XINT (x8, 1) != 154)
        return -1;
      x6 = XVECEXP (x3, 0, 2);
      if (GET_CODE (x6) != MEM
          || GET_MODE (x6) != E_BLKmode)
        return -1;
      x9 = XEXP (x6, 0);
      if (GET_CODE (x9) != SCRATCH)
        return -1;
      x10 = XVECEXP (x8, 0, 2);
      if (!const1248_operand (x10, E_SImode))
        return -1;
      x4 = XVECEXP (x3, 0, 0);
      switch (GET_CODE (x4))
        {
        case REG:
        case SUBREG:
          operands[2] = x4;
          operands[7] = x5;
          x11 = XVECEXP (x8, 0, 0);
          operands[3] = x11;
          x12 = XVECEXP (x8, 0, 1);
          operands[4] = x12;
          operands[6] = x10;
          x7 = XVECEXP (x3, 0, 3);
          operands[5] = x7;
          switch (GET_MODE (operands[0]))
            {
            case E_V2DImode:
              switch (pattern1740 (x3, 
E_V2DImode, 
E_DImode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9675; /* *avx2_gathersiv2di */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9707; /* *avx2_gatherdiv2di */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9683; /* *avx2_gathersiv2di */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9715; /* *avx2_gatherdiv2di */

                default:
                  return -1;
                }

            case E_V2DFmode:
              switch (pattern1740 (x3, 
E_V2DFmode, 
E_DFmode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9676; /* *avx2_gathersiv2df */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9708; /* *avx2_gatherdiv2df */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9684; /* *avx2_gathersiv2df */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9716; /* *avx2_gatherdiv2df */

                default:
                  return -1;
                }

            case E_V4DImode:
              switch (pattern1742 (x3, 
E_V4DImode, 
E_DImode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9677; /* *avx2_gathersiv4di */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9709; /* *avx2_gatherdiv4di */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9685; /* *avx2_gathersiv4di */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9717; /* *avx2_gatherdiv4di */

                default:
                  return -1;
                }

            case E_V4DFmode:
              switch (pattern1742 (x3, 
E_V4DFmode, 
E_DFmode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9678; /* *avx2_gathersiv4df */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9710; /* *avx2_gatherdiv4df */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9686; /* *avx2_gathersiv4df */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9718; /* *avx2_gatherdiv4df */

                default:
                  return -1;
                }

            case E_V4SImode:
              switch (pattern1740 (x3, 
E_V4SImode, 
E_SImode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9679; /* *avx2_gathersiv4si */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9711; /* *avx2_gatherdiv4si */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9687; /* *avx2_gathersiv4si */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9719; /* *avx2_gatherdiv4si */

                default:
                  return -1;
                }

            case E_V4SFmode:
              switch (pattern1740 (x3, 
E_V4SFmode, 
E_SFmode))
                {
                case 0:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9680; /* *avx2_gathersiv4sf */

                case 1:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9712; /* *avx2_gatherdiv4sf */

                case 2:
                  if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9688; /* *avx2_gathersiv4sf */

                case 3:
                  if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9720; /* *avx2_gatherdiv4sf */

                default:
                  return -1;
                }

            case E_V8SImode:
              if (!register_operand (operands[0], E_V8SImode)
                  || GET_MODE (x3) != E_V8SImode
                  || !vsib_mem_operator (operands[7], E_SImode))
                return -1;
              switch (GET_MODE (operands[2]))
                {
                case E_V8SImode:
                  if (!register_operand (operands[2], E_V8SImode)
                      || !register_operand (operands[4], E_V8SImode))
                    return -1;
                  switch (pattern1813 (x8, 
E_V8SImode))
                    {
                    case 0:
                      if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9681; /* *avx2_gathersiv8si */

                    case 1:
                      if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9689; /* *avx2_gathersiv8si */

                    default:
                      return -1;
                    }

                case E_V4SImode:
                  switch (pattern1814 (x8, 
E_V4SImode, 
E_V4DImode))
                    {
                    case 0:
                      if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9713; /* *avx2_gatherdiv8si */

                    case 1:
                      if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9721; /* *avx2_gatherdiv8si */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            case E_V8SFmode:
              if (!register_operand (operands[0], E_V8SFmode)
                  || GET_MODE (x3) != E_V8SFmode
                  || !vsib_mem_operator (operands[7], E_SFmode))
                return -1;
              switch (GET_MODE (operands[2]))
                {
                case E_V8SFmode:
                  switch (pattern1814 (x8, 
E_V8SFmode, 
E_V8SImode))
                    {
                    case 0:
                      if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9682; /* *avx2_gathersiv8sf */

                    case 1:
                      if (!(
#line 29305 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9690; /* *avx2_gathersiv8sf */

                    default:
                      return -1;
                    }

                case E_V4SFmode:
                  switch (pattern1814 (x8, 
E_V4SFmode, 
E_V4DImode))
                    {
                    case 0:
                      if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9714; /* *avx2_gatherdiv8sf */

                    case 1:
                      if (!(
#line 29368 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9722; /* *avx2_gatherdiv8sf */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            default:
              return -1;
            }

        case PC:
          operands[6] = x5;
          x11 = XVECEXP (x8, 0, 0);
          operands[2] = x11;
          x12 = XVECEXP (x8, 0, 1);
          operands[3] = x12;
          operands[5] = x10;
          x7 = XVECEXP (x3, 0, 3);
          operands[4] = x7;
          switch (GET_MODE (operands[0]))
            {
            case E_V2DImode:
              switch (pattern1703 (x3, 
E_V2DImode, 
E_DImode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9691; /* *avx2_gathersiv2di_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9723; /* *avx2_gatherdiv2di_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9699; /* *avx2_gathersiv2di_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9731; /* *avx2_gatherdiv2di_2 */

                default:
                  return -1;
                }

            case E_V2DFmode:
              switch (pattern1703 (x3, 
E_V2DFmode, 
E_DFmode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9692; /* *avx2_gathersiv2df_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9724; /* *avx2_gatherdiv2df_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9700; /* *avx2_gathersiv2df_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9732; /* *avx2_gatherdiv2df_2 */

                default:
                  return -1;
                }

            case E_V4DImode:
              switch (pattern1705 (x3, 
E_V4DImode, 
E_DImode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9693; /* *avx2_gathersiv4di_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9725; /* *avx2_gatherdiv4di_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9701; /* *avx2_gathersiv4di_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9733; /* *avx2_gatherdiv4di_2 */

                default:
                  return -1;
                }

            case E_V4DFmode:
              switch (pattern1705 (x3, 
E_V4DFmode, 
E_DFmode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9694; /* *avx2_gathersiv4df_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9726; /* *avx2_gatherdiv4df_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9702; /* *avx2_gathersiv4df_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9734; /* *avx2_gatherdiv4df_2 */

                default:
                  return -1;
                }

            case E_V4SImode:
              switch (pattern1703 (x3, 
E_V4SImode, 
E_SImode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9695; /* *avx2_gathersiv4si_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9727; /* *avx2_gatherdiv4si_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9703; /* *avx2_gathersiv4si_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9735; /* *avx2_gatherdiv4si_2 */

                default:
                  return -1;
                }

            case E_V4SFmode:
              switch (pattern1703 (x3, 
E_V4SFmode, 
E_SFmode))
                {
                case 0:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9696; /* *avx2_gathersiv4sf_2 */

                case 1:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9728; /* *avx2_gatherdiv4sf_2 */

                case 2:
                  if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9704; /* *avx2_gathersiv4sf_2 */

                case 3:
                  if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                    return -1;
                  *pnum_clobbers = 1;
                  return 9736; /* *avx2_gatherdiv4sf_2 */

                default:
                  return -1;
                }

            case E_V8SImode:
              switch (pattern1706 (x3, 
E_SImode, 
E_V8SImode))
                {
                case 0:
                  switch (pattern1786 (
E_SImode))
                    {
                    case 0:
                      if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9697; /* *avx2_gathersiv8si_2 */

                    case 1:
                      if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9729; /* *avx2_gatherdiv8si_2 */

                    default:
                      return -1;
                    }

                case 1:
                  switch (pattern1786 (
E_DImode))
                    {
                    case 0:
                      if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9705; /* *avx2_gathersiv8si_2 */

                    case 1:
                      if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9737; /* *avx2_gatherdiv8si_2 */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            case E_V8SFmode:
              switch (pattern1706 (x3, 
E_SFmode, 
E_V8SFmode))
                {
                case 0:
                  switch (pattern1787 (
E_SImode))
                    {
                    case 0:
                      if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9698; /* *avx2_gathersiv8sf_2 */

                    case 1:
                      if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9730; /* *avx2_gatherdiv8sf_2 */

                    default:
                      return -1;
                    }

                case 1:
                  switch (pattern1787 (
E_DImode))
                    {
                    case 0:
                      if (!(
#line 29326 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9706; /* *avx2_gathersiv8sf_2 */

                    case 1:
                      if (!(
#line 29389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9738; /* *avx2_gatherdiv8sf_2 */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    case 226:
      if (GET_MODE (x3) != E_V4SImode
          || pattern168 (x3) != 0)
        return -1;
      x7 = XVECEXP (x3, 0, 3);
      operands[4] = x7;
      if (!const_0_to_255_operand (operands[4], E_SImode)
          || !
#line 30078 "../../src/gcc/config/i386/sse.md"
(TARGET_SM3))
        return -1;
      return 10096; /* vsm3rnds2 */

    default:
      return -1;
    }
}

 int
recog_308 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
    case MEM:
    case VEC_DUPLICATE:
      operands[1] = x3;
      x4 = XEXP (x2, 1);
      operands[2] = x4;
      switch (GET_CODE (operands[2]))
        {
        case REG:
        case SUBREG:
        case MEM:
        case VEC_DUPLICATE:
          switch (GET_MODE (operands[0]))
            {
            case E_V16BFmode:
              if (pattern25 (x2, 
E_V16BFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 16 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 426 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 3715; /* *xorv16bf3 */

            case E_V8BFmode:
              if (pattern25 (x2, 
E_V8BFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 16 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 426 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 3718; /* *xorv8bf3 */

            case E_V16HFmode:
              if (pattern25 (x2, 
E_V16HFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 16 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 427 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 3721; /* *xorv16hf3 */

            case E_V8HFmode:
              if (pattern25 (x2, 
E_V8HFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 16 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 427 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 3724; /* *xorv8hf3 */

            case E_V8SFmode:
              if (pattern25 (x2, 
E_V8SFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 32 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 428 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 3729; /* *xorv8sf3 */

            case E_V4SFmode:
              if (pattern25 (x2, 
E_V4SFmode) != 0
                  || !
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 32 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 3735; /* *xorv4sf3 */

            case E_V4DFmode:
              if (pattern25 (x2, 
E_V4DFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 64 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 429 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 3741; /* *xorv4df3 */

            case E_V2DFmode:
              if (pattern25 (x2, 
E_V2DFmode) != 0
                  || !(
#line 5362 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && (!false || 64 != 16)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 429 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 3747; /* *xorv2df3 */

            case E_V32BFmode:
              if (pattern5 (x2, 
E_V32BFmode) != 0
                  || !(
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!false || 16 != 16)) && 
#line 491 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3751; /* *xorv32bf3 */

            case E_V32HFmode:
              if (pattern5 (x2, 
E_V32HFmode) != 0
                  || !(
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!false || 16 != 16)) && 
#line 492 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3754; /* *xorv32hf3 */

            case E_V16SFmode:
              if (pattern5 (x2, 
E_V16SFmode) != 0
                  || !(
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!false || 32 != 16)) && 
#line 493 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3759; /* *xorv16sf3 */

            case E_V8DFmode:
              if (pattern5 (x2, 
E_V8DFmode) != 0
                  || !(
#line 5432 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[1]) && MEM_P (operands[2]))
   && (!false || 64 != 16)) && 
#line 494 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3765; /* *xorv8df3 */

            case E_V16SImode:
              if (pattern180 (x2, 
E_V16SImode) != 0
                  || !(
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V16SImode, operands)) && 
#line 807 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 8012; /* *xorv16si3 */

            case E_V8SImode:
              if (pattern180 (x2, 
E_V8SImode) != 0
                  || !(
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V8SImode, operands)) && 
#line 807 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 8018; /* *xorv8si3 */

            case E_V4SImode:
              if (pattern180 (x2, 
E_V4SImode) != 0
                  || !
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V4SImode, operands)))
                return -1;
              return 8024; /* *xorv4si3 */

            case E_V8DImode:
              if (pattern180 (x2, 
E_V8DImode) != 0
                  || !(
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V8DImode, operands)) && 
#line 808 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 8030; /* *xorv8di3 */

            case E_V4DImode:
              if (pattern180 (x2, 
E_V4DImode) != 0
                  || !(
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V4DImode, operands)) && 
#line 808 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 8036; /* *xorv4di3 */

            case E_V2DImode:
              if (pattern180 (x2, 
E_V2DImode) != 0
                  || !
#line 18744 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1
   && ix86_binary_operator_ok (XOR, V2DImode, operands)))
                return -1;
              return 8042; /* *xorv2di3 */

            case E_V64QImode:
              if (pattern25 (x2, 
E_V64QImode) != 0
                  || !(
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 811 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 8046; /* *xorv64qi3 */

            case E_V32QImode:
              if (pattern25 (x2, 
E_V32QImode) != 0
                  || !(
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 811 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 8049; /* *xorv32qi3 */

            case E_V16QImode:
              if (pattern25 (x2, 
E_V16QImode) != 0
                  || !
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 8052; /* *xorv16qi3 */

            case E_V32HImode:
              if (pattern25 (x2, 
E_V32HImode) != 0
                  || !(
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 812 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 8055; /* *xorv32hi3 */

            case E_V16HImode:
              if (pattern25 (x2, 
E_V16HImode) != 0
                  || !(
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 812 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 8058; /* *xorv16hi3 */

            case E_V8HImode:
              if (pattern25 (x2, 
E_V8HImode) != 0
                  || !
#line 18846 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 8061; /* *xorv8hi3 */

            case E_V1TImode:
              if (pattern669 (x2, 
E_V1TImode) != 0
                  || !
#line 18943 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2))
                return -1;
              return 8064; /* xorv1ti3 */

            default:
              return -1;
            }

        case CONST_VECTOR:
          switch (GET_MODE (operands[0]))
            {
            case E_V16SImode:
              if (pattern935 (x2, 
E_V16SImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (64 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || SImode == SImode
       || SImode == DImode)) && 
#line 568 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 7960; /* *one_cmplv16si2 */

            case E_V8DImode:
              if (pattern935 (x2, 
E_V8DImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (64 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || DImode == SImode
       || DImode == DImode)) && 
#line 569 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 7962; /* *one_cmplv8di2 */

            case E_V64QImode:
              if (pattern935 (x2, 
E_V64QImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (64 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || QImode == SImode
       || QImode == DImode)) && 
#line 570 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
                return -1;
              return 7964; /* *one_cmplv64qi2 */

            case E_V32QImode:
              if (pattern935 (x2, 
E_V32QImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (32 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || QImode == SImode
       || QImode == DImode)) && 
#line 570 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 7965; /* *one_cmplv32qi2 */

            case E_V16QImode:
              if (pattern935 (x2, 
E_V16QImode) != 0
                  || !
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (16 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || QImode == SImode
       || QImode == DImode)))
                return -1;
              return 7966; /* *one_cmplv16qi2 */

            case E_V32HImode:
              if (pattern935 (x2, 
E_V32HImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (64 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || HImode == SImode
       || HImode == DImode)) && 
#line 571 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
                return -1;
              return 7967; /* *one_cmplv32hi2 */

            case E_V16HImode:
              if (pattern935 (x2, 
E_V16HImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (32 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || HImode == SImode
       || HImode == DImode)) && 
#line 571 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 7968; /* *one_cmplv16hi2 */

            case E_V8HImode:
              if (pattern935 (x2, 
E_V8HImode) != 0
                  || !
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (16 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || HImode == SImode
       || HImode == DImode)))
                return -1;
              return 7969; /* *one_cmplv8hi2 */

            case E_V8SImode:
              if (pattern935 (x2, 
E_V8SImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (32 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || SImode == SImode
       || SImode == DImode)) && 
#line 572 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 7970; /* *one_cmplv8si2 */

            case E_V4SImode:
              if (pattern935 (x2, 
E_V4SImode) != 0
                  || !
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (16 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || SImode == SImode
       || SImode == DImode)))
                return -1;
              return 7972; /* *one_cmplv4si2 */

            case E_V4DImode:
              if (pattern935 (x2, 
E_V4DImode) != 0
                  || !(
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (32 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || DImode == SImode
       || DImode == DImode)) && 
#line 573 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 7974; /* *one_cmplv4di2 */

            case E_V2DImode:
              if (pattern935 (x2, 
E_V2DImode) != 0
                  || !
#line 18371 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F
   && (16 == 64 || TARGET_AVX512VL || TARGET_EVEX512)
   && (!false
       || DImode == SImode
       || DImode == DImode)))
                return -1;
              return 7976; /* *one_cmplv2di2 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case AND:
      x5 = XEXP (x3, 0);
      switch (GET_CODE (x5))
        {
        case REG:
        case SUBREG:
        case MEM:
        case NOT:
          switch (pattern532 (x2))
            {
            case 0:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5525; /* *avx512bw_vpternlogv64qi_1 */

            case 1:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5552; /* *avx512vl_vpternlogv32qi_1 */

            case 2:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5579; /* *avx512vl_vpternlogv16qi_1 */

            case 3:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5606; /* *avx512bw_vpternlogv32hi_1 */

            case 4:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5633; /* *avx512vl_vpternlogv16hi_1 */

            case 5:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5660; /* *avx512vl_vpternlogv8hi_1 */

            case 6:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5687; /* *avx512f_vpternlogv16si_1 */

            case 7:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5714; /* *avx512vl_vpternlogv8si_1 */

            case 8:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5741; /* *avx512vl_vpternlogv4si_1 */

            case 9:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5768; /* *avx512f_vpternlogv8di_1 */

            case 10:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5795; /* *avx512vl_vpternlogv4di_1 */

            case 11:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5822; /* *avx512vl_vpternlogv2di_1 */

            case 12:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5528; /* *avx512bw_vpternlogv64qi_1 */

            case 13:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5555; /* *avx512vl_vpternlogv32qi_1 */

            case 14:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5582; /* *avx512vl_vpternlogv16qi_1 */

            case 15:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5609; /* *avx512bw_vpternlogv32hi_1 */

            case 16:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5636; /* *avx512vl_vpternlogv16hi_1 */

            case 17:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5663; /* *avx512vl_vpternlogv8hi_1 */

            case 18:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5690; /* *avx512f_vpternlogv16si_1 */

            case 19:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5717; /* *avx512vl_vpternlogv8si_1 */

            case 20:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5744; /* *avx512vl_vpternlogv4si_1 */

            case 21:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5771; /* *avx512f_vpternlogv8di_1 */

            case 22:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5798; /* *avx512vl_vpternlogv4di_1 */

            case 23:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5825; /* *avx512vl_vpternlogv2di_1 */

            case 24:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5531; /* *avx512bw_vpternlogv64qi_1 */

            case 25:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5558; /* *avx512vl_vpternlogv32qi_1 */

            case 26:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5585; /* *avx512vl_vpternlogv16qi_1 */

            case 27:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5612; /* *avx512bw_vpternlogv32hi_1 */

            case 28:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5639; /* *avx512vl_vpternlogv16hi_1 */

            case 29:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5666; /* *avx512vl_vpternlogv8hi_1 */

            case 30:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5693; /* *avx512f_vpternlogv16si_1 */

            case 31:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5720; /* *avx512vl_vpternlogv8si_1 */

            case 32:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5747; /* *avx512vl_vpternlogv4si_1 */

            case 33:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 5774; /* *avx512f_vpternlogv8di_1 */

            case 34:
              if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 5801; /* *avx512vl_vpternlogv4di_1 */

            case 35:
              if (!
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 5828; /* *avx512vl_vpternlogv2di_1 */

            case 36:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6821; /* *avx512bw_vpternlogv64qi_3 */

            case 37:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6830; /* *avx512vl_vpternlogv32qi_3 */

            case 38:
              if (!
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
                return -1;
              return 6839; /* *avx512vl_vpternlogv16qi_3 */

            case 39:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6848; /* *avx512bw_vpternlogv32hi_3 */

            case 40:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6857; /* *avx512vl_vpternlogv16hi_3 */

            case 41:
              if (!
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
                return -1;
              return 6866; /* *avx512vl_vpternlogv8hi_3 */

            case 42:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6875; /* *avx512f_vpternlogv16si_3 */

            case 43:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6884; /* *avx512vl_vpternlogv8si_3 */

            case 44:
              if (!
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
                return -1;
              return 6893; /* *avx512vl_vpternlogv4si_3 */

            case 45:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6902; /* *avx512f_vpternlogv8di_3 */

            case 46:
              if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6911; /* *avx512vl_vpternlogv4di_3 */

            case 47:
              if (!
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
                return -1;
              return 6920; /* *avx512vl_vpternlogv2di_3 */

            default:
              return -1;
            }

        case AND:
          switch (pattern534 (x2))
            {
            case 0:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6173; /* *avx512bw_vpternlogv64qi_2 */

            case 1:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6200; /* *avx512vl_vpternlogv32qi_2 */

            case 2:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6227; /* *avx512vl_vpternlogv16qi_2 */

            case 3:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6254; /* *avx512bw_vpternlogv32hi_2 */

            case 4:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6281; /* *avx512vl_vpternlogv16hi_2 */

            case 5:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6308; /* *avx512vl_vpternlogv8hi_2 */

            case 6:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6335; /* *avx512f_vpternlogv16si_2 */

            case 7:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6362; /* *avx512vl_vpternlogv8si_2 */

            case 8:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6389; /* *avx512vl_vpternlogv4si_2 */

            case 9:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6416; /* *avx512f_vpternlogv8di_2 */

            case 10:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6443; /* *avx512vl_vpternlogv4di_2 */

            case 11:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6470; /* *avx512vl_vpternlogv2di_2 */

            default:
              return -1;
            }

        case IOR:
          switch (pattern534 (x2))
            {
            case 0:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6176; /* *avx512bw_vpternlogv64qi_2 */

            case 1:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6203; /* *avx512vl_vpternlogv32qi_2 */

            case 2:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6230; /* *avx512vl_vpternlogv16qi_2 */

            case 3:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6257; /* *avx512bw_vpternlogv32hi_2 */

            case 4:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6284; /* *avx512vl_vpternlogv16hi_2 */

            case 5:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6311; /* *avx512vl_vpternlogv8hi_2 */

            case 6:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6338; /* *avx512f_vpternlogv16si_2 */

            case 7:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6365; /* *avx512vl_vpternlogv8si_2 */

            case 8:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6392; /* *avx512vl_vpternlogv4si_2 */

            case 9:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6419; /* *avx512f_vpternlogv8di_2 */

            case 10:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6446; /* *avx512vl_vpternlogv4di_2 */

            case 11:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6473; /* *avx512vl_vpternlogv2di_2 */

            default:
              return -1;
            }

        case XOR:
          switch (pattern534 (x2))
            {
            case 0:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6179; /* *avx512bw_vpternlogv64qi_2 */

            case 1:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6206; /* *avx512vl_vpternlogv32qi_2 */

            case 2:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6233; /* *avx512vl_vpternlogv16qi_2 */

            case 3:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6260; /* *avx512bw_vpternlogv32hi_2 */

            case 4:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6287; /* *avx512vl_vpternlogv16hi_2 */

            case 5:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6314; /* *avx512vl_vpternlogv8hi_2 */

            case 6:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6341; /* *avx512f_vpternlogv16si_2 */

            case 7:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6368; /* *avx512vl_vpternlogv8si_2 */

            case 8:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6395; /* *avx512vl_vpternlogv4si_2 */

            case 9:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 6422; /* *avx512f_vpternlogv8di_2 */

            case 10:
              if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 6449; /* *avx512vl_vpternlogv4di_2 */

            case 11:
              if (!
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))))
                return -1;
              return 6476; /* *avx512vl_vpternlogv2di_2 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case IOR:
      return recog_307 (x1, insn, pnum_clobbers);

    case XOR:
      return recog_306 (x1, insn, pnum_clobbers);

    default:
      return -1;
    }
}

 int
recog_320 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19, x20, x21, x22, x23, x24, x25;
  rtx x26, x27, x28, x29, x30, x31, x32, x33;
  rtx x34, x35, x36, x37, x38, x39, x40, x41;
  rtx x42, x43, x44, x45, x46, x47, x48, x49;
  rtx x50, x51, x52, x53, x54, x55, x56, x57;
  rtx x58, x59, x60, x61, x62, x63, x64, x65;
  rtx x66, x67, x68, x69;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 1);
  if (GET_CODE (x3) != PARALLEL)
    return -1;
  x4 = XEXP (x1, 0);
  operands[0] = x4;
  x5 = XEXP (x2, 0);
  switch (GET_CODE (x5))
    {
    case VEC_CONCAT:
      x6 = XEXP (x5, 0);
      switch (GET_CODE (x6))
        {
        case REG:
        case SUBREG:
        case MEM:
          operands[1] = x6;
          res = recog_284 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          if (XVECLEN (x3, 0) < 1)
            return -1;
          operands[4] = x3;
          switch (pattern807 (x2))
            {
            case 0:
              if (
#line 24165 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8762; /* *avx2_zero_extendv16qiv16hi2_2 */
              break;

            case 1:
              if (
#line 24165 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8763; /* *avx2_zero_extendv16qiv16hi2_2 */
              break;

            case 2:
              if (
#line 24165 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8764; /* *avx2_zero_extendv16qiv16hi2_2 */
              break;

            case 3:
              if ((
#line 24218 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512) && 
#line 953 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8770; /* *avx512bw_zero_extendv32qiv32hi2_2 */
              break;

            case 4:
              if ((
#line 24218 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512) && 
#line 953 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8771; /* *avx512bw_zero_extendv32qiv32hi2_2 */
              break;

            case 5:
              if ((
#line 24218 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512) && 
#line 953 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8772; /* *avx512bw_zero_extendv32qiv32hi2_2 */
              break;

            case 6:
              if (
#line 24329 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8786; /* *sse4_1_zero_extendv8qiv8hi2_4 */
              break;

            case 7:
              if (
#line 24329 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8787; /* *sse4_1_zero_extendv8qiv8hi2_4 */
              break;

            case 8:
              if (
#line 24329 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8788; /* *sse4_1_zero_extendv8qiv8hi2_4 */
              break;

            case 9:
              if ((
#line 24562 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 956 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8822; /* *avx512f_zero_extendv16hiv16si2_2 */
              break;

            case 10:
              if ((
#line 24562 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 956 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8823; /* *avx512f_zero_extendv16hiv16si2_2 */
              break;

            case 11:
              if ((
#line 24562 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 956 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return 8824; /* *avx512f_zero_extendv16hiv16si2_2 */
              break;

            case 12:
              if (
#line 24616 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8830; /* *avx2_zero_extendv8hiv8si2_2 */
              break;

            case 13:
              if (
#line 24616 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8831; /* *avx2_zero_extendv8hiv8si2_2 */
              break;

            case 14:
              if (
#line 24616 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return 8832; /* *avx2_zero_extendv8hiv8si2_2 */
              break;

            case 15:
              if (
#line 24734 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8846; /* *sse4_1_zero_extendv4hiv4si2_4 */
              break;

            case 16:
              if (
#line 24734 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8847; /* *sse4_1_zero_extendv4hiv4si2_4 */
              break;

            case 17:
              if (
#line 24734 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return 8848; /* *sse4_1_zero_extendv4hiv4si2_4 */
              break;

            default:
              break;
            }
          operands[3] = x3;
          switch (pattern808 (x2))
            {
            case 0:
              if (!(
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 9626; /* *vec_concatv64qi_0_1 */

            case 1:
              if (!(
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 9627; /* *vec_concatv32qi_0_1 */

            case 2:
              if (!
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()))
                return -1;
              return 9628; /* *vec_concatv16qi_0_1 */

            case 3:
              if (!(
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 9629; /* *vec_concatv32hi_0_1 */

            case 4:
              if (!(
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 9630; /* *vec_concatv16hi_0_1 */

            case 5:
              if (!
#line 29072 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()))
                return -1;
              return 9631; /* *vec_concatv8hi_0_1 */

            default:
              return -1;
            }

        case SS_TRUNCATE:
          x7 = XEXP (x5, 1);
          if (GET_CODE (x7) != SS_TRUNCATE)
            return -1;
          x8 = XEXP (x6, 0);
          operands[1] = x8;
          x9 = XEXP (x7, 0);
          operands[2] = x9;
          switch (XVECLEN (x3, 0))
            {
            case 32:
              if (pattern835 (x3) != 0)
                return -1;
              x10 = XVECEXP (x3, 0, 4);
              if (GET_CODE (x10) != CONST_INT)
                return -1;
              x11 = XVECEXP (x3, 0, 5);
              if (GET_CODE (x11) != CONST_INT)
                return -1;
              x12 = XVECEXP (x3, 0, 6);
              if (GET_CODE (x12) != CONST_INT)
                return -1;
              x13 = XVECEXP (x3, 0, 7);
              if (GET_CODE (x13) != CONST_INT)
                return -1;
              x14 = XVECEXP (x3, 0, 8);
              if (GET_CODE (x14) != CONST_INT)
                return -1;
              x15 = XVECEXP (x3, 0, 9);
              if (GET_CODE (x15) != CONST_INT)
                return -1;
              x16 = XVECEXP (x3, 0, 10);
              if (GET_CODE (x16) != CONST_INT)
                return -1;
              x17 = XVECEXP (x3, 0, 11);
              if (GET_CODE (x17) != CONST_INT
                  || pattern1690 (x3, 
23, 
22, 
21, 
20, 
8) != 0)
                return -1;
              x18 = XVECEXP (x3, 0, 17);
              if (x18 != const_int_rtx[MAX_SAVED_CONST_INT + 9])
                return -1;
              x19 = XVECEXP (x3, 0, 18);
              if (x19 != const_int_rtx[MAX_SAVED_CONST_INT + 10])
                return -1;
              x20 = XVECEXP (x3, 0, 19);
              if (x20 != const_int_rtx[MAX_SAVED_CONST_INT + 11])
                return -1;
              x21 = XVECEXP (x3, 0, 20);
              if (GET_CODE (x21) != CONST_INT)
                return -1;
              x22 = XVECEXP (x3, 0, 21);
              if (GET_CODE (x22) != CONST_INT)
                return -1;
              x23 = XVECEXP (x3, 0, 22);
              if (GET_CODE (x23) != CONST_INT)
                return -1;
              x24 = XVECEXP (x3, 0, 23);
              if (GET_CODE (x24) != CONST_INT)
                return -1;
              x25 = XVECEXP (x3, 0, 24);
              if (GET_CODE (x25) != CONST_INT)
                return -1;
              x26 = XVECEXP (x3, 0, 25);
              if (GET_CODE (x26) != CONST_INT)
                return -1;
              x27 = XVECEXP (x3, 0, 26);
              if (GET_CODE (x27) != CONST_INT)
                return -1;
              x28 = XVECEXP (x3, 0, 27);
              if (GET_CODE (x28) != CONST_INT
                  || pattern1860 (x3, 
31, 
30, 
29, 
28) != 0)
                return -1;
              switch (XWINT (x10, 0))
                {
                case 4L:
                  if (XWINT (x11, 0) != 5L
                      || XWINT (x12, 0) != 6L
                      || XWINT (x13, 0) != 7L
                      || XWINT (x14, 0) != 16L
                      || XWINT (x15, 0) != 17L
                      || XWINT (x16, 0) != 18L
                      || XWINT (x17, 0) != 19L
                      || XWINT (x21, 0) != 12L
                      || XWINT (x22, 0) != 13L
                      || XWINT (x23, 0) != 14L
                      || XWINT (x24, 0) != 15L
                      || pattern1885 (x3) != 0
                      || pattern1817 (x2, 
E_V16HImode, 
E_V16QImode, 
E_V32QImode) != 0
                      || !
#line 19259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && 1 && 1))
                    return -1;
                  return 8307; /* avx2_packsswb */

                case 16L:
                  if (XWINT (x11, 0) != 17L
                      || XWINT (x12, 0) != 18L
                      || XWINT (x13, 0) != 19L
                      || XWINT (x14, 0) != 4L
                      || XWINT (x15, 0) != 5L
                      || XWINT (x16, 0) != 6L
                      || XWINT (x17, 0) != 7L
                      || XWINT (x21, 0) != 24L
                      || XWINT (x22, 0) != 25L
                      || XWINT (x23, 0) != 26L
                      || XWINT (x24, 0) != 27L
                      || XWINT (x25, 0) != 12L
                      || XWINT (x26, 0) != 13L
                      || XWINT (x27, 0) != 14L
                      || XWINT (x28, 0) != 15L
                      || pattern1817 (x2, 
E_V16SImode, 
E_V16HImode, 
E_V32HImode) != 0
                      || !
#line 19375 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512))
                    return -1;
                  return 8315; /* avx512bw_packssdw */

                default:
                  return -1;
                }

            case 64:
              if (pattern838 (x3, 
35, 
34, 
33, 
32) != 0
                  || pattern1690 (x3, 
39, 
38, 
37, 
36, 
8) != 0
                  || pattern1800 (x3, 
13, 
12, 
11, 
10, 
9) != 0
                  || pattern1842 (x3, 
42, 
41, 
40, 
15, 
14) != 0)
                return -1;
              x28 = XVECEXP (x3, 0, 27);
              if (x28 != const_int_rtx[MAX_SAVED_CONST_INT + 43]
                  || pattern1860 (x3, 
47, 
46, 
45, 
44) != 0)
                return -1;
              x29 = XVECEXP (x3, 0, 32);
              if (x29 != const_int_rtx[MAX_SAVED_CONST_INT + 16])
                return -1;
              x30 = XVECEXP (x3, 0, 33);
              if (x30 != const_int_rtx[MAX_SAVED_CONST_INT + 17])
                return -1;
              x31 = XVECEXP (x3, 0, 34);
              if (x31 != const_int_rtx[MAX_SAVED_CONST_INT + 18])
                return -1;
              x32 = XVECEXP (x3, 0, 35);
              if (x32 != const_int_rtx[MAX_SAVED_CONST_INT + 19])
                return -1;
              x33 = XVECEXP (x3, 0, 36);
              if (x33 != const_int_rtx[MAX_SAVED_CONST_INT + 20])
                return -1;
              x34 = XVECEXP (x3, 0, 37);
              if (x34 != const_int_rtx[MAX_SAVED_CONST_INT + 21])
                return -1;
              x35 = XVECEXP (x3, 0, 38);
              if (x35 != const_int_rtx[MAX_SAVED_CONST_INT + 22])
                return -1;
              x36 = XVECEXP (x3, 0, 39);
              if (x36 != const_int_rtx[MAX_SAVED_CONST_INT + 23])
                return -1;
              x37 = XVECEXP (x3, 0, 40);
              if (x37 != const_int_rtx[MAX_SAVED_CONST_INT + 48])
                return -1;
              x38 = XVECEXP (x3, 0, 41);
              if (x38 != const_int_rtx[MAX_SAVED_CONST_INT + 49])
                return -1;
              x39 = XVECEXP (x3, 0, 42);
              if (x39 != const_int_rtx[MAX_SAVED_CONST_INT + 50])
                return -1;
              x40 = XVECEXP (x3, 0, 43);
              if (x40 != const_int_rtx[MAX_SAVED_CONST_INT + 51])
                return -1;
              x41 = XVECEXP (x3, 0, 44);
              if (x41 != const_int_rtx[MAX_SAVED_CONST_INT + 52])
                return -1;
              x42 = XVECEXP (x3, 0, 45);
              if (x42 != const_int_rtx[MAX_SAVED_CONST_INT + 53])
                return -1;
              x43 = XVECEXP (x3, 0, 46);
              if (x43 != const_int_rtx[MAX_SAVED_CONST_INT + 54])
                return -1;
              x44 = XVECEXP (x3, 0, 47);
              if (x44 != const_int_rtx[MAX_SAVED_CONST_INT + 55])
                return -1;
              x45 = XVECEXP (x3, 0, 48);
              if (x45 != const_int_rtx[MAX_SAVED_CONST_INT + 24])
                return -1;
              x46 = XVECEXP (x3, 0, 49);
              if (x46 != const_int_rtx[MAX_SAVED_CONST_INT + 25])
                return -1;
              x47 = XVECEXP (x3, 0, 50);
              if (x47 != const_int_rtx[MAX_SAVED_CONST_INT + 26])
                return -1;
              x48 = XVECEXP (x3, 0, 51);
              if (x48 != const_int_rtx[MAX_SAVED_CONST_INT + 27])
                return -1;
              x49 = XVECEXP (x3, 0, 52);
              if (x49 != const_int_rtx[MAX_SAVED_CONST_INT + 28])
                return -1;
              x50 = XVECEXP (x3, 0, 53);
              if (x50 != const_int_rtx[MAX_SAVED_CONST_INT + 29])
                return -1;
              x51 = XVECEXP (x3, 0, 54);
              if (x51 != const_int_rtx[MAX_SAVED_CONST_INT + 30])
                return -1;
              x52 = XVECEXP (x3, 0, 55);
              if (x52 != const_int_rtx[MAX_SAVED_CONST_INT + 31])
                return -1;
              x53 = XVECEXP (x3, 0, 56);
              if (x53 != const_int_rtx[MAX_SAVED_CONST_INT + 56])
                return -1;
              x54 = XVECEXP (x3, 0, 57);
              if (x54 != const_int_rtx[MAX_SAVED_CONST_INT + 57])
                return -1;
              x55 = XVECEXP (x3, 0, 58);
              if (x55 != const_int_rtx[MAX_SAVED_CONST_INT + 58])
                return -1;
              x56 = XVECEXP (x3, 0, 59);
              if (x56 != const_int_rtx[MAX_SAVED_CONST_INT + 59])
                return -1;
              x57 = XVECEXP (x3, 0, 60);
              if (x57 != const_int_rtx[MAX_SAVED_CONST_INT + 60])
                return -1;
              x58 = XVECEXP (x3, 0, 61);
              if (x58 != const_int_rtx[MAX_SAVED_CONST_INT + 61])
                return -1;
              x59 = XVECEXP (x3, 0, 62);
              if (x59 != const_int_rtx[MAX_SAVED_CONST_INT + 62])
                return -1;
              x60 = XVECEXP (x3, 0, 63);
              if (x60 != const_int_rtx[MAX_SAVED_CONST_INT + 63]
                  || pattern1817 (x2, 
E_V32HImode, 
E_V32QImode, 
E_V64QImode) != 0
                  || !
#line 19306 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512))
                return -1;
              return 8309; /* avx512bw_packsswb */

            case 16:
              if (pattern836 (x3, 
10, 
9, 
8) != 0
                  || pattern1508 (x3, 
7, 
6, 
5, 
4, 
11) != 0
                  || pattern1817 (x2, 
E_V8SImode, 
E_V8HImode, 
E_V16HImode) != 0
                  || !
#line 19345 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && 1 && 1))
                return -1;
              return 8313; /* avx2_packssdw */

            default:
              return -1;
            }

        case VEC_CONCAT:
          switch (pattern524 (x2))
            {
            case 0:
              if (!
#line 25117 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512))
                return -1;
              return 8917; /* *avx512f_zero_extendv8siv8di2_2 */

            case 1:
              if (!
#line 25169 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2))
                return -1;
              return 8923; /* *avx2_zero_extendv4siv4di2_2 */

            case 2:
              if (!
#line 25265 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
                return -1;
              return 8937; /* *sse4_1_zero_extendv2siv2di2_4 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x5;
      res = recog_298 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      if (GET_CODE (x5) != SUBREG)
        return -1;
      switch (pattern526 (x2))
        {
        case 0:
          if (!
#line 15048 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512 && ix86_pre_reload_split ()))
            return -1;
          return 7240; /* *avx512bw_permvar_truncv16siv16hi_1_hf */

        case 1:
          if (!
#line 15101 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW && ix86_pre_reload_split ()))
            return -1;
          return 7242; /* *avx512f_permvar_truncv8siv8hi_1_hf */

        default:
          return -1;
        }

    case UNSPEC:
      switch (XVECLEN (x5, 0))
        {
        case 2:
          switch (pattern528 (x2))
            {
            case 0:
              if (!
#line 15023 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512 && ix86_pre_reload_split ()))
                return -1;
              return 7239; /* *avx512bw_permvar_truncv16siv16hi_1 */

            case 1:
              if (!
#line 15285 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512VBMI
   && ix86_pre_reload_split ()))
                return -1;
              return 7272; /* *avx512f_permvar_truncv16hiv16qi_1 */

            case 2:
              if (!
#line 15080 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW && ix86_pre_reload_split ()))
                return -1;
              return 7241; /* *avx512f_permvar_truncv8siv8hi_1 */

            case 3:
              if (!
#line 15132 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512 && ix86_pre_reload_split ()))
                return -1;
              return 7243; /* *avx512f_vpermvar_truncv8div8si_1 */

            case 4:
              if (!
#line 15204 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VBMI && TARGET_EVEX512 && ix86_pre_reload_split ()))
                return -1;
              return 7259; /* *avx512f_permvar_truncv32hiv32qi_1 */

            case 5:
              if (!
#line 15304 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()))
                return -1;
              return 7273; /* *avx512f_permvar_truncv4div4si_1 */

            default:
              return -1;
            }

        case 1:
          if (XINT (x5, 1) != 149
              || GET_MODE (x5) != E_V8SFmode
              || XVECLEN (x3, 0) != 4
              || pattern835 (x3) != 0
              || !register_operand (operands[0], E_V4SFmode)
              || GET_MODE (x2) != E_V4SFmode)
            return -1;
          x61 = XVECEXP (x5, 0, 0);
          operands[1] = x61;
          if (!register_operand (operands[1], E_V8HImode)
              || !
#line 29089 "../../src/gcc/config/i386/sse.md"
(TARGET_F16C || TARGET_AVX512VL))
            return -1;
          return 9650; /* vcvtph2ps */

        case 4:
          if (pnum_clobbers == NULL
              || XINT (x5, 1) != 153)
            return -1;
          x62 = XVECEXP (x5, 0, 1);
          if (GET_CODE (x62) != MEM)
            return -1;
          x63 = XEXP (x62, 0);
          if (GET_CODE (x63) != UNSPEC
              || XVECLEN (x63, 0) != 3
              || XINT (x63, 1) != 154)
            return -1;
          x64 = XVECEXP (x5, 0, 2);
          if (GET_CODE (x64) != MEM
              || GET_MODE (x64) != E_BLKmode)
            return -1;
          x65 = XEXP (x64, 0);
          if (GET_CODE (x65) != SCRATCH
              || XVECLEN (x3, 0) != 4
              || pattern835 (x3) != 0)
            return -1;
          x66 = XVECEXP (x63, 0, 1);
          if (!register_operand (x66, E_V4DImode))
            return -1;
          x67 = XVECEXP (x63, 0, 2);
          if (!const1248_operand (x67, E_SImode))
            return -1;
          x61 = XVECEXP (x5, 0, 0);
          switch (GET_CODE (x61))
            {
            case REG:
            case SUBREG:
              operands[2] = x61;
              operands[7] = x62;
              x68 = XVECEXP (x63, 0, 0);
              operands[3] = x68;
              operands[4] = x66;
              operands[6] = x67;
              x69 = XVECEXP (x5, 0, 3);
              operands[5] = x69;
              switch (GET_MODE (operands[0]))
                {
                case E_V4SImode:
                  switch (pattern1837 (x2, 
E_V4SImode, 
E_SImode, 
E_V8SImode))
                    {
                    case 0:
                      if (!(
#line 29417 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9739; /* *avx2_gatherdiv8si_3 */

                    case 1:
                      if (!(
#line 29417 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9741; /* *avx2_gatherdiv8si_3 */

                    default:
                      return -1;
                    }

                case E_V4SFmode:
                  switch (pattern1837 (x2, 
E_V4SFmode, 
E_SFmode, 
E_V8SFmode))
                    {
                    case 0:
                      if (!(
#line 29417 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9740; /* *avx2_gatherdiv8sf_3 */

                    case 1:
                      if (!(
#line 29417 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9742; /* *avx2_gatherdiv8sf_3 */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            case PC:
              operands[6] = x62;
              x68 = XVECEXP (x63, 0, 0);
              operands[2] = x68;
              operands[3] = x66;
              operands[5] = x67;
              x69 = XVECEXP (x5, 0, 3);
              operands[4] = x69;
              switch (GET_MODE (operands[0]))
                {
                case E_V4SImode:
                  switch (pattern1831 (x2, 
E_V4SImode, 
E_SImode, 
E_V8SImode))
                    {
                    case 0:
                      if (!(
#line 29441 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9743; /* *avx2_gatherdiv8si_4 */

                    case 1:
                      if (!(
#line 29441 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9745; /* *avx2_gatherdiv8si_4 */

                    default:
                      return -1;
                    }

                case E_V4SFmode:
                  switch (pattern1831 (x2, 
E_V4SFmode, 
E_SFmode, 
E_V8SFmode))
                    {
                    case 0:
                      if (!(
#line 29441 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9744; /* *avx2_gatherdiv8sf_4 */

                    case 1:
                      if (!(
#line 29441 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)))
                        return -1;
                      *pnum_clobbers = 1;
                      return 9746; /* *avx2_gatherdiv8sf_4 */

                    default:
                      return -1;
                    }

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_325 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 1);
  operands[2] = x4;
  x5 = XEXP (x3, 0);
  switch (GET_CODE (x5))
    {
    case REG:
    case SUBREG:
    case MEM:
    case VEC_DUPLICATE:
      return recog_273 (x1, insn, pnum_clobbers);

    case NEG:
      x6 = XEXP (x5, 0);
      operands[1] = x6;
      x7 = XEXP (x3, 2);
      switch (GET_CODE (x7))
        {
        case REG:
        case SUBREG:
        case MEM:
        case VEC_DUPLICATE:
          operands[3] = x7;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (!register_operand (operands[0], E_V4SFmode)
                  || GET_MODE (x3) != E_V4SFmode
                  || GET_MODE (x5) != E_V4SFmode)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4SFmode)
                  && nonimmediate_operand (operands[2], E_V4SFmode)
                  && nonimmediate_operand (operands[3], E_V4SFmode)
                  && 
#line 6119 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 3940; /* *fma_fnmadd_v4sf */
              if (!bcst_vector_operand (operands[1], E_V4SFmode)
                  || !bcst_vector_operand (operands[2], E_V4SFmode)
                  || !bcst_vector_operand (operands[3], E_V4SFmode)
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 3964; /* *fma_fnmadd_v4sf */

            case E_V2DFmode:
              if (!register_operand (operands[0], E_V2DFmode)
                  || GET_MODE (x3) != E_V2DFmode
                  || GET_MODE (x5) != E_V2DFmode)
                return -1;
              if (nonimmediate_operand (operands[1], E_V2DFmode)
                  && nonimmediate_operand (operands[2], E_V2DFmode)
                  && nonimmediate_operand (operands[3], E_V2DFmode)
                  && 
#line 6119 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 3941; /* *fma_fnmadd_v2df */
              if (!bcst_vector_operand (operands[1], E_V2DFmode)
                  || !bcst_vector_operand (operands[2], E_V2DFmode)
                  || !bcst_vector_operand (operands[3], E_V2DFmode)
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 3975; /* *fma_fnmadd_v2df */

            case E_V8SFmode:
              if (!register_operand (operands[0], E_V8SFmode)
                  || GET_MODE (x3) != E_V8SFmode
                  || GET_MODE (x5) != E_V8SFmode)
                return -1;
              if (nonimmediate_operand (operands[1], E_V8SFmode)
                  && nonimmediate_operand (operands[2], E_V8SFmode)
                  && nonimmediate_operand (operands[3], E_V8SFmode)
                  && 
#line 6119 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 3942; /* *fma_fnmadd_v8sf */
              if (!bcst_vector_operand (operands[1], E_V8SFmode)
                  || !bcst_vector_operand (operands[2], E_V8SFmode)
                  || !bcst_vector_operand (operands[3], E_V8SFmode)
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 3960; /* *fma_fnmadd_v8sf */

            case E_V4DFmode:
              if (!register_operand (operands[0], E_V4DFmode)
                  || GET_MODE (x3) != E_V4DFmode
                  || GET_MODE (x5) != E_V4DFmode)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4DFmode)
                  && nonimmediate_operand (operands[2], E_V4DFmode)
                  && nonimmediate_operand (operands[3], E_V4DFmode)
                  && 
#line 6119 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 3943; /* *fma_fnmadd_v4df */
              if (!bcst_vector_operand (operands[1], E_V4DFmode)
                  || !bcst_vector_operand (operands[2], E_V4DFmode)
                  || !bcst_vector_operand (operands[3], E_V4DFmode)
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 3971; /* *fma_fnmadd_v4df */

            case E_V32HFmode:
              if (pattern866 (x3, 
E_V32HFmode) != 0
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5927 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
                return -1;
              return 3944; /* *fma_fnmadd_v32hf */

            case E_V16HFmode:
              if (pattern866 (x3, 
E_V16HFmode) != 0
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5928 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return -1;
              return 3948; /* *fma_fnmadd_v16hf */

            case E_V8HFmode:
              if (pattern866 (x3, 
E_V8HFmode) != 0
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5929 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return -1;
              return 3952; /* *fma_fnmadd_v8hf */

            case E_V16SFmode:
              if (pattern866 (x3, 
E_V16SFmode) != 0
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5931 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3956; /* *fma_fnmadd_v16sf */

            case E_V8DFmode:
              if (pattern866 (x3, 
E_V8DFmode) != 0
                  || !(
#line 6151 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5933 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 3967; /* *fma_fnmadd_v8df */

            case E_V32BFmode:
              if (pattern926 (x3, 
E_V32BFmode) != 0
                  || !(
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
                return -1;
              return 10645; /* avx10_2_fnmaddbf16_v32bf */

            case E_V16BFmode:
              if (pattern926 (x3, 
E_V16BFmode) != 0
                  || !
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return -1;
              return 10647; /* avx10_2_fnmaddbf16_v16bf */

            case E_V8BFmode:
              if (pattern926 (x3, 
E_V8BFmode) != 0
                  || !
#line 32211 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return -1;
              return 10649; /* avx10_2_fnmaddbf16_v8bf */

            default:
              return -1;
            }

        case NEG:
          x8 = XEXP (x7, 0);
          operands[3] = x8;
          switch (GET_MODE (operands[0]))
            {
            case E_V4SFmode:
              if (pattern867 (x3, 
E_V4SFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4SFmode)
                  && nonimmediate_operand (operands[2], E_V4SFmode)
                  && nonimmediate_operand (operands[3], E_V4SFmode)
                  && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 4011; /* *fma_fnmsub_v4sf */
              if (!bcst_vector_operand (operands[1], E_V4SFmode)
                  || !bcst_vector_operand (operands[2], E_V4SFmode)
                  || !bcst_vector_operand (operands[3], E_V4SFmode)
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 4047; /* *fma_fnmsub_v4sf */

            case E_V2DFmode:
              if (pattern867 (x3, 
E_V2DFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V2DFmode)
                  && nonimmediate_operand (operands[2], E_V2DFmode)
                  && nonimmediate_operand (operands[3], E_V2DFmode)
                  && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 4015; /* *fma_fnmsub_v2df */
              if (!bcst_vector_operand (operands[1], E_V2DFmode)
                  || !bcst_vector_operand (operands[2], E_V2DFmode)
                  || !bcst_vector_operand (operands[3], E_V2DFmode)
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 4058; /* *fma_fnmsub_v2df */

            case E_V8SFmode:
              if (pattern867 (x3, 
E_V8SFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V8SFmode)
                  && nonimmediate_operand (operands[2], E_V8SFmode)
                  && nonimmediate_operand (operands[3], E_V8SFmode)
                  && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 4019; /* *fma_fnmsub_v8sf */
              if (!bcst_vector_operand (operands[1], E_V8SFmode)
                  || !bcst_vector_operand (operands[2], E_V8SFmode)
                  || !bcst_vector_operand (operands[3], E_V8SFmode)
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5932 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 4043; /* *fma_fnmsub_v8sf */

            case E_V4DFmode:
              if (pattern867 (x3, 
E_V4DFmode) != 0)
                return -1;
              if (nonimmediate_operand (operands[1], E_V4DFmode)
                  && nonimmediate_operand (operands[2], E_V4DFmode)
                  && nonimmediate_operand (operands[3], E_V4DFmode)
                  && 
#line 6226 "../../src/gcc/config/i386/sse.md"
(TARGET_FMA || TARGET_FMA4))
                return 4023; /* *fma_fnmsub_v4df */
              if (!bcst_vector_operand (operands[1], E_V4DFmode)
                  || !bcst_vector_operand (operands[2], E_V4DFmode)
                  || !bcst_vector_operand (operands[3], E_V4DFmode)
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5934 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
                return -1;
              return 4054; /* *fma_fnmsub_v4df */

            case E_V32HFmode:
              if (pattern868 (x3, 
E_V32HFmode) != 0
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5927 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
                return -1;
              return 4027; /* *fma_fnmsub_v32hf */

            case E_V16HFmode:
              if (pattern868 (x3, 
E_V16HFmode) != 0
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5928 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return -1;
              return 4031; /* *fma_fnmsub_v16hf */

            case E_V8HFmode:
              if (pattern868 (x3, 
E_V8HFmode) != 0
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5929 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
                return -1;
              return 4035; /* *fma_fnmsub_v8hf */

            case E_V16SFmode:
              if (pattern868 (x3, 
E_V16SFmode) != 0
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5931 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 4039; /* *fma_fnmsub_v16sf */

            case E_V8DFmode:
              if (pattern868 (x3, 
E_V8DFmode) != 0
                  || !(
#line 6259 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && 1 && 1) && 
#line 5933 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)))
                return -1;
              return 4050; /* *fma_fnmsub_v8df */

            case E_V32BFmode:
              if (pattern927 (x3, 
E_V32BFmode) != 0
                  || !(
#line 32342 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
                return -1;
              return 10669; /* avx10_2_fnmsubbf16_v32bf */

            case E_V16BFmode:
              if (pattern927 (x3, 
E_V16BFmode) != 0
                  || !
#line 32342 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return -1;
              return 10671; /* avx10_2_fnmsubbf16_v16bf */

            case E_V8BFmode:
              if (pattern927 (x3, 
E_V8BFmode) != 0
                  || !
#line 32342 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
                return -1;
              return 10673; /* avx10_2_fnmsubbf16_v8bf */

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_330 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[3] = x4;
      x5 = XEXP (x3, 1);
      operands[1] = x5;
      x6 = XEXP (x3, 2);
      operands[2] = x6;
      switch (GET_MODE (operands[0]))
        {
        case E_V32QImode:
          if (pattern812 (x3, 
E_V32QImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9001; /* xop_pcmov_v32qi256 */

        case E_V16QImode:
          if (pattern812 (x3, 
E_V16QImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9002; /* xop_pcmov_v16qi */

        case E_V16HImode:
          if (pattern812 (x3, 
E_V16HImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9003; /* xop_pcmov_v16hi256 */

        case E_V8HImode:
          if (pattern812 (x3, 
E_V8HImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9004; /* xop_pcmov_v8hi */

        case E_V8SImode:
          if (pattern812 (x3, 
E_V8SImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9005; /* xop_pcmov_v8si256 */

        case E_V4SImode:
          if (pattern812 (x3, 
E_V4SImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9006; /* xop_pcmov_v4si */

        case E_V4DImode:
          if (pattern812 (x3, 
E_V4DImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9007; /* xop_pcmov_v4di256 */

        case E_V2DImode:
          if (pattern812 (x3, 
E_V2DImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9008; /* xop_pcmov_v2di */

        case E_V2TImode:
          if (pattern812 (x3, 
E_V2TImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9009; /* xop_pcmov_v2ti256 */

        case E_V1TImode:
          if (pattern812 (x3, 
E_V1TImode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9010; /* xop_pcmov_v1ti */

        case E_V16HFmode:
          if (pattern812 (x3, 
E_V16HFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9011; /* xop_pcmov_v16hf256 */

        case E_V8HFmode:
          if (pattern812 (x3, 
E_V8HFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9012; /* xop_pcmov_v8hf */

        case E_V8SFmode:
          if (pattern812 (x3, 
E_V8SFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9013; /* xop_pcmov_v8sf256 */

        case E_V4SFmode:
          if (pattern812 (x3, 
E_V4SFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9014; /* xop_pcmov_v4sf */

        case E_V4DFmode:
          if (pattern812 (x3, 
E_V4DFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9015; /* xop_pcmov_v4df256 */

        case E_V2DFmode:
          if (pattern812 (x3, 
E_V2DFmode) != 0
              || !
#line 26224 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP))
            return -1;
          return 9016; /* xop_pcmov_v2df */

        default:
          return -1;
        }

    case GE:
      x7 = XEXP (x4, 1);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x8 = XEXP (x4, 0);
      operands[2] = x8;
      x5 = XEXP (x3, 1);
      switch (GET_CODE (x5))
        {
        case ROTATE:
          x6 = XEXP (x3, 2);
          if (GET_CODE (x6) != ROTATERT)
            return -1;
          x9 = XEXP (x6, 1);
          if (GET_CODE (x9) != NEG)
            return -1;
          x10 = XEXP (x5, 0);
          operands[1] = x10;
          x11 = XEXP (x5, 1);
          if (!rtx_equal_p (x11, operands[2]))
            return -1;
          switch (pattern1145 (x3))
            {
            case 0:
              if (!
#line 26670 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 9044; /* xop_vrotlv16qi3 */

            case 1:
              if (!
#line 26670 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 9045; /* xop_vrotlv8hi3 */

            case 2:
              if (!
#line 26670 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 9046; /* xop_vrotlv4si3 */

            case 3:
              if (!
#line 26670 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 9047; /* xop_vrotlv2di3 */

            default:
              return -1;
            }

        case ASHIFT:
          x10 = XEXP (x5, 0);
          operands[1] = x10;
          x11 = XEXP (x5, 1);
          if (!rtx_equal_p (x11, operands[2]))
            return -1;
          x6 = XEXP (x3, 2);
          switch (GET_CODE (x6))
            {
            case ASHIFTRT:
              x9 = XEXP (x6, 1);
              if (GET_CODE (x9) != NEG)
                return -1;
              switch (pattern1145 (x3))
                {
                case 0:
                  if (!
#line 26907 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9048; /* xop_shav16qi3 */

                case 1:
                  if (!
#line 26907 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9049; /* xop_shav8hi3 */

                case 2:
                  if (!
#line 26907 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9050; /* xop_shav4si3 */

                case 3:
                  if (!
#line 26907 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9051; /* xop_shav2di3 */

                default:
                  return -1;
                }

            case LSHIFTRT:
              x9 = XEXP (x6, 1);
              if (GET_CODE (x9) != NEG)
                return -1;
              switch (pattern1145 (x3))
                {
                case 0:
                  if (!
#line 26926 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9052; /* xop_shlv16qi3 */

                case 1:
                  if (!
#line 26926 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9053; /* xop_shlv8hi3 */

                case 2:
                  if (!
#line 26926 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9054; /* xop_shlv4si3 */

                case 3:
                  if (!
#line 26926 "../../src/gcc/config/i386/sse.md"
(TARGET_XOP && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                    return -1;
                  return 9055; /* xop_shlv2di3 */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_335 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_V64QImode:
      if (!register_operand (operands[0], E_V64QImode)
          || GET_MODE (x3) != E_V64QImode
          || !vector_operand (operands[1], E_V64QImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23354 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
        return -1;
      return 8651; /* *absv64qi2 */

    case E_V32QImode:
      if (!register_operand (operands[0], E_V32QImode)
          || GET_MODE (x3) != E_V32QImode
          || !vector_operand (operands[1], E_V32QImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23354 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2)))
        return -1;
      return 8652; /* *absv32qi2 */

    case E_V16QImode:
      if (!register_operand (operands[0], E_V16QImode)
          || GET_MODE (x3) != E_V16QImode
          || !vector_operand (operands[1], E_V16QImode)
          || !
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3))
        return -1;
      return 8653; /* *absv16qi2 */

    case E_V32HImode:
      if (!register_operand (operands[0], E_V32HImode)
          || GET_MODE (x3) != E_V32HImode
          || !vector_operand (operands[1], E_V32HImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
        return -1;
      return 8654; /* *absv32hi2 */

    case E_V16HImode:
      if (!register_operand (operands[0], E_V16HImode)
          || GET_MODE (x3) != E_V16HImode
          || !vector_operand (operands[1], E_V16HImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2)))
        return -1;
      return 8655; /* *absv16hi2 */

    case E_V8HImode:
      if (!register_operand (operands[0], E_V8HImode)
          || GET_MODE (x3) != E_V8HImode
          || !vector_operand (operands[1], E_V8HImode)
          || !
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3))
        return -1;
      return 8656; /* *absv8hi2 */

    case E_V16SImode:
      if (!register_operand (operands[0], E_V16SImode)
          || GET_MODE (x3) != E_V16SImode
          || !vector_operand (operands[1], E_V16SImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23356 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8657; /* *absv16si2 */

    case E_V8SImode:
      if (!register_operand (operands[0], E_V8SImode)
          || GET_MODE (x3) != E_V8SImode
          || !vector_operand (operands[1], E_V8SImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23356 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2)))
        return -1;
      return 8658; /* *absv8si2 */

    case E_V4SImode:
      if (!register_operand (operands[0], E_V4SImode)
          || GET_MODE (x3) != E_V4SImode
          || !vector_operand (operands[1], E_V4SImode)
          || !
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3))
        return -1;
      return 8659; /* *absv4si2 */

    case E_V8DImode:
      if (!register_operand (operands[0], E_V8DImode)
          || GET_MODE (x3) != E_V8DImode
          || !vector_operand (operands[1], E_V8DImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23357 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 8660; /* *absv8di2 */

    case E_V4DImode:
      if (!register_operand (operands[0], E_V4DImode)
          || GET_MODE (x3) != E_V4DImode
          || !vector_operand (operands[1], E_V4DImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23357 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 8661; /* *absv4di2 */

    case E_V2DImode:
      if (!register_operand (operands[0], E_V2DImode)
          || GET_MODE (x3) != E_V2DImode
          || !vector_operand (operands[1], E_V2DImode)
          || !(
#line 23364 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3) && 
#line 23358 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)))
        return -1;
      return 8662; /* *absv2di2 */

    default:
      return -1;
    }
}

 int
recog_338 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_V32HFmode:
      if (!register_operand (operands[0], E_V32HFmode)
          || GET_MODE (x3) != E_V32HFmode
          || !vector_operand (operands[1], E_V32HFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 389 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_EVEX512)))
        return -1;
      return 2910; /* avx512fp16_sqrtv32hf2 */

    case E_V16HFmode:
      if (!register_operand (operands[0], E_V16HFmode)
          || GET_MODE (x3) != E_V16HFmode
          || !vector_operand (operands[1], E_V16HFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 390 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 2914; /* avx512fp16_sqrtv16hf2 */

    case E_V8HFmode:
      if (!register_operand (operands[0], E_V8HFmode)
          || GET_MODE (x3) != E_V8HFmode
          || !vector_operand (operands[1], E_V8HFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 391 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && TARGET_AVX512VL)))
        return -1;
      return 2918; /* avx512fp16_sqrtv8hf2 */

    case E_V16SFmode:
      if (!register_operand (operands[0], E_V16SFmode)
          || GET_MODE (x3) != E_V16SFmode
          || !vector_operand (operands[1], E_V16SFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 392 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 2920; /* avx512f_sqrtv16sf2 */

    case E_V8SFmode:
      if (!register_operand (operands[0], E_V8SFmode)
          || GET_MODE (x3) != E_V8SFmode
          || !vector_operand (operands[1], E_V8SFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 392 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return -1;
      return 2924; /* avx_sqrtv8sf2 */

    case E_V4SFmode:
      if (!register_operand (operands[0], E_V4SFmode)
          || GET_MODE (x3) != E_V4SFmode
          || !vector_operand (operands[1], E_V4SFmode)
          || !
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1))
        return -1;
      return 2928; /* sse_sqrtv4sf2 */

    case E_V8DFmode:
      if (!register_operand (operands[0], E_V8DFmode)
          || GET_MODE (x3) != E_V8DFmode
          || !vector_operand (operands[1], E_V8DFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 393 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return -1;
      return 2930; /* avx512f_sqrtv8df2 */

    case E_V4DFmode:
      if (!register_operand (operands[0], E_V4DFmode)
          || GET_MODE (x3) != E_V4DFmode
          || !vector_operand (operands[1], E_V4DFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 393 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return -1;
      return 2934; /* avx_sqrtv4df2 */

    case E_V2DFmode:
      if (!register_operand (operands[0], E_V2DFmode)
          || GET_MODE (x3) != E_V2DFmode
          || !vector_operand (operands[1], E_V2DFmode)
          || !(
#line 3064 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && 1 && 1) && 
#line 394 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return -1;
      return 2938; /* sse2_sqrtv2df2 */

    case E_V32BFmode:
      if (!register_operand (operands[0], E_V32BFmode)
          || GET_MODE (x3) != E_V32BFmode
          || !nonimmediate_operand (operands[1], E_V32BFmode)
          || !(
#line 32400 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256) && 
#line 564 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_512)))
        return -1;
      return 10687; /* avx10_2_sqrtbf16_v32bf */

    case E_V16BFmode:
      if (!register_operand (operands[0], E_V16BFmode)
          || GET_MODE (x3) != E_V16BFmode
          || !nonimmediate_operand (operands[1], E_V16BFmode)
          || !
#line 32400 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10689; /* avx10_2_sqrtbf16_v16bf */

    case E_V8BFmode:
      if (!register_operand (operands[0], E_V8BFmode)
          || GET_MODE (x3) != E_V8BFmode
          || !nonimmediate_operand (operands[1], E_V8BFmode)
          || !
#line 32400 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX10_2_256))
        return -1;
      return 10691; /* avx10_2_sqrtbf16_v8bf */

    default:
      return -1;
    }
}

 int
recog_344 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  switch (GET_CODE (x3))
    {
    case AND:
      res = recog_303 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      break;

    case IOR:
      res = recog_315 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      break;

    case XOR:
      res = recog_308 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      break;

    case NOT:
      x4 = XEXP (x3, 0);
      if (GET_CODE (x4) == XOR)
        {
          x5 = XEXP (x4, 0);
          operands[1] = x5;
          x6 = XEXP (x4, 1);
          operands[2] = x6;
          switch (GET_MODE (operands[0]))
            {
            case E_V16SImode:
              if (pattern809 (x3, 
E_V16SImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V16SImode)
       || register_operand (operands[2], V16SImode))) && 
#line 568 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return 8077; /* *xnorv16si3 */
              break;

            case E_V8DImode:
              if (pattern809 (x3, 
E_V8DImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V8DImode)
       || register_operand (operands[2], V8DImode))) && 
#line 569 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return 8078; /* *xnorv8di3 */
              break;

            case E_V64QImode:
              if (pattern809 (x3, 
E_V64QImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V64QImode)
       || register_operand (operands[2], V64QImode))) && 
#line 570 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
                return 8079; /* *xnorv64qi3 */
              break;

            case E_V32QImode:
              if (pattern809 (x3, 
E_V32QImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V32QImode)
       || register_operand (operands[2], V32QImode))) && 
#line 570 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return 8080; /* *xnorv32qi3 */
              break;

            case E_V16QImode:
              if (pattern809 (x3, 
E_V16QImode) == 0
                  && 
#line 19003 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V16QImode)
       || register_operand (operands[2], V16QImode))))
                return 8081; /* *xnorv16qi3 */
              break;

            case E_V32HImode:
              if (pattern809 (x3, 
E_V32HImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V32HImode)
       || register_operand (operands[2], V32HImode))) && 
#line 571 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)))
                return 8082; /* *xnorv32hi3 */
              break;

            case E_V16HImode:
              if (pattern809 (x3, 
E_V16HImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V16HImode)
       || register_operand (operands[2], V16HImode))) && 
#line 571 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return 8083; /* *xnorv16hi3 */
              break;

            case E_V8HImode:
              if (pattern809 (x3, 
E_V8HImode) == 0
                  && 
#line 19003 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V8HImode)
       || register_operand (operands[2], V8HImode))))
                return 8084; /* *xnorv8hi3 */
              break;

            case E_V8SImode:
              if (pattern809 (x3, 
E_V8SImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V8SImode)
       || register_operand (operands[2], V8SImode))) && 
#line 572 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return 8085; /* *xnorv8si3 */
              break;

            case E_V4SImode:
              if (pattern809 (x3, 
E_V4SImode) == 0
                  && 
#line 19003 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V4SImode)
       || register_operand (operands[2], V4SImode))))
                return 8086; /* *xnorv4si3 */
              break;

            case E_V4DImode:
              if (pattern809 (x3, 
E_V4DImode) == 0
                  && (
#line 19003 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V4DImode)
       || register_operand (operands[2], V4DImode))) && 
#line 573 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return 8087; /* *xnorv4di3 */
              break;

            case E_V2DImode:
              if (pattern809 (x3, 
E_V2DImode) == 0
                  && 
#line 19003 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && (register_operand (operands[1], V2DImode)
       || register_operand (operands[2], V2DImode))))
                return 8088; /* *xnorv2di3 */
              break;

            default:
              break;
            }
        }
      break;

    default:
      break;
    }
  operands[1] = x3;
  switch (pattern193 ())
    {
    case 0:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return 5511; /* *avx512bw_vpternlogv32hf_0 */
      break;

    case 1:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return 5512; /* *avx512vl_vpternlogv16hf_0 */
      break;

    case 2:
      if (
#line 13760 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
        return 5513; /* *avx512fp16_vpternlogv8hf_0 */
      break;

    case 3:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return 5514; /* *avx512bw_vpternlogv32bf_0 */
      break;

    case 4:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return 5515; /* *avx512vl_vpternlogv16bf_0 */
      break;

    case 5:
      if (
#line 13760 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
        return 5516; /* *avx512vl_vpternlogv8bf_0 */
      break;

    case 6:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return 5517; /* *avx512f_vpternlogv16sf_0 */
      break;

    case 7:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return 5518; /* *avx512vl_vpternlogv8sf_0 */
      break;

    case 8:
      if (
#line 13760 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()))
        return 5519; /* *avx512vl_vpternlogv4sf_0 */
      break;

    case 9:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return 5520; /* *avx512f_vpternlogv8df_0 */
      break;

    case 10:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return 5521; /* *avx512vl_vpternlogv4df_0 */
      break;

    case 11:
      if ((
#line 13760 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return 5522; /* *avx512vl_vpternlogv2df_0 */
      break;

    default:
      break;
    }
  switch (GET_CODE (x3))
    {
    case AND:
      return recog_314 (x1, insn, pnum_clobbers);

    case IOR:
      return recog_313 (x1, insn, pnum_clobbers);

    case XOR:
      return recog_312 (x1, insn, pnum_clobbers);

    default:
      return -1;
    }
}

 int
recog_358 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
    case MEM:
      res = recog_356 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      break;

    case STRICT_LOW_PART:
      x4 = XVECEXP (x1, 0, 1);
      if (pattern229 (x4, 
E_CCmode, 
17) == 0)
        {
          x5 = XEXP (x3, 0);
          operands[0] = x5;
          x6 = XEXP (x2, 1);
          operands[1] = x6;
          switch (GET_MODE (operands[0]))
            {
            case E_QImode:
              if (register_operand (operands[0], E_QImode)
                  && const0_operand (operands[1], E_QImode)
                  && 
#line 3450 "../../src/gcc/config/i386/i386.md"
(reload_completed))
                return 113; /* *movstrictqi_xor */
              break;

            case E_HImode:
              if (register_operand (operands[0], E_HImode)
                  && const0_operand (operands[1], E_HImode)
                  && 
#line 3450 "../../src/gcc/config/i386/i386.md"
(reload_completed))
                return 114; /* *movstricthi_xor */
              break;

            default:
              break;
            }
        }
      break;

    case PC:
      res = recog_357 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      break;

    default:
      break;
    }
  x4 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x4) != CLOBBER)
    return -1;
  x7 = XEXP (x4, 0);
  if (GET_CODE (x7) != REG
      || REGNO (x7) != 17
      || GET_MODE (x7) != E_CCmode)
    return -1;
  x6 = XEXP (x2, 1);
  switch (GET_CODE (x6))
    {
    case SUBREG:
      if (maybe_ne (SUBREG_BYTE (x6), 0))
        return -1;
      switch (pattern1037 (x2))
        {
        case 0:
          x8 = XEXP (x6, 0);
          x9 = XEXP (x8, 1);
          operands[2] = x9;
          if (general_operand (operands[2], E_QImode))
            {
              switch (pattern1035 (x2))
                {
                case 0:
                  return 333; /* *addqi_exthi_1 */

                case 1:
                  return 334; /* *addqi_extsi_1 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 335; /* *addqi_extdi_1 */
                  break;

                default:
                  break;
                }
            }
          if (GET_CODE (x9) != SUBREG)
            return -1;
          switch (pattern1822 (x2))
            {
            case 0:
              return 336; /* *addqi_exthi_2 */

            case 1:
              return 338; /* *addqi_extsi_2 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 340; /* *addqi_extdi_2 */

            default:
              return -1;
            }

        case 1:
          x8 = XEXP (x6, 0);
          x9 = XEXP (x8, 1);
          if (GET_CODE (x9) == SUBREG)
            {
              switch (pattern1822 (x2))
                {
                case 0:
                  return 337; /* *subqi_exthi_2 */

                case 1:
                  return 339; /* *subqi_extsi_2 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 341; /* *subqi_extdi_2 */
                  break;

                default:
                  break;
                }
            }
          operands[2] = x9;
          if (!general_operand (operands[2], E_QImode))
            return -1;
          switch (pattern1035 (x2))
            {
            case 0:
              return 422; /* *subqi_exthi_1 */

            case 1:
              return 423; /* *subqi_extsi_1 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 424; /* *subqi_extdi_1 */

            default:
              return -1;
            }

        case 2:
          x8 = XEXP (x6, 0);
          x9 = XEXP (x8, 1);
          operands[2] = x9;
          if (general_operand (operands[2], E_QImode))
            {
              switch (pattern1035 (x2))
                {
                case 0:
                  return 773; /* *andqi_exthi_1 */

                case 1:
                  return 776; /* *andqi_extsi_1 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 779; /* *andqi_extdi_1 */
                  break;

                default:
                  break;
                }
            }
          if (GET_CODE (x9) != SUBREG)
            return -1;
          switch (pattern1822 (x2))
            {
            case 0:
              return 791; /* *andqi_exthi_2 */

            case 1:
              return 794; /* *andqi_extsi_2 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 797; /* *andqi_extdi_2 */

            default:
              return -1;
            }

        case 3:
          x8 = XEXP (x6, 0);
          x9 = XEXP (x8, 1);
          operands[2] = x9;
          if (general_operand (operands[2], E_QImode))
            {
              switch (pattern1035 (x2))
                {
                case 0:
                  return 774; /* *iorqi_exthi_1 */

                case 1:
                  return 777; /* *iorqi_extsi_1 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 780; /* *iorqi_extdi_1 */
                  break;

                default:
                  break;
                }
            }
          if (GET_CODE (x9) != SUBREG)
            return -1;
          switch (pattern1822 (x2))
            {
            case 0:
              return 792; /* *iorqi_exthi_2 */

            case 1:
              return 795; /* *iorqi_extsi_2 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 798; /* *iorqi_extdi_2 */

            default:
              return -1;
            }

        case 4:
          x8 = XEXP (x6, 0);
          x9 = XEXP (x8, 1);
          operands[2] = x9;
          if (general_operand (operands[2], E_QImode))
            {
              switch (pattern1035 (x2))
                {
                case 0:
                  return 775; /* *xorqi_exthi_1 */

                case 1:
                  return 778; /* *xorqi_extsi_1 */

                case 2:
                  if (
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                    return 781; /* *xorqi_extdi_1 */
                  break;

                default:
                  break;
                }
            }
          if (GET_CODE (x9) != SUBREG)
            return -1;
          switch (pattern1822 (x2))
            {
            case 0:
              return 793; /* *xorqi_exthi_2 */

            case 1:
              return 796; /* *xorqi_extsi_2 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 799; /* *xorqi_extdi_2 */

            default:
              return -1;
            }

        case 5:
          return 988; /* *negqi_exthi_1 */

        case 6:
          return 989; /* *negqi_extsi_1 */

        case 7:
          if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return -1;
          return 990; /* *negqi_extdi_1 */

        case 8:
          return 1119; /* *ashlqi_exthi_1 */

        case 9:
          return 1120; /* *ashlqi_extsi_1 */

        case 10:
          if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return -1;
          return 1121; /* *ashlqi_extdi_1 */

        case 11:
          operands[0] = x3;
          switch (pattern1233 (x6))
            {
            case 0:
              if ((
#line 16757 "../../src/gcc/config/i386/i386.md"
(UINTVAL (operands[2]) < 4 * BITS_PER_UNIT) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1138; /* lshrdi3_doubleword_lowpart */
              break;

            case 1:
              if ((
#line 16757 "../../src/gcc/config/i386/i386.md"
(UINTVAL (operands[2]) < 8 * BITS_PER_UNIT) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1140; /* lshrti3_doubleword_lowpart */
              break;

            default:
              break;
            }
          x8 = XEXP (x6, 0);
          if (GET_MODE (x8) != E_QImode)
            return -1;
          switch (pattern1036 (x2))
            {
            case 0:
              return 1238; /* *lshrqi_exthi_1 */

            case 1:
              return 1240; /* *lshrqi_extsi_1 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 1242; /* *lshrqi_extdi_1 */

            default:
              return -1;
            }

        case 12:
          operands[0] = x3;
          switch (pattern1233 (x6))
            {
            case 0:
              if ((
#line 16757 "../../src/gcc/config/i386/i386.md"
(UINTVAL (operands[2]) < 4 * BITS_PER_UNIT) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1139; /* ashrdi3_doubleword_lowpart */
              break;

            case 1:
              if ((
#line 16757 "../../src/gcc/config/i386/i386.md"
(UINTVAL (operands[2]) < 8 * BITS_PER_UNIT) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1141; /* ashrti3_doubleword_lowpart */
              break;

            default:
              break;
            }
          x8 = XEXP (x6, 0);
          if (GET_MODE (x8) != E_QImode)
            return -1;
          switch (pattern1036 (x2))
            {
            case 0:
              return 1239; /* *ashrqi_exthi_1 */

            case 1:
              return 1241; /* *ashrqi_extsi_1 */

            case 2:
              if (!
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 1243; /* *ashrqi_extdi_1 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case CONST_INT:
      if (GET_CODE (x3) != ZERO_EXTRACT)
        return -1;
      x10 = XEXP (x3, 1);
      if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return -1;
      x5 = XEXP (x3, 0);
      operands[0] = x5;
      x11 = XEXP (x3, 2);
      operands[1] = x11;
      switch (XWINT (x6, 0))
        {
        case 0L:
          switch (GET_CODE (operands[1]))
            {
            case REG:
            case SUBREG:
              if (!register_operand (operands[1], E_QImode)
                  || GET_MODE (x3) != E_HImode)
                return -1;
              switch (GET_MODE (operands[0]))
                {
                case E_QImode:
                  if (!nonimmediate_operand (operands[0], E_QImode)
                      || !
#line 18963 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()))
                    return -1;
                  return 1411; /* *btrqi_2 */

                case E_HImode:
                  if (!nonimmediate_operand (operands[0], E_HImode)
                      || !
#line 18963 "../../src/gcc/config/i386/i386.md"
(TARGET_USE_BT && ix86_pre_reload_split ()))
                    return -1;
                  return 1412; /* *btrhi_2 */

                default:
                  return -1;
                }

            case CONST_INT:
              if (!const_0_to_63_operand (operands[1], E_QImode)
                  || GET_MODE (x3) != E_DImode
                  || !nonimmediate_operand (operands[0], E_DImode)
                  || !
#line 19027 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && (TARGET_USE_BT || reload_completed)))
                return -1;
              return 1414; /* *btrq_imm */

            default:
              return -1;
            }

        case 1L:
          if (GET_MODE (x3) != E_DImode
              || !nonimmediate_operand (operands[0], E_DImode)
              || !const_0_to_63_operand (operands[1], E_QImode)
              || !
#line 19014 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && (TARGET_USE_BT || reload_completed)))
            return -1;
          return 1413; /* *btsq_imm */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_369 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12;
  int res ATTRIBUTE_UNUSED;
  if (pattern338 (x1) != 0)
    return -1;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  x5 = XEXP (x4, 0);
  switch (GET_CODE (x5))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x5;
      x6 = XEXP (x4, 1);
      operands[2] = x6;
      switch (GET_CODE (operands[2]))
        {
        case CONST_INT:
        case CONST_WIDE_INT:
        case CONST_POLY_INT:
        case CONST_FIXED:
        case CONST_DOUBLE:
        case CONST_VECTOR:
        case CONST:
        case REG:
        case SUBREG:
        case MEM:
        case LABEL_REF:
        case SYMBOL_REF:
        case HIGH:
          switch (pattern342 (x3))
            {
            case 0:
              if (!
#line 8144 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD && true
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 393; /* *subqi_1_zexthi */

            case 1:
              if (!
#line 8144 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD && true
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 395; /* *subqi_1_zextsi */

            case 2:
              if (!
#line 8158 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD && true
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 399; /* *subhi_1_zextsi */

            case 3:
              if (!
#line 8144 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD && true
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 397; /* *subqi_1_zextdi */

            case 4:
              if (!
#line 8158 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD && true
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 401; /* *subhi_1_zextdi */

            case 5:
              if (!
#line 8173 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_binary_operator_ok (MINUS, SImode, operands, TARGET_APX_NDD)))
                return -1;
              return 402; /* *subsi_1_zext */

            default:
              return -1;
            }

        case LTU:
        case UNLT:
          switch (pattern1421 (x3))
            {
            case 0:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_operator (operands[2], E_QImode)
                  || !
#line 9440 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 505; /* *subqi3_carry_zexthi_0 */

            case 1:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_operator (operands[2], E_QImode)
                  || !
#line 9440 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 506; /* *subqi3_carry_zextsi_0 */

            case 2:
              if (!nonimmediate_operand (operands[1], E_HImode)
                  || !ix86_carry_flag_operator (operands[2], E_HImode)
                  || !
#line 9455 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 508; /* *subhi3_carry_zextsi_0 */

            case 3:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_operator (operands[2], E_QImode)
                  || !
#line 9440 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 507; /* *subqi3_carry_zextdi_0 */

            case 4:
              if (!nonimmediate_operand (operands[1], E_HImode)
                  || !ix86_carry_flag_operator (operands[2], E_HImode)
                  || !
#line 9455 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 509; /* *subhi3_carry_zextdi_0 */

            case 5:
              if (!nonimmediate_operand (operands[1], E_SImode)
                  || !ix86_carry_flag_operator (operands[2], E_SImode)
                  || !
#line 9470 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 510; /* *subsi3_carry_zext_0 */

            default:
              return -1;
            }

        case GE:
        case GEU:
          switch (pattern1421 (x3))
            {
            case 0:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_QImode)
                  || !
#line 9488 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 511; /* *subqi3_carry_zexthi_0r */

            case 1:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_QImode)
                  || !
#line 9488 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 512; /* *subqi3_carry_zextsi_0r */

            case 2:
              if (!nonimmediate_operand (operands[1], E_HImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_HImode)
                  || !
#line 9503 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 514; /* *subhi3_carry_zextsi_0r */

            case 3:
              if (!nonimmediate_operand (operands[1], E_QImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_QImode)
                  || !
#line 9488 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 513; /* *subqi3_carry_zextdi_0r */

            case 4:
              if (!nonimmediate_operand (operands[1], E_HImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_HImode)
                  || !
#line 9503 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD))
                return -1;
              return 515; /* *subhi3_carry_zextdi_0r */

            case 5:
              if (!nonimmediate_operand (operands[1], E_SImode)
                  || !ix86_carry_flag_unset_operator (operands[2], E_SImode)
                  || !
#line 9518 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                return -1;
              return 516; /* *subsi3_carry_zext_0r */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case MINUS:
      x7 = XEXP (x5, 1);
      switch (GET_CODE (x7))
        {
        case LTU:
        case UNLT:
          operands[3] = x7;
          x8 = XEXP (x7, 0);
          if (GET_CODE (x8) != REG
              || REGNO (x8) != 17)
            return -1;
          x9 = XEXP (x7, 1);
          if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
            return -1;
          x10 = XEXP (x5, 0);
          operands[1] = x10;
          x6 = XEXP (x4, 1);
          operands[2] = x6;
          switch (pattern1151 (x3))
            {
            case 0:
              if (pattern1751 (x5, 
E_QImode) != 0
                  || !
#line 9380 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 499; /* *subqi3_carry_zexthi */

            case 1:
              if (pattern1751 (x5, 
E_QImode) != 0
                  || !
#line 9380 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 500; /* *subqi3_carry_zextsi */

            case 2:
              if (pattern1751 (x5, 
E_HImode) != 0
                  || !
#line 9400 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 502; /* *subhi3_carry_zextsi */

            case 3:
              if (pattern1751 (x5, 
E_QImode) != 0
                  || !
#line 9380 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 501; /* *subqi3_carry_zextdi */

            case 4:
              if (pattern1751 (x5, 
E_HImode) != 0
                  || !
#line 9400 "../../src/gcc/config/i386/i386.md"
(TARGET_APX_NDD
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 503; /* *subhi3_carry_zextdi */

            case 5:
              if (pattern1751 (x5, 
E_SImode) != 0
                  || !
#line 9420 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_binary_operator_ok (MINUS, SImode, operands, TARGET_APX_NDD)))
                return -1;
              return 504; /* *subsi3_carry_zext */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case CONST_INT:
      if (!register_operand (operands[0], E_DImode)
          || GET_MODE (x3) != E_DImode
          || GET_MODE (x4) != E_SImode)
        return -1;
      x6 = XEXP (x4, 1);
      if (GET_MODE (x6) != E_SImode)
        return -1;
      switch (XWINT (x5, 0))
        {
        case 63L:
          if (GET_CODE (x6) != SUBREG
              || maybe_ne (SUBREG_BYTE (x6), 0))
            return -1;
          x11 = XEXP (x6, 0);
          if (GET_CODE (x11) != CLZ
              || GET_MODE (x11) != E_DImode)
            return -1;
          x12 = XEXP (x11, 0);
          operands[1] = x12;
          if (!nonimmediate_operand (operands[1], E_DImode)
              || !
#line 21250 "../../src/gcc/config/i386/i386.md"
(!TARGET_LZCNT && TARGET_64BIT))
            return -1;
          return 1526; /* bsr_rex64_1_zext */

        case 31L:
          if (GET_CODE (x6) != CLZ)
            return -1;
          x11 = XEXP (x6, 0);
          operands[1] = x11;
          if (!nonimmediate_operand (operands[1], E_SImode)
              || !
#line 21290 "../../src/gcc/config/i386/i386.md"
(!TARGET_LZCNT && TARGET_64BIT))
            return -1;
          return 1529; /* bsr_zext_1 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_378 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 1);
  if (!rtx_equal_p (x4, operands[1]))
    return -1;
  x5 = XEXP (x2, 0);
  if (GET_MODE (x5) != E_CCCmode
      || GET_MODE (x3) != E_CCCmode)
    return -1;
  x6 = XVECEXP (x1, 0, 1);
  switch (GET_CODE (x6))
    {
    case CLOBBER:
      x7 = XEXP (x6, 0);
      operands[0] = x7;
      x8 = XEXP (x3, 0);
      switch (pattern950 (x8))
        {
        case 0:
          if (!
#line 9931 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          return 534; /* *addqi3_cconly_overflow_1 */

        case 1:
          if (!
#line 9931 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          return 535; /* *addhi3_cconly_overflow_1 */

        case 2:
          if (!
#line 9931 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))))
            return -1;
          return 536; /* *addsi3_cconly_overflow_1 */

        case 3:
          if (!(
#line 9931 "../../src/gcc/config/i386/i386.md"
(!(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 537; /* *adddi3_cconly_overflow_1 */

        default:
          return -1;
        }

    case SET:
      x7 = XEXP (x6, 0);
      operands[0] = x7;
      x9 = XEXP (x6, 1);
      switch (GET_CODE (x9))
        {
        case PLUS:
          x10 = XEXP (x9, 0);
          if (!rtx_equal_p (x10, operands[1]))
            return -1;
          x11 = XEXP (x9, 1);
          if (!rtx_equal_p (x11, operands[2]))
            return -1;
          x8 = XEXP (x3, 0);
          switch (GET_MODE (x8))
            {
            case E_QImode:
              if (pattern1423 (x9, 
E_QImode) != 0
                  || !
#line 9949 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (PLUS, QImode, operands, TARGET_APX_NDD)))
                return -1;
              return 538; /* addqi3_cc_overflow_1 */

            case E_HImode:
              if (pattern1423 (x9, 
E_HImode) != 0
                  || !
#line 9949 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (PLUS, HImode, operands, TARGET_APX_NDD)))
                return -1;
              return 539; /* addhi3_cc_overflow_1 */

            case E_SImode:
              if (pattern1424 (x9, 
E_SImode) != 0
                  || !
#line 9949 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (PLUS, SImode, operands, TARGET_APX_NDD)))
                return -1;
              return 540; /* addsi3_cc_overflow_1 */

            case E_DImode:
              if (pattern1424 (x9, 
E_DImode) != 0
                  || !(
#line 9949 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (PLUS, DImode, operands, TARGET_APX_NDD)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 541; /* adddi3_cc_overflow_1 */

            case E_TImode:
              if (pattern1663 (x9, 
E_TImode) != 0
                  || !(
#line 10081 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (PLUS, TImode, operands, TARGET_APX_NDD)) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 553; /* *addti3_doubleword_cc_overflow_1 */

            default:
              return -1;
            }

        case ZERO_EXTEND:
          if (pattern1426 (x1, 
PLUS) != 0
              || !
#line 10007 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_binary_operator_ok (PLUS, SImode, operands, TARGET_APX_NDD)))
            return -1;
          return 542; /* *addsi3_zext_cc_overflow_1 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_381 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17)
    return -1;
  x4 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x4) != SET)
    return -1;
  x5 = XEXP (x2, 1);
  x6 = XEXP (x5, 0);
  x7 = XEXP (x6, 1);
  operands[2] = x7;
  x8 = XEXP (x4, 0);
  operands[0] = x8;
  x9 = XEXP (x4, 1);
  switch (GET_CODE (x9))
    {
    case AND:
      x10 = XEXP (x9, 0);
      if (!rtx_equal_p (x10, operands[1]))
        return -1;
      x11 = XEXP (x9, 1);
      if (!rtx_equal_p (x11, operands[2]))
        return -1;
      switch (GET_MODE (x6))
        {
        case E_DImode:
          if (!nonimmediate_operand (operands[1], E_DImode)
              || !x86_64_szext_general_operand (operands[2], E_DImode)
              || !nonimmediate_operand (operands[0], E_DImode)
              || GET_MODE (x9) != E_DImode
              || !
#line 12908 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_match_ccmode
	(insn,
	 /* If we are going to emit andl instead of andq, and the operands[2]
	    constant might have the SImode sign bit set, make sure the sign
	    flag isn't tested, because the instruction will set the sign flag
	    based on bit 31 rather than bit 63.  If it isn't CONST_INT,
	    conservatively assume it might have bit 31 set.  */
	 (satisfies_constraint_Z (operands[2])
	  && (!CONST_INT_P (operands[2])
	      || val_signbit_known_set_p (SImode, INTVAL (operands[2]))))
	 ? CCZmode : CCNOmode)
   && ix86_binary_operator_ok (AND, DImode, operands, TARGET_APX_NDD)))
            return -1;
          return 749; /* *anddi_2 */

        case E_QImode:
          if (pattern1423 (x9, 
E_QImode) != 0)
            return -1;
          if (
#line 12959 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, QImode, operands, TARGET_APX_NDD)
   && ix86_match_ccmode (insn,
			 CONST_INT_P (operands[2])
			 && INTVAL (operands[2]) >= 0 ? CCNOmode : CCZmode)))
            return 751; /* *andqi_2_maybe_si */
          if (!
#line 13001 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && ix86_binary_operator_ok (AND, QImode, operands, TARGET_APX_NDD)))
            return -1;
          return 752; /* *andqi_2 */

        case E_HImode:
          if (pattern1423 (x9, 
E_HImode) != 0
              || !
#line 13001 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && ix86_binary_operator_ok (AND, HImode, operands, TARGET_APX_NDD)))
            return -1;
          return 753; /* *andhi_2 */

        case E_SImode:
          if (pattern1424 (x9, 
E_SImode) != 0
              || !
#line 13001 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCNOmode)
   && ix86_binary_operator_ok (AND, SImode, operands, TARGET_APX_NDD)))
            return -1;
          return 754; /* *andsi_2 */

        default:
          return -1;
        }

    case ZERO_EXTEND:
      if (pattern1426 (x1, 
AND) != 0
          || !
#line 12941 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && ix86_match_ccmode (insn, CCNOmode)
   && ix86_binary_operator_ok (AND, SImode, operands, TARGET_APX_NDD)))
        return -1;
      return 750; /* *andsi_2_zext */

    default:
      return -1;
    }
}

 int
recog_386 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17)
    return -1;
  x4 = XEXP (x2, 1);
  x5 = XEXP (x4, 1);
  switch (GET_CODE (x5))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[1] = x5;
      x6 = XEXP (x4, 0);
      x7 = XEXP (x6, 0);
      operands[2] = x7;
      x8 = XVECEXP (x1, 0, 1);
      switch (GET_CODE (x8))
        {
        case CLOBBER:
          x9 = XEXP (x8, 0);
          operands[0] = x9;
          switch (GET_MODE (x6))
            {
            case E_QImode:
              if (!general_operand (operands[2], E_QImode)
                  || !nonimmediate_operand (operands[1], E_QImode)
                  || !scratch_operand (operands[0], E_QImode)
                  || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 314; /* *addqi_3 */

            case E_HImode:
              if (!general_operand (operands[2], E_HImode)
                  || !nonimmediate_operand (operands[1], E_HImode)
                  || !scratch_operand (operands[0], E_HImode)
                  || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 315; /* *addhi_3 */

            case E_SImode:
              if (!x86_64_general_operand (operands[2], E_SImode)
                  || !nonimmediate_operand (operands[1], E_SImode)
                  || !scratch_operand (operands[0], E_SImode)
                  || !
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))))
                return -1;
              return 316; /* *addsi_3 */

            case E_DImode:
              if (!x86_64_general_operand (operands[2], E_DImode)
                  || !nonimmediate_operand (operands[1], E_DImode)
                  || !scratch_operand (operands[0], E_DImode)
                  || !(
#line 7225 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCZmode)
   && !(MEM_P (operands[1]) && MEM_P (operands[2]))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 317; /* *adddi_3 */

            default:
              return -1;
            }

        case SET:
          x10 = XEXP (x8, 1);
          if (GET_CODE (x10) != ZERO_EXTEND
              || pattern1236 (x1, 
PLUS) != 0
              || !x86_64_general_operand (operands[2], E_SImode)
              || !nonimmediate_operand (operands[1], E_SImode))
            return -1;
          x9 = XEXP (x8, 0);
          operands[0] = x9;
          if (!register_operand (operands[0], E_DImode))
            return -1;
          x11 = XEXP (x10, 0);
          x12 = XEXP (x11, 0);
          if (!rtx_equal_p (x12, operands[1]))
            return -1;
          x13 = XEXP (x11, 1);
          if (!rtx_equal_p (x13, operands[2])
              || !
#line 7274 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && ix86_match_ccmode (insn, CCZmode)
   && ix86_binary_operator_ok (PLUS, SImode, operands, TARGET_APX_NDD)))
            return -1;
          return 318; /* *addsi_3_zext */

        default:
          return -1;
        }

    case CONST_INT:
      if (XWINT (x5, 0) != 0L)
        return -1;
      x8 = XVECEXP (x1, 0, 1);
      if (GET_CODE (x8) != SET)
        return -1;
      x6 = XEXP (x4, 0);
      x7 = XEXP (x6, 0);
      operands[1] = x7;
      x9 = XEXP (x8, 0);
      operands[0] = x9;
      x10 = XEXP (x8, 1);
      switch (GET_CODE (x10))
        {
        case NEG:
          switch (pattern1238 (x1))
            {
            case 0:
              if (!
#line 14417 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && ix86_unary_operator_ok (NEG, QImode, operands, TARGET_APX_NDD)))
                return -1;
              return 975; /* *negqi_2 */

            case 1:
              if (!
#line 14417 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && ix86_unary_operator_ok (NEG, HImode, operands, TARGET_APX_NDD)))
                return -1;
              return 976; /* *neghi_2 */

            case 2:
              if (!
#line 14417 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && ix86_unary_operator_ok (NEG, SImode, operands, TARGET_APX_NDD)))
                return -1;
              return 977; /* *negsi_2 */

            case 3:
              if (!(
#line 14417 "../../src/gcc/config/i386/i386.md"
(ix86_match_ccmode (insn, CCGOCmode)
   && ix86_unary_operator_ok (NEG, DImode, operands, TARGET_APX_NDD)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 978; /* *negdi_2 */

            default:
              return -1;
            }

        case ZERO_EXTEND:
          if (pattern1239 (x1, 
NEG) != 0
              || !
#line 14434 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && ix86_match_ccmode (insn, CCGOCmode)
   && ix86_unary_operator_ok (NEG, SImode, operands, TARGET_APX_NDD)))
            return -1;
          return 979; /* *negsi_2_zext */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_389 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case REG:
    case SUBREG:
    case MEM:
      operands[0] = x3;
      x4 = XVECEXP (x1, 0, 1);
      switch (GET_CODE (x4))
        {
        case CLOBBER:
          x5 = XEXP (x4, 0);
          if (GET_CODE (x5) != REG
              || REGNO (x5) != 17
              || GET_MODE (x5) != E_CCmode)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_DImode:
              if (!nonimmediate_operand (operands[0], E_DImode))
                return -1;
              x6 = XEXP (x2, 1);
              if (GET_MODE (x6) != E_DImode
                  || !nonimmediate_operand (operands[1], E_DImode))
                return -1;
              if (x86_64_hilo_general_operand (operands[2], E_DImode)
                  && (
#line 8069 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, SImode, operands, TARGET_APX_NDD)) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 380; /* *subdi3_doubleword */
              if (!x86_64_general_operand (operands[2], E_DImode)
                  || !(
#line 8125 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, DImode, operands, TARGET_APX_NDD)
  && true) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 391; /* *subdi_1 */

            case E_TImode:
              x6 = XEXP (x2, 1);
              if (pattern563 (x6, 
E_TImode) != 0
                  || !(
#line 8069 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, DImode, operands, TARGET_APX_NDD)) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 381; /* *subti3_doubleword */

            case E_QImode:
              x6 = XEXP (x2, 1);
              if (pattern564 (x6, 
E_QImode) != 0
                  || !
#line 8125 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, QImode, operands, TARGET_APX_NDD)
  && true))
                return -1;
              return 385; /* *subqi_1 */

            case E_HImode:
              x6 = XEXP (x2, 1);
              if (pattern564 (x6, 
E_HImode) != 0
                  || !
#line 8125 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, HImode, operands, TARGET_APX_NDD)
  && true))
                return -1;
              return 387; /* *subhi_1 */

            case E_SImode:
              x6 = XEXP (x2, 1);
              if (pattern565 (x6) != 0
                  || !
#line 8125 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (MINUS, SImode, operands, TARGET_APX_NDD)
  && true))
                return -1;
              return 389; /* *subsi_1 */

            case E_V2QImode:
              x6 = XEXP (x2, 1);
              if (pattern567 (x6, 
E_V2QImode) != 0
                  || !
#line 3241 "../../src/gcc/config/i386/mmx.md"
(!TARGET_PARTIAL_REG_STALL || optimize_size || TARGET_SSE2))
                return -1;
              return 2137; /* subv2qi3 */

            default:
              return -1;
            }

        case UNSPEC:
          if (pattern211 (x1) != 0
              || !
#line 773 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW && !(MEM_P (operands[0]) && MEM_P (operands[1]))))
            return -1;
          return 2053; /* *mmx_subv2sf3 */

        default:
          return -1;
        }

    case STRICT_LOW_PART:
      x4 = XVECEXP (x1, 0, 1);
      if (pattern229 (x4, 
E_CCmode, 
17) != 0)
        return -1;
      switch (pattern1325 (x2))
        {
        case 0:
          if (!
#line 8189 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
            return -1;
          return 403; /* *subqi_1_slp */

        case 1:
          if (!
#line 8189 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
            return -1;
          return 404; /* *subhi_1_slp */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_393 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case NE:
    case EQ:
      if (bt_comparison_operator (x4, E_VOIDmode))
        {
          res = recog_392 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
        }
      if (GET_CODE (x4) != NE)
        return -1;
      x5 = XEXP (x4, 1);
      if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x6 = XEXP (x4, 0);
      switch (GET_CODE (x6))
        {
        case REG:
        case SUBREG:
          operands[2] = x6;
          if (!register_operand (operands[2], E_QImode))
            return -1;
          x7 = XEXP (x3, 1);
          if (GET_CODE (x7) != ZERO_EXTRACT)
            return -1;
          x8 = XEXP (x7, 1);
          if (GET_CODE (x8) != UMIN
              || GET_MODE (x8) != E_QImode)
            return -1;
          x9 = XEXP (x7, 2);
          if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
            return -1;
          x10 = XEXP (x3, 2);
          if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 0]
              || pattern338 (x1) != 0
              || GET_MODE (x4) != E_QImode)
            return -1;
          x11 = XEXP (x7, 0);
          operands[1] = x11;
          x12 = XEXP (x8, 1);
          operands[3] = x12;
          if (!const_int_operand (operands[3], E_QImode))
            return -1;
          x13 = XEXP (x8, 0);
          if (!rtx_equal_p (x13, operands[2]))
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_SImode:
              if (pattern1429 (x3, 
E_SImode) != 0
                  || !
#line 22036 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI2 && INTVAL (operands[3]) == 4 * BITS_PER_UNIT))
                return -1;
              return 1590; /* *bmi2_bzhi_si3 */

            case E_DImode:
              if (pattern1429 (x3, 
E_DImode) != 0
                  || !(
#line 22036 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI2 && INTVAL (operands[3]) == 8 * BITS_PER_UNIT) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 1591; /* *bmi2_bzhi_di3 */

            default:
              return -1;
            }

        case UNSPEC:
          if (XVECLEN (x6, 0) != 1
              || XINT (x6, 1) != 35)
            return -1;
          x14 = XVECEXP (x6, 0, 0);
          if (x14 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
            return -1;
          x7 = XEXP (x3, 1);
          if (GET_CODE (x7) != LABEL_REF)
            return -1;
          x10 = XEXP (x3, 2);
          if (GET_CODE (x10) != PC)
            return -1;
          x15 = XEXP (x2, 0);
          if (GET_CODE (x15) != PC)
            return -1;
          x16 = XVECEXP (x1, 0, 1);
          if (GET_CODE (x16) != SET)
            return -1;
          x17 = XEXP (x16, 1);
          if (pattern813 (x17, 
E_SImode, 
46, 
1, 
UNSPEC_VOLATILE) != 0)
            return -1;
          x11 = XEXP (x7, 0);
          operands[1] = x11;
          x18 = XEXP (x16, 0);
          operands[0] = x18;
          if (!register_operand (operands[0], E_SImode))
            return -1;
          x19 = XVECEXP (x17, 0, 0);
          if (!rtx_equal_p (x19, operands[0])
              || !
#line 29624 "../../src/gcc/config/i386/i386.md"
(TARGET_RTM))
            return -1;
          return 1969; /* xbegin_1 */

        default:
          return -1;
        }

    case LTU:
    case UNLT:
      operands[1] = x4;
      if (!ix86_carry_flag_operator (operands[1], E_VOIDmode))
        return -1;
      x6 = XEXP (x4, 0);
      if (GET_CODE (x6) != REG
          || REGNO (x6) != 17)
        return -1;
      x5 = XEXP (x4, 1);
      if (x5 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x7 = XEXP (x3, 1);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + -1])
        return -1;
      x10 = XEXP (x3, 2);
      if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 0]
          || pattern338 (x1) != 0)
        return -1;
      switch (pattern1568 (x3))
        {
        case 0:
          return 1795; /* *x86_movsicc_0_m1 */

        case 1:
          if (!
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return -1;
          return 1796; /* *x86_movdicc_0_m1 */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_397 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  int res ATTRIBUTE_UNUSED;
  switch (pattern557 (x1))
    {
    case 0:
      x2 = XVECEXP (x1, 0, 1);
      x3 = XEXP (x2, 0);
      if (GET_CODE (x3) != REG
          || REGNO (x3) != 17
          || GET_MODE (x3) != E_CCmode)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_DImode:
          if (!nonimmediate_operand (operands[0], E_DImode))
            return -1;
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (GET_MODE (x5) != E_DImode
              || !nonimmediate_operand (operands[1], E_DImode))
            return -1;
          if (x86_64_hilo_general_operand (operands[2], E_DImode)
              && (
#line 12501 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, DImode, operands, TARGET_APX_NDD)) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
            return 703; /* *anddi3_doubleword */
          if (x86_64_szext_general_operand (operands[2], E_DImode)
              && 
#line 12543 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && ix86_binary_operator_ok (AND, DImode, operands, TARGET_APX_NDD)
   && true))
            return 706; /* *anddi_1 */
          if (!const_int_operand (operands[2], E_DImode)
              || !
#line 12576 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT && TARGET_USE_BT
   && ix86_binary_operator_ok (AND, DImode, operands)
   && IN_RANGE (exact_log2 (~INTVAL (operands[2])), 31, 63)))
            return -1;
          return 707; /* *anddi_1_btr */

        case E_TImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern563 (x5, 
E_TImode) != 0
              || !(
#line 12501 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, TImode, operands, TARGET_APX_NDD)) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 704; /* *andti3_doubleword */

        case E_HImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern564 (x5, 
E_HImode) != 0
              || !
#line 12671 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, HImode, operands, TARGET_APX_NDD)
   && true))
            return -1;
          return 720; /* *andhi_1 */

        case E_SImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern565 (x5) != 0
              || !
#line 12671 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, SImode, operands, TARGET_APX_NDD)
   && true))
            return -1;
          return 722; /* *andsi_1 */

        case E_QImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern564 (x5, 
E_QImode) != 0
              || !
#line 12709 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (AND, QImode, operands, TARGET_APX_NDD)
   && true))
            return -1;
          return 724; /* *andqi_1 */

        case E_V4QImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern566 (x5, 
E_V4QImode) != 0
              || !
#line 4713 "../../src/gcc/config/i386/mmx.md"
(ix86_binary_operator_ok (AND, V4QImode, operands)))
            return -1;
          return 2283; /* *andv4qi3 */

        case E_V2QImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern566 (x5, 
E_V2QImode) != 0
              || !
#line 4713 "../../src/gcc/config/i386/mmx.md"
(ix86_binary_operator_ok (AND, V2QImode, operands)))
            return -1;
          return 2286; /* *andv2qi3 */

        case E_V2HImode:
          x4 = XVECEXP (x1, 0, 0);
          x5 = XEXP (x4, 1);
          if (pattern566 (x5, 
E_V2HImode) != 0
              || !
#line 4713 "../../src/gcc/config/i386/mmx.md"
(ix86_binary_operator_ok (AND, V2HImode, operands)))
            return -1;
          return 2289; /* *andv2hi3 */

        default:
          return -1;
        }

    case 1:
      switch (pattern568 (x1))
        {
        case 0:
          if (!
#line 2093 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
            return -1;
          return 2572; /* kandqi */

        case 1:
          if (!
#line 2093 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F))
            return -1;
          return 2575; /* kandhi */

        case 2:
          if (!(
#line 2093 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 2074 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW)))
            return -1;
          return 2578; /* kandsi */

        case 3:
          if (!(
#line 2093 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 2074 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW)))
            return -1;
          return 2581; /* kanddi */

        default:
          return -1;
        }

    case 2:
      if (!
#line 12741 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
        return -1;
      return 725; /* *andqi_1_slp */

    case 3:
      if (!
#line 12741 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
        return -1;
      return 728; /* *andhi_1_slp */

    default:
      return -1;
    }
}

 int
recog_402 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
      switch (pattern375 (x1))
        {
        case 0:
          x5 = XVECEXP (x1, 0, 1);
          x6 = XEXP (x5, 0);
          if (GET_CODE (x6) != REG
              || REGNO (x6) != 17
              || GET_MODE (x6) != E_CCmode)
            return -1;
          switch (GET_MODE (operands[0]))
            {
            case E_DImode:
              if (!nonimmediate_operand (operands[0], E_DImode)
                  || GET_MODE (x3) != E_DImode
                  || !nonimmediate_operand (operands[1], E_DImode))
                return -1;
              if ((
#line 14237 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, DImode, operands, TARGET_APX_NDD)) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 952; /* *negdi2_doubleword */
              if (!(
#line 14346 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, DImode, operands, TARGET_APX_NDD)
   && true) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 961; /* *negdi_1 */

            case E_TImode:
              if (!nonimmediate_operand (operands[0], E_TImode)
                  || GET_MODE (x3) != E_TImode
                  || !nonimmediate_operand (operands[1], E_TImode)
                  || !(
#line 14237 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, TImode, operands, TARGET_APX_NDD)) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return -1;
              return 953; /* *negti2_doubleword */

            case E_QImode:
              if (!nonimmediate_operand (operands[0], E_QImode)
                  || GET_MODE (x3) != E_QImode
                  || !nonimmediate_operand (operands[1], E_QImode)
                  || !
#line 14346 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, QImode, operands, TARGET_APX_NDD)
   && true))
                return -1;
              return 955; /* *negqi_1 */

            case E_HImode:
              if (!nonimmediate_operand (operands[0], E_HImode)
                  || GET_MODE (x3) != E_HImode
                  || !nonimmediate_operand (operands[1], E_HImode)
                  || !
#line 14346 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, HImode, operands, TARGET_APX_NDD)
   && true))
                return -1;
              return 957; /* *neghi_1 */

            case E_SImode:
              if (!nonimmediate_operand (operands[0], E_SImode)
                  || GET_MODE (x3) != E_SImode
                  || !nonimmediate_operand (operands[1], E_SImode)
                  || !
#line 14346 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, SImode, operands, TARGET_APX_NDD)
   && true))
                return -1;
              return 959; /* *negsi_1 */

            case E_SFmode:
              if (!register_operand (operands[0], E_SFmode)
                  || GET_MODE (x3) != E_SFmode
                  || !register_operand (operands[1], E_SFmode)
                  || !
#line 14810 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && !(SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH)))
                return -1;
              return 1011; /* *negsf2_i387_1 */

            case E_DFmode:
              if (!register_operand (operands[0], E_DFmode)
                  || GET_MODE (x3) != E_DFmode
                  || !register_operand (operands[1], E_DFmode)
                  || !
#line 14810 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && !(SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH)))
                return -1;
              return 1013; /* *negdf2_i387_1 */

            case E_XFmode:
              if (!register_operand (operands[0], E_XFmode)
                  || GET_MODE (x3) != E_XFmode
                  || !register_operand (operands[1], E_XFmode)
                  || !
#line 14810 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && !(SSE_FLOAT_MODE_P (XFmode) && TARGET_SSE_MATH)))
                return -1;
              return 1015; /* *negxf2_i387_1 */

            case E_V2QImode:
              if (!register_operand (operands[0], E_V2QImode)
                  || GET_MODE (x3) != E_V2QImode
                  || !register_operand (operands[1], E_V2QImode)
                  || !
#line 3134 "../../src/gcc/config/i386/mmx.md"
(!TARGET_PARTIAL_REG_STALL || optimize_size || TARGET_SSE2))
                return -1;
              return 2123; /* negv2qi2 */

            default:
              return -1;
            }

        case 1:
          switch (pattern698 (x1, pnum_clobbers))
            {
            case 0:
              if (!
#line 14748 "../../src/gcc/config/i386/i386.md"
(TARGET_SSE))
                return -1;
              return 1008; /* *negtf2_1 */

            case 1:
              if (!
#line 14834 "../../src/gcc/config/i386/i386.md"
(TARGET_AVX512FP16))
                return -1;
              *pnum_clobbers = 1;
              return 1017; /* *neghf2_1 */

            case 2:
              if (!
#line 14850 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 || (SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH)))
                return -1;
              *pnum_clobbers = 1;
              return 1019; /* *negsf2_1 */

            case 3:
              if (!
#line 14850 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 || (SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH)))
                return -1;
              *pnum_clobbers = 1;
              return 1021; /* *negdf2_1 */

            case 4:
              if (!
#line 683 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE))
                return -1;
              return 2050; /* *mmx_negv2sf2 */

            case 5:
              if (!
#line 2239 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE))
                return -1;
              return 2096; /* *mmx_negv2bf */

            case 6:
              if (!(
#line 2239 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE) && 
#line 2224 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE)))
                return -1;
              return 2098; /* *mmx_negv4bf */

            case 7:
              if (!
#line 2239 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE))
                return -1;
              return 2100; /* *mmx_negv2hf */

            case 8:
              if (!(
#line 2239 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE) && 
#line 2225 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE)))
                return -1;
              return 2102; /* *mmx_negv4hf */

            case 9:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 411 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2654; /* *negv32bf2 */

            case 10:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 412 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2656; /* *negv16bf2 */

            case 11:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 412 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2658; /* *negv8bf2 */

            case 12:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 413 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2660; /* *negv32hf2 */

            case 13:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 414 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2662; /* *negv16hf2 */

            case 14:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 414 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2664; /* *negv8hf2 */

            case 15:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 415 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2666; /* *negv16sf2 */

            case 16:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 415 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2668; /* *negv8sf2 */

            case 17:
              if (!
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
                return -1;
              return 2670; /* *negv4sf2 */

            case 18:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 416 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2672; /* *negv8df2 */

            case 19:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 417 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2674; /* *negv4df2 */

            case 20:
              if (!(
#line 2585 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 417 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2676; /* *negv2df2 */

            default:
              return -1;
            }

        case 2:
          if (!
#line 14395 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
            return -1;
          return 973; /* *negqi_1_slp */

        case 3:
          if (!
#line 14395 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
            return -1;
          return 974; /* *neghi_1_slp */

        default:
          return -1;
        }

    case ABS:
      switch (pattern377 (x1))
        {
        case 0:
          if ((
#line 14644 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
            return 997; /* *nabsdi2_doubleword */
          if (!(
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 1006; /* *nabsdi2_1 */

        case 1:
          if (!(
#line 14644 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return -1;
          return 998; /* *nabsti2_doubleword */

        case 2:
          if (!
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
            return -1;
          return 1003; /* *nabsqi2_1 */

        case 3:
          if (!
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
            return -1;
          return 1004; /* *nabshi2_1 */

        case 4:
          if (!
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
            return -1;
          return 1005; /* *nabssi2_1 */

        case 5:
          switch (GET_MODE (operands[0]))
            {
            case E_TFmode:
              if (pattern1050 (x3, 
E_TFmode) != 0
                  || !
#line 14773 "../../src/gcc/config/i386/i386.md"
(TARGET_SSE))
                return -1;
              return 1009; /* *nabstf2_1 */

            case E_SFmode:
              if (pattern1051 (x3, 
E_V4SFmode, 
E_SFmode) != 0
                  || !
#line 14909 "../../src/gcc/config/i386/i386.md"
(SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH))
                return -1;
              return 1022; /* *nabssf2_1 */

            case E_DFmode:
              if (pattern1051 (x3, 
E_V2DFmode, 
E_DFmode) != 0
                  || !
#line 14909 "../../src/gcc/config/i386/i386.md"
(SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH))
                return -1;
              return 1023; /* *nabsdf2_1 */

            case E_V2SFmode:
              if (pattern1052 (x3) != 0
                  || !
#line 700 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE))
                return -1;
              return 2051; /* *mmx_nabsv2sf2 */

            case E_V2BFmode:
              if (pattern1053 (x3, 
E_V2BFmode) != 0
                  || !
#line 2256 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE))
                return -1;
              return 2103; /* *mmx_nabsv2bf2 */

            case E_V4BFmode:
              if (pattern1053 (x3, 
E_V4BFmode) != 0
                  || !(
#line 2256 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE) && 
#line 2224 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE)))
                return -1;
              return 2104; /* *mmx_nabsv4bf2 */

            case E_V2HFmode:
              if (pattern1053 (x3, 
E_V2HFmode) != 0
                  || !
#line 2256 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE))
                return -1;
              return 2105; /* *mmx_nabsv2hf2 */

            case E_V4HFmode:
              if (pattern1053 (x3, 
E_V4HFmode) != 0
                  || !(
#line 2256 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE) && 
#line 2225 "../../src/gcc/config/i386/mmx.md"
(TARGET_MMX_WITH_SSE)))
                return -1;
              return 2106; /* *mmx_nabsv4hf2 */

            case E_V16SFmode:
              if (pattern1050 (x3, 
E_V16SFmode) != 0
                  || !(
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 374 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2677; /* *nabsv16sf2 */

            case E_V8SFmode:
              if (pattern1050 (x3, 
E_V8SFmode) != 0
                  || !(
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 374 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2678; /* *nabsv8sf2 */

            case E_V4SFmode:
              if (pattern1050 (x3, 
E_V4SFmode) != 0
                  || !
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE))
                return -1;
              return 2679; /* *nabsv4sf2 */

            case E_V8DFmode:
              if (pattern1050 (x3, 
E_V8DFmode) != 0
                  || !(
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 375 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                return -1;
              return 2680; /* *nabsv8df2 */

            case E_V4DFmode:
              if (pattern1050 (x3, 
E_V4DFmode) != 0
                  || !(
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 375 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
                return -1;
              return 2681; /* *nabsv4df2 */

            case E_V2DFmode:
              if (pattern1050 (x3, 
E_V2DFmode) != 0
                  || !(
#line 2610 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 376 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
                return -1;
              return 2682; /* *nabsv2df2 */

            default:
              return -1;
            }

        default:
          return -1;
        }

    case LTU:
    case UNLT:
      operands[1] = x4;
      if (pattern571 (operands[1]) != 0
          || pattern338 (x1) != 0)
        return -1;
      switch (GET_MODE (operands[0]))
        {
        case E_QImode:
          if (!register_operand (operands[0], E_QImode)
              || GET_MODE (x3) != E_QImode)
            return -1;
          return 1799; /* *x86_movqicc_0_m1_neg */

        case E_HImode:
          if (!register_operand (operands[0], E_HImode)
              || GET_MODE (x3) != E_HImode)
            return -1;
          return 1800; /* *x86_movhicc_0_m1_neg */

        case E_SImode:
          if (!register_operand (operands[0], E_SImode)
              || GET_MODE (x3) != E_SImode)
            return -1;
          return 1801; /* *x86_movsicc_0_m1_neg */

        case E_DImode:
          if (!register_operand (operands[0], E_DImode)
              || GET_MODE (x3) != E_DImode
              || !
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return -1;
          return 1802; /* *x86_movdicc_0_m1_neg */

        default:
          return -1;
        }

    default:
      return -1;
    }
}

 int
recog_421 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pnum_clobbers ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13;
  int res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  switch (GET_CODE (x2))
    {
    case SET:
      x3 = XEXP (x2, 1);
      switch (GET_CODE (x3))
        {
        case CONST_INT:
        case CONST_WIDE_INT:
        case CONST_POLY_INT:
        case CONST_FIXED:
        case CONST_DOUBLE:
        case CONST_VECTOR:
        case CONST:
        case REG:
        case SUBREG:
        case MEM:
        case LABEL_REF:
        case SYMBOL_REF:
        case HIGH:
          res = recog_358 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case SIGN_EXTRACT:
        case ZERO_EXTRACT:
          res = recog_360 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case UNSPEC:
          res = recog_366 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case ZERO_EXTEND:
          res = recog_370 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case UNSIGNED_FIX:
          res = recog_371 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case FIX:
          res = recog_372 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case FLOAT:
          res = recog_373 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case UNSIGNED_FLOAT:
          res = recog_374 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case PLUS:
          res = recog_376 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case COMPARE:
          res = recog_387 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case NE:
        case EQ:
        case GE:
        case GT:
        case LE:
        case LT:
        case LTGT:
        case GEU:
        case GTU:
        case LEU:
        case LTU:
        case UNORDERED:
        case ORDERED:
        case UNEQ:
        case UNGE:
        case UNGT:
        case UNLE:
        case UNLT:
          switch (GET_CODE (x3))
            {
            case NE:
            case EQ:
              if (GET_CODE (x3) == EQ)
                {
                  res = recog_388 (x1, insn, pnum_clobbers);
                  if (res >= 0)
                    return res;
                }
              operands[1] = x3;
              switch (pattern559 (x1))
                {
                case 0:
                  if ((
#line 2383 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1555 "../../src/gcc/config/i386/i386.md"
(TARGET_AVX512DQ)))
                    return 2626; /* *kortest_cmpqi_setcc */
                  break;

                case 1:
                  if (
#line 2383 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW))
                    return 2627; /* *kortest_cmphi_setcc */
                  break;

                case 2:
                  if (
#line 2383 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW))
                    return 2628; /* *kortest_cmpsi_setcc */
                  break;

                case 3:
                  if ((
#line 2383 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW) && 
#line 1556 "../../src/gcc/config/i386/i386.md"
(TARGET_AVX512BW && TARGET_64BIT)))
                    return 2629; /* *kortest_cmpdi_setcc */
                  break;

                default:
                  break;
                }
              break;

            case GT:
              if (pattern366 (x1) == 0
                  && 
#line 1214 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW))
                return 2070; /* mmx_gtv2sf3 */
              break;

            case GE:
              if (pattern366 (x1) == 0
                  && 
#line 1225 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW))
                return 2071; /* mmx_gev2sf3 */
              break;

            default:
              break;
            }
          operands[1] = x3;
          switch (pattern367 (x1))
            {
            case 0:
              if (
#line 19497 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL
   && TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun)))
                return 1448; /* *setcc_hi_1_and */
              break;

            case 1:
              if (
#line 19497 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL
   && TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun)))
                return 1449; /* *setcc_si_1_and */
              break;

            default:
              break;
            }
          break;

        case MINUS:
          res = recog_391 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case IF_THEN_ELSE:
          res = recog_393 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case MULT:
          res = recog_394 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case DIV:
          if (pnum_clobbers != NULL)
            {
              switch (pattern217 (x1))
                {
                case 0:
                  switch (GET_MODE (operands[0]))
                    {
                    case E_HImode:
                      if (pattern388 (x1, 
E_HImode) == 0
                          && 
#line 1191 "../../src/gcc/config/i386/i386.md"
(TARGET_HIMODE_MATH))
                        {
                          *pnum_clobbers = 1;
                          return 647; /* *divmodhi4 */
                        }
                      break;

                    case E_SImode:
                      if (pattern388 (x1, 
E_SImode) == 0)
                        {
                          *pnum_clobbers = 1;
                          return 648; /* *divmodsi4 */
                        }
                      break;

                    case E_DImode:
                      if (pattern388 (x1, 
E_DImode) == 0
                          && 
#line 1192 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                        {
                          *pnum_clobbers = 1;
                          return 649; /* *divmoddi4 */
                        }
                      break;

                    default:
                      break;
                    }
                  break;

                case 1:
                  if (const_int_operand (operands[2], E_SImode)
                      && pattern1495 (x1) == 0
                      && 
#line 11907 "../../src/gcc/config/i386/i386.md"
(!optimize_function_for_size_p (cfun)))
                    {
                      *pnum_clobbers = 1;
                      return 677; /* *divmodsi4_const */
                    }
                  break;

                default:
                  break;
                }
            }
          break;

        case UDIV:
          if (pnum_clobbers != NULL)
            {
              switch (pattern218 (x1))
                {
                case 0:
                  switch (GET_MODE (operands[0]))
                    {
                    case E_HImode:
                      if (pattern388 (x1, 
E_HImode) == 0
                          && 
#line 1191 "../../src/gcc/config/i386/i386.md"
(TARGET_HIMODE_MATH))
                        {
                          *pnum_clobbers = 1;
                          return 650; /* *udivmodhi4 */
                        }
                      break;

                    case E_SImode:
                      if (pattern388 (x1, 
E_SImode) == 0)
                        {
                          *pnum_clobbers = 1;
                          return 651; /* *udivmodsi4 */
                        }
                      break;

                    case E_DImode:
                      if (pattern388 (x1, 
E_DImode) == 0
                          && 
#line 1192 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
                        {
                          *pnum_clobbers = 1;
                          return 652; /* *udivmoddi4 */
                        }
                      break;

                    default:
                      break;
                    }
                  break;

                case 1:
                  switch (GET_MODE (operands[0]))
                    {
                    case E_SImode:
                      if (pattern1496 (x1, 
E_SImode) == 0
                          && 
#line 11660 "../../src/gcc/config/i386/i386.md"
(IN_RANGE (exact_log2 (UINTVAL (operands[3])), 1, 31)))
                        {
                          *pnum_clobbers = 1;
                          return 653; /* *udivmodsi4_pow2 */
                        }
                      break;

                    case E_DImode:
                      if (pattern1496 (x1, 
E_DImode) == 0
                          && (
#line 11660 "../../src/gcc/config/i386/i386.md"
(IN_RANGE (exact_log2 (UINTVAL (operands[3])), 1, 31)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        {
                          *pnum_clobbers = 1;
                          return 654; /* *udivmoddi4_pow2 */
                        }
                      break;

                    default:
                      break;
                    }
                  break;

                default:
                  break;
                }
            }
          break;

        case IOR:
          res = recog_396 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case AND:
          res = recog_399 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case XOR:
          res = recog_400 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case NOT:
          res = recog_401 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case NEG:
          res = recog_402 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case ABS:
          res = recog_403 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case ASHIFT:
          res = recog_404 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case LSHIFTRT:
          res = recog_405 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case ASHIFTRT:
          res = recog_407 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case ROTATE:
          switch (pattern208 (x1))
            {
            case 0:
              x4 = XEXP (x3, 1);
              if (GET_CODE (x4) == SUBREG)
                {
                  switch (pattern1169 (x2))
                    {
                    case 0:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (QImode)-1))
      == GET_MODE_BITSIZE (QImode)-1
   && ix86_pre_reload_split ()))
                        return 1284; /* *rotlqi3_mask */
                      break;

                    case 1:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (HImode)-1))
      == GET_MODE_BITSIZE (HImode)-1
   && ix86_pre_reload_split ()))
                        return 1286; /* *rotlhi3_mask */
                      break;

                    case 2:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (SImode)-1))
      == GET_MODE_BITSIZE (SImode)-1
   && ix86_pre_reload_split ()))
                        return 1288; /* *rotlsi3_mask */
                      break;

                    case 3:
                      if ((
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode)-1))
      == GET_MODE_BITSIZE (DImode)-1
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1290; /* *rotldi3_mask */
                      break;

                    case 4:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1300; /* *rotlqi3_add */
                      break;

                    case 5:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1302; /* *rotlhi3_add */
                      break;

                    case 6:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1304; /* *rotlsi3_add */
                      break;

                    case 7:
                      if ((
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1306; /* *rotldi3_add */
                      break;

                    case 8:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1316; /* *rotlqi3_sub */
                      break;

                    case 9:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1318; /* *rotlhi3_sub */
                      break;

                    case 10:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1320; /* *rotlsi3_sub */
                      break;

                    case 11:
                      if ((
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1322; /* *rotldi3_sub */
                      break;

                    default:
                      break;
                    }
                }
              operands[2] = x4;
              switch (pattern1170 (x2))
                {
                case 0:
                  if (
#line 18478 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands, TARGET_APX_NDD)
   && true))
                    return 1343; /* *rotlsi3_1 */
                  break;

                case 1:
                  if ((
#line 18478 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands, TARGET_APX_NDD)
   && true) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return 1347; /* *rotldi3_1 */
                  break;

                case 2:
                  if (
#line 18659 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands, TARGET_APX_NDD)
   && true))
                    return 1374; /* *rotlqi3_1 */
                  break;

                case 3:
                  if (
#line 18659 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands, TARGET_APX_NDD)
   && true))
                    return 1378; /* *rotlhi3_1 */
                  break;

                case 4:
                  if (
#line 18690 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                    return 1381; /* *rotlqi3_1_slp */
                  break;

                case 5:
                  if (
#line 18690 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                    return 1383; /* *rotlhi3_1_slp */
                  break;

                default:
                  break;
                }
              break;

            case 1:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (QImode)-1))
      == GET_MODE_BITSIZE (QImode)-1
   && ix86_pre_reload_split ()))
                return 1292; /* *rotlqi3_mask_1 */
              break;

            case 2:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (HImode)-1))
      == GET_MODE_BITSIZE (HImode)-1
   && ix86_pre_reload_split ()))
                return 1294; /* *rotlhi3_mask_1 */
              break;

            case 3:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (SImode)-1))
      == GET_MODE_BITSIZE (SImode)-1
   && ix86_pre_reload_split ()))
                return 1296; /* *rotlsi3_mask_1 */
              break;

            case 4:
              if ((
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode)-1))
      == GET_MODE_BITSIZE (DImode)-1
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1298; /* *rotldi3_mask_1 */
              break;

            case 5:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1308; /* *rotlqi3_add_1 */
              break;

            case 6:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1310; /* *rotlhi3_add_1 */
              break;

            case 7:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1312; /* *rotlsi3_add_1 */
              break;

            case 8:
              if ((
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1314; /* *rotldi3_add_1 */
              break;

            case 9:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1324; /* *rotlqi3_sub_1 */
              break;

            case 10:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1326; /* *rotlhi3_sub_1 */
              break;

            case 11:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1328; /* *rotlsi3_sub_1 */
              break;

            case 12:
              if ((
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATE, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1330; /* *rotldi3_sub_1 */
              break;

            default:
              break;
            }
          break;

        case ROTATERT:
          switch (pattern208 (x1))
            {
            case 0:
              x4 = XEXP (x3, 1);
              if (GET_CODE (x4) == SUBREG)
                {
                  switch (pattern1169 (x2))
                    {
                    case 0:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (QImode)-1))
      == GET_MODE_BITSIZE (QImode)-1
   && ix86_pre_reload_split ()))
                        return 1285; /* *rotrqi3_mask */
                      break;

                    case 1:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (HImode)-1))
      == GET_MODE_BITSIZE (HImode)-1
   && ix86_pre_reload_split ()))
                        return 1287; /* *rotrhi3_mask */
                      break;

                    case 2:
                      if (
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (SImode)-1))
      == GET_MODE_BITSIZE (SImode)-1
   && ix86_pre_reload_split ()))
                        return 1289; /* *rotrsi3_mask */
                      break;

                    case 3:
                      if ((
#line 18142 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode)-1))
      == GET_MODE_BITSIZE (DImode)-1
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1291; /* *rotrdi3_mask */
                      break;

                    case 4:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1301; /* *rotrqi3_add */
                      break;

                    case 5:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1303; /* *rotrhi3_add */
                      break;

                    case 6:
                      if (
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1305; /* *rotrsi3_add */
                      break;

                    case 7:
                      if ((
#line 18217 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1307; /* *rotrdi3_add */
                      break;

                    case 8:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1317; /* *rotrqi3_sub */
                      break;

                    case 9:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1319; /* *rotrhi3_sub */
                      break;

                    case 10:
                      if (
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                        return 1321; /* *rotrsi3_sub */
                      break;

                    case 11:
                      if ((
#line 18286 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        return 1323; /* *rotrdi3_sub */
                      break;

                    default:
                      break;
                    }
                }
              operands[2] = x4;
              switch (pattern1170 (x2))
                {
                case 0:
                  if (
#line 18478 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands, TARGET_APX_NDD)
   && true))
                    return 1345; /* *rotrsi3_1 */
                  break;

                case 1:
                  if ((
#line 18478 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands, TARGET_APX_NDD)
   && true) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    return 1349; /* *rotrdi3_1 */
                  break;

                case 2:
                  if (
#line 18659 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands, TARGET_APX_NDD)
   && true))
                    return 1376; /* *rotrqi3_1 */
                  break;

                case 3:
                  if (
#line 18659 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands, TARGET_APX_NDD)
   && true))
                    return 1380; /* *rotrhi3_1 */
                  break;

                case 4:
                  if (
#line 18690 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                    return 1382; /* *rotrqi3_1_slp */
                  break;

                case 5:
                  if (
#line 18690 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)))
                    return 1384; /* *rotrhi3_1_slp */
                  break;

                default:
                  break;
                }
              break;

            case 1:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (QImode)-1))
      == GET_MODE_BITSIZE (QImode)-1
   && ix86_pre_reload_split ()))
                return 1293; /* *rotrqi3_mask_1 */
              break;

            case 2:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (HImode)-1))
      == GET_MODE_BITSIZE (HImode)-1
   && ix86_pre_reload_split ()))
                return 1295; /* *rotrhi3_mask_1 */
              break;

            case 3:
              if (
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (SImode)-1))
      == GET_MODE_BITSIZE (SImode)-1
   && ix86_pre_reload_split ()))
                return 1297; /* *rotrsi3_mask_1 */
              break;

            case 4:
              if ((
#line 18182 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (DImode)-1))
      == GET_MODE_BITSIZE (DImode)-1
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1299; /* *rotrdi3_mask_1 */
              break;

            case 5:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1309; /* *rotrqi3_add_1 */
              break;

            case 6:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1311; /* *rotrhi3_add_1 */
              break;

            case 7:
              if (
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1313; /* *rotrsi3_add_1 */
              break;

            case 8:
              if ((
#line 18253 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1315; /* *rotrdi3_add_1 */
              break;

            case 9:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, QImode, operands)
   && (INTVAL (operands[3]) & (1 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1325; /* *rotrqi3_sub_1 */
              break;

            case 10:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, HImode, operands)
   && (INTVAL (operands[3]) & (2 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1327; /* *rotrhi3_sub_1 */
              break;

            case 11:
              if (
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()))
                return 1329; /* *rotrsi3_sub_1 */
              break;

            case 12:
              if ((
#line 18322 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (ROTATERT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1331; /* *rotrdi3_sub_1 */
              break;

            default:
              break;
            }
          break;

        case CALL:
          res = recog_410 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case CTZ:
          res = recog_411 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case SIGN_EXTEND:
          res = recog_412 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case CLZ:
          res = recog_413 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case POPCOUNT:
          res = recog_414 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case SMAX:
          switch (pattern212 (x1))
            {
            case 0:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1831; /* *smaxdi3_doubleword */
              if ((
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1851; /* *smaxdi3_1 */
              break;

            case 1:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1835; /* *smaxti3_doubleword */
              break;

            case 2:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1839; /* *smaxqi3_1 */
              break;

            case 3:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1843; /* *smaxhi3_1 */
              break;

            case 4:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1847; /* *smaxsi3_1 */
              break;

            case 5:
              if (
#line 871 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW && ix86_binary_operator_ok (SMAX, V2SFmode, operands)))
                return 2055; /* *mmx_smaxv2sf3 */
              break;

            default:
              break;
            }
          break;

        case SMIN:
          switch (pattern212 (x1))
            {
            case 0:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1832; /* *smindi3_doubleword */
              if ((
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1852; /* *smindi3_1 */
              break;

            case 1:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1836; /* *sminti3_doubleword */
              break;

            case 2:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1840; /* *sminqi3_1 */
              break;

            case 3:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1844; /* *sminhi3_1 */
              break;

            case 4:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1848; /* *sminsi3_1 */
              break;

            case 5:
              if (
#line 871 "../../src/gcc/config/i386/mmx.md"
(TARGET_3DNOW && ix86_binary_operator_ok (SMIN, V2SFmode, operands)))
                return 2056; /* *mmx_sminv2sf3 */
              break;

            default:
              break;
            }
          break;

        case UMAX:
          switch (pattern213 (x1))
            {
            case 0:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1833; /* *umaxdi3_doubleword */
              if ((
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1853; /* *umaxdi3_1 */
              break;

            case 1:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1837; /* *umaxti3_doubleword */
              break;

            case 2:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1841; /* *umaxqi3_1 */
              break;

            case 3:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1845; /* *umaxhi3_1 */
              break;

            case 4:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1849; /* *umaxsi3_1 */
              break;

            default:
              break;
            }
          break;

        case UMIN:
          switch (pattern213 (x1))
            {
            case 0:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
                return 1834; /* *umindi3_doubleword */
              if ((
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1854; /* *umindi3_1 */
              break;

            case 1:
              if ((
#line 26900 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return 1838; /* *uminti3_doubleword */
              break;

            case 2:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1842; /* *uminqi3_1 */
              break;

            case 3:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1846; /* *uminhi3_1 */
              break;

            case 4:
              if (
#line 26958 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()))
                return 1850; /* *uminsi3_1 */
              break;

            default:
              break;
            }
          break;

        case UNSPEC_VOLATILE:
          res = recog_415 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case VEC_MERGE:
          if (pattern214 (x1) == 0
              && 
#line 8375 "../../src/gcc/config/i386/sse.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSE))
            return 4786; /* sse_cvtpi2ps */
          break;

        case VEC_CONCAT:
          res = recog_416 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case VEC_DUPLICATE:
          res = recog_417 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        case VEC_SELECT:
          res = recog_418 (x1, insn, pnum_clobbers);
          if (res >= 0)
            return res;
          break;

        default:
          break;
        }
      x5 = XVECEXP (x1, 0, 1);
      if (GET_CODE (x5) != UNSPEC
          || XVECLEN (x5, 0) != 1
          || XINT (x5, 1) != 38)
        return -1;
      return recog_419 (x1, insn, pnum_clobbers);

    case CALL:
      x6 = XEXP (x2, 0);
      if (GET_CODE (x6) != MEM
          || GET_MODE (x6) != E_QImode)
        return -1;
      x7 = XEXP (x6, 0);
      operands[0] = x7;
      res = recog_420 (x1, insn, pnum_clobbers);
      if (res >= 0)
        return res;
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x3 = XEXP (x2, 1);
      if (x3 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return -1;
      x5 = XVECEXP (x1, 0, 1);
      if (pattern381 (x5, 
104, 
1) != 0
          || !
#line 27272 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX))
        return -1;
      return 9093; /* avx_vzeroupper_callee_abi */

    case SIMPLE_RETURN:
      x5 = XVECEXP (x1, 0, 1);
      switch (GET_CODE (x5))
        {
        case UNSPEC:
          if (XVECLEN (x5, 0) != 1)
            return -1;
          x8 = XVECEXP (x5, 0, 0);
          if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
            return -1;
          switch (XINT (x5, 1))
            {
            case 101:
              if (!
#line 20635 "../../src/gcc/config/i386/i386.md"
(reload_completed))
                return -1;
              return 1490; /* interrupt_return */

            case 29:
              if (!
#line 20646 "../../src/gcc/config/i386/i386.md"
(reload_completed))
                return -1;
              return 1491; /* simple_return_internal_long */

            default:
              return -1;
            }

        case USE:
          x9 = XEXP (x5, 0);
          operands[0] = x9;
          switch (GET_CODE (operands[0]))
            {
            case CONST_INT:
              if (!const_int_operand (operands[0], E_SImode)
                  || !
#line 20657 "../../src/gcc/config/i386/i386.md"
(reload_completed))
                return -1;
              return 1492; /* simple_return_pop_internal */

            case REG:
            case SUBREG:
              switch (GET_MODE (operands[0]))
                {
                case E_SImode:
                  if (!register_operand (operands[0], E_SImode)
                      || !(
#line 20675 "../../src/gcc/config/i386/i386.md"
(reload_completed) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)))
                    return -1;
                  return 1493; /* *simple_return_indirect_internalsi */

                case E_DImode:
                  if (!register_operand (operands[0], E_DImode)
                      || !(
#line 20675 "../../src/gcc/config/i386/i386.md"
(reload_completed) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)))
                    return -1;
                  return 1494; /* *simple_return_indirect_internaldi */

                default:
                  return -1;
                }

            default:
              return -1;
            }

        default:
          return -1;
        }

    case UNSPEC_VOLATILE:
      if (XVECLEN (x2, 0) != 4
          || XINT (x2, 1) != 98
          || GET_MODE (x2) != E_V2DImode)
        return -1;
      x5 = XVECEXP (x1, 0, 1);
      if (pattern229 (x5, 
E_CCmode, 
17) != 0)
        return -1;
      x10 = XVECEXP (x2, 0, 0);
      operands[0] = x10;
      if (!register_operand (operands[0], E_V2DImode))
        return -1;
      x11 = XVECEXP (x2, 0, 1);
      operands[1] = x11;
      if (!register_operand (operands[1], E_V2DImode))
        return -1;
      x12 = XVECEXP (x2, 0, 2);
      operands[2] = x12;
      if (!register_operand (operands[2], E_V2DImode))
        return -1;
      x13 = XVECEXP (x2, 0, 3);
      operands[3] = x13;
      if (!register_operand (operands[3], E_SImode)
          || !
#line 31227 "../../src/gcc/config/i386/sse.md"
(TARGET_KL))
        return -1;
      return 10363; /* loadiwkey */

    default:
      return -1;
    }
}

 rtx_insn *
split_27 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
      switch (pattern375 (x1))
        {
        case 0:
          x5 = XVECEXP (x1, 0, 1);
          x6 = XEXP (x5, 0);
          if (GET_CODE (x6) != REG
              || REGNO (x6) != 17
              || GET_MODE (x6) != E_CCmode)
            return NULL;
          switch (GET_MODE (operands[0]))
            {
            case E_DImode:
              if (!nonimmediate_operand (operands[0], E_DImode)
                  || GET_MODE (x3) != E_DImode
                  || !nonimmediate_operand (operands[1], E_DImode)
                  || !((
#line 14237 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, DImode, operands, TARGET_APX_NDD)) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)) && 
#line 14239 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
                return NULL;
              return gen_split_490 (insn, operands);

            case E_TImode:
              if (!nonimmediate_operand (operands[0], E_TImode)
                  || GET_MODE (x3) != E_TImode
                  || !nonimmediate_operand (operands[1], E_TImode)
                  || !((
#line 14237 "../../src/gcc/config/i386/i386.md"
(ix86_unary_operator_ok (NEG, TImode, operands, TARGET_APX_NDD)) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 14239 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
                return NULL;
              return gen_split_491 (insn, operands);

            case E_SFmode:
              if (GET_MODE (x3) != E_SFmode)
                return NULL;
              if (fp_register_operand (operands[0], E_SFmode)
                  && fp_register_operand (operands[1], E_SFmode)
                  && 
#line 14817 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return gen_split_513 (insn, operands);
              if (!general_reg_operand (operands[0], E_SFmode)
                  || !general_reg_operand (operands[1], E_SFmode)
                  || !
#line 14824 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return NULL;
              return gen_split_519 (insn, operands);

            case E_DFmode:
              if (GET_MODE (x3) != E_DFmode)
                return NULL;
              if (fp_register_operand (operands[0], E_DFmode)
                  && fp_register_operand (operands[1], E_DFmode)
                  && 
#line 14817 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return gen_split_515 (insn, operands);
              if (!general_reg_operand (operands[0], E_DFmode)
                  || !general_reg_operand (operands[1], E_DFmode)
                  || !
#line 14824 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return NULL;
              return gen_split_521 (insn, operands);

            case E_XFmode:
              if (GET_MODE (x3) != E_XFmode)
                return NULL;
              if (fp_register_operand (operands[0], E_XFmode)
                  && fp_register_operand (operands[1], E_XFmode)
                  && 
#line 14817 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return gen_split_517 (insn, operands);
              if (!general_reg_operand (operands[0], E_XFmode)
                  || !general_reg_operand (operands[1], E_XFmode)
                  || !
#line 14824 "../../src/gcc/config/i386/i386.md"
(TARGET_80387 && reload_completed))
                return NULL;
              return gen_split_523 (insn, operands);

            default:
              return NULL;
            }

        case 1:
          if (pattern833 (x1) != 0
              || !(
#line 14748 "../../src/gcc/config/i386/i386.md"
(TARGET_SSE) && 
#line 14750 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
            return NULL;
          return gen_split_510 (insn, operands);

        case 2:
          if (!(
#line 14395 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 14399 "../../src/gcc/config/i386/i386.md"
( reload_completed
   && !(rtx_equal_p (operands[0], operands[1])))))
            return NULL;
          return gen_split_492 (insn, operands);

        case 3:
          if (!(
#line 14395 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 14399 "../../src/gcc/config/i386/i386.md"
( reload_completed
   && !(rtx_equal_p (operands[0], operands[1])))))
            return NULL;
          return gen_split_493 (insn, operands);

        default:
          return NULL;
        }

    case ABS:
      switch (pattern377 (x1))
        {
        case 0:
          if (((
#line 14644 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)) && 
#line 14647 "../../src/gcc/config/i386/i386.md"
( 1)))
            return gen_split_499 (insn, operands);
          if (!((
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (DImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 14719 "../../src/gcc/config/i386/i386.md"
( 1)))
            return NULL;
          return gen_split_508 (insn, operands);

        case 1:
          if (!((
#line 14644 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 14647 "../../src/gcc/config/i386/i386.md"
( 1)))
            return NULL;
          return gen_split_500 (insn, operands);

        case 2:
          if (!(
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (QImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 14719 "../../src/gcc/config/i386/i386.md"
( 1)))
            return NULL;
          return gen_split_505 (insn, operands);

        case 3:
          if (!(
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (HImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 14719 "../../src/gcc/config/i386/i386.md"
( 1)))
            return NULL;
          return gen_split_506 (insn, operands);

        case 4:
          if (!(
#line 14715 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE
   && (SImode != QImode || !TARGET_PARTIAL_REG_STALL)
   && ix86_pre_reload_split ()) && 
#line 14719 "../../src/gcc/config/i386/i386.md"
( 1)))
            return NULL;
          return gen_split_507 (insn, operands);

        case 5:
          switch (GET_MODE (operands[0]))
            {
            case E_TFmode:
              if (pattern1050 (x3, 
E_TFmode) != 0
                  || !(
#line 14773 "../../src/gcc/config/i386/i386.md"
(TARGET_SSE) && 
#line 14775 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
                return NULL;
              return gen_split_511 (insn, operands);

            case E_SFmode:
              if (pattern1051 (x3, 
E_V4SFmode, 
E_SFmode) != 0
                  || !(
#line 14909 "../../src/gcc/config/i386/i386.md"
(SSE_FLOAT_MODE_P (SFmode) && TARGET_SSE_MATH) && 
#line 14911 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
                return NULL;
              return gen_split_538 (insn, operands);

            case E_DFmode:
              if (pattern1051 (x3, 
E_V2DFmode, 
E_DFmode) != 0
                  || !(
#line 14909 "../../src/gcc/config/i386/i386.md"
(SSE_FLOAT_MODE_P (DFmode) && TARGET_SSE_MATH) && 
#line 14911 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
                return NULL;
              return gen_split_539 (insn, operands);

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
split_28 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 1);
  if (pattern229 (x2, 
E_CCmode, 
17) != 0)
    return NULL;
  x3 = XVECEXP (x1, 0, 0);
  switch (pattern200 (x3))
    {
    case 0:
      x4 = XEXP (x3, 0);
      operands[0] = x4;
      x5 = XEXP (x3, 1);
      x6 = XEXP (x5, 1);
      if (GET_CODE (x6) == SUBREG)
        {
          switch (pattern1333 (x5))
            {
            case 0:
              if (((
#line 16582 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (4 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 4 * BITS_PER_UNIT - 1))
	 == (2 * 4 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)) && 
#line 16587 "../../src/gcc/config/i386/i386.md"
( 1)))
                return gen_split_589 (insn, operands);
              break;

            case 1:
              if (((
#line 16582 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (8 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 8 * BITS_PER_UNIT - 1))
	 == (2 * 8 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 16587 "../../src/gcc/config/i386/i386.md"
( 1)))
                return gen_split_591 (insn, operands);
              break;

            default:
              break;
            }
        }
      if (GET_MODE (x5) == E_SImode
          && nonimmediate_operand (operands[1], E_SImode))
        {
          if (register_operand (operands[0], E_SImode))
            {
              operands[2] = x6;
              if (register_operand (operands[2], E_QImode)
                  && 
#line 17435 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI2 && reload_completed))
                return gen_split_622 (insn, operands);
            }
          if (GET_CODE (x6) == SUBREG)
            {
              switch (pattern1506 (x6))
                {
                case 0:
                  if ((
#line 17840 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1))
      == 4 * BITS_PER_UNIT - 1
   && ix86_pre_reload_split ()) && 
#line 17845 "../../src/gcc/config/i386/i386.md"
( 1)))
                    return gen_split_639 (insn, operands);
                  break;

                case 1:
                  if ((
#line 17888 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 17892 "../../src/gcc/config/i386/i386.md"
( 1)))
                    return gen_split_651 (insn, operands);
                  break;

                case 2:
                  if ((
#line 17934 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 17938 "../../src/gcc/config/i386/i386.md"
( 1)))
                    return gen_split_663 (insn, operands);
                  break;

                default:
                  break;
                }
            }
        }
      operands[2] = x6;
      switch (pattern1252 (x3))
        {
        case 0:
          if (register_operand (operands[1], E_DImode)
              && nonmemory_operand (operands[2], E_QImode)
              && (
#line 16694 "../../src/gcc/config/i386/i386.md"
(epilogue_completed) && 
#line 1195 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)))
            return gen_split_597 (insn, operands);
          if (nonimmediate_operand (operands[1], E_DImode)
              && register_operand (operands[2], E_QImode)
              && (
#line 17435 "../../src/gcc/config/i386/i386.md"
(TARGET_BMI2 && reload_completed) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return gen_split_624 (insn, operands);
          break;

        case 1:
          if ((
#line 16694 "../../src/gcc/config/i386/i386.md"
(epilogue_completed) && 
#line 1196 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return gen_split_599 (insn, operands);
          break;

        case 2:
          if ((
#line 17638 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 17649 "../../src/gcc/config/i386/i386.md"
( reload_completed
   && !(rtx_equal_p (operands[0], operands[1])))))
            return gen_split_628 (insn, operands);
          break;

        case 3:
          if ((
#line 17638 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)) && 
#line 17649 "../../src/gcc/config/i386/i386.md"
( reload_completed
   && !(rtx_equal_p (operands[0], operands[1])))))
            return gen_split_630 (insn, operands);
          break;

        default:
          break;
        }
      if (GET_MODE (x5) != E_DImode
          || !nonimmediate_operand (operands[1], E_DImode))
        return NULL;
      switch (GET_CODE (x6))
        {
        case CONST_INT:
          if (pattern1163 (x3) != 0
              || !(
#line 17361 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 17363 "../../src/gcc/config/i386/i386.md"
( reload_completed)))
            return NULL;
          return gen_split_617 (insn, operands);

        case SUBREG:
          if (maybe_ne (SUBREG_BYTE (x6), 0)
              || GET_MODE (x6) != E_QImode)
            return NULL;
          operands[0] = x4;
          if (!nonimmediate_operand (operands[0], E_DImode))
            return NULL;
          x7 = XEXP (x6, 0);
          switch (pattern1164 (x7))
            {
            case 0:
              if (!((
#line 17840 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1))
      == 8 * BITS_PER_UNIT - 1
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17845 "../../src/gcc/config/i386/i386.md"
( 1)))
                return NULL;
              return gen_split_642 (insn, operands);

            case 1:
              if (!((
#line 17888 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17892 "../../src/gcc/config/i386/i386.md"
( 1)))
                return NULL;
              return gen_split_654 (insn, operands);

            case 2:
              if (!((
#line 17934 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17938 "../../src/gcc/config/i386/i386.md"
( 1)))
                return NULL;
              return gen_split_666 (insn, operands);

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    case 1:
      if (register_operand (operands[0], E_DImode)
          && register_operand (operands[1], E_DImode)
          && ((
#line 16643 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (4 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 4 * BITS_PER_UNIT - 1))
	 == (2 * 4 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1235 "../../src/gcc/config/i386/i386.md"
(!TARGET_64BIT)) && 
#line 16648 "../../src/gcc/config/i386/i386.md"
( 1)))
        return gen_split_593 (insn, operands);
      if (!nonimmediate_operand (operands[0], E_DImode)
          || !nonimmediate_operand (operands[1], E_DImode)
          || !((
#line 17865 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1))
      == 8 * BITS_PER_UNIT - 1
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17870 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_648 (insn, operands);

    case 2:
      if (!((
#line 16643 "../../src/gcc/config/i386/i386.md"
(((INTVAL (operands[3]) & (8 * BITS_PER_UNIT)) == 0
    || ((INTVAL (operands[3]) & (2 * 8 * BITS_PER_UNIT - 1))
	 == (2 * 8 * BITS_PER_UNIT - 1)))
   && ix86_pre_reload_split ()) && 
#line 1236 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 16648 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_595 (insn, operands);

    case 3:
      if (!(
#line 17865 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1))
      == 4 * BITS_PER_UNIT - 1
   && ix86_pre_reload_split ()) && 
#line 17870 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_645 (insn, operands);

    case 4:
      if (!(
#line 17912 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 17916 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_657 (insn, operands);

    case 5:
      if (!((
#line 17912 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17916 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_660 (insn, operands);

    case 6:
      if (!(
#line 17964 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, SImode, operands)
   && (INTVAL (operands[3]) & (4 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 17968 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_669 (insn, operands);

    case 7:
      if (!((
#line 17964 "../../src/gcc/config/i386/i386.md"
(ix86_binary_operator_ok (LSHIFTRT, DImode, operands)
   && (INTVAL (operands[3]) & (8 * BITS_PER_UNIT - 1)) == 0
   && ix86_pre_reload_split ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 17968 "../../src/gcc/config/i386/i386.md"
( 1)))
        return NULL;
      return gen_split_672 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
split_39 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case LEU:
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      if (!int_nonimmediate_operand (operands[1], E_VOIDmode))
        return NULL;
      x6 = XEXP (x4, 1);
      operands[2] = x6;
      if (!const_int_operand (operands[2], E_VOIDmode))
        return NULL;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          if (!register_operand (operands[0], E_SImode)
              || GET_MODE (x3) != E_SImode
              || GET_MODE (x4) != E_SImode
              || !
#line 26282 "../../src/gcc/config/i386/i386.md"
(x86_64_immediate_operand (operands[2], VOIDmode)
   && INTVAL (operands[2]) != -1
   && INTVAL (operands[2]) != 2147483647))
            return NULL;
          return gen_split_937 (insn, operands);

        case E_DImode:
          if (!register_operand (operands[0], E_DImode)
              || GET_MODE (x3) != E_DImode
              || GET_MODE (x4) != E_DImode
              || !(
#line 26282 "../../src/gcc/config/i386/i386.md"
(x86_64_immediate_operand (operands[2], VOIDmode)
   && INTVAL (operands[2]) != -1
   && INTVAL (operands[2]) != 2147483647) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return NULL;
          return gen_split_938 (insn, operands);

        default:
          return NULL;
        }

    case EQ:
      switch (pattern407 (x3))
        {
        case 0:
          return gen_split_939 (insn, operands);

        case 1:
          return gen_split_940 (insn, operands);

        case 2:
          return gen_split_941 (insn, operands);

        case 3:
          if (!
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return NULL;
          return gen_split_942 (insn, operands);

        default:
          return NULL;
        }

    case NE:
      switch (pattern407 (x3))
        {
        case 0:
          return gen_split_943 (insn, operands);

        case 1:
          return gen_split_944 (insn, operands);

        case 2:
          return gen_split_945 (insn, operands);

        case 3:
          if (!
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT))
            return NULL;
          return gen_split_946 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
split_41 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case NE:
    case EQ:
    case GE:
    case GT:
    case LE:
    case LT:
    case LTGT:
    case GEU:
    case GTU:
    case LEU:
    case LTU:
    case UNORDERED:
    case ORDERED:
    case UNEQ:
    case UNGE:
    case UNGT:
    case UNLE:
    case UNLT:
      operands[1] = x3;
      res = split_40 (x1, insn);
      if (res != NULL_RTX)
        return res;
      if (!bt_comparison_operator (x3, E_VOIDmode))
        return NULL;
      operands[3] = x3;
      x4 = XEXP (x3, 0);
      if (pattern83 (x4, 
E_CCZmode, 
130) != 0)
        return NULL;
      x5 = XVECEXP (x4, 0, 0);
      if (GET_CODE (x5) != AND)
        return NULL;
      x6 = XEXP (x5, 0);
      if (GET_CODE (x6) != NOT)
        return NULL;
      x7 = XVECEXP (x4, 0, 1);
      if (GET_CODE (x7) != AND)
        return NULL;
      x8 = XEXP (x7, 0);
      if (GET_CODE (x8) != NOT)
        return NULL;
      x9 = XEXP (x3, 1);
      if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return NULL;
      x10 = XEXP (x2, 2);
      if (GET_CODE (x10) != PC)
        return NULL;
      x11 = XEXP (x1, 0);
      if (GET_CODE (x11) != PC)
        return NULL;
      x12 = XEXP (x6, 0);
      operands[1] = x12;
      x13 = XEXP (x5, 1);
      operands[2] = x13;
      x14 = XEXP (x2, 1);
      operands[0] = x14;
      x15 = XEXP (x8, 0);
      if (!rtx_equal_p (x15, operands[1]))
        return NULL;
      x16 = XEXP (x7, 1);
      if (!rtx_equal_p (x16, operands[2]))
        return NULL;
      switch (GET_MODE (x5))
        {
        case E_V16QImode:
          if (pattern1760 (x4, 
E_V16QImode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3676 (insn, operands);

        case E_V8HImode:
          if (pattern1760 (x4, 
E_V8HImode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3677 (insn, operands);

        case E_V4SImode:
          if (pattern1760 (x4, 
E_V4SImode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3678 (insn, operands);

        case E_V2DImode:
          if (pattern1760 (x4, 
E_V2DImode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3679 (insn, operands);

        case E_V1TImode:
          if (pattern1760 (x4, 
E_V1TImode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3680 (insn, operands);

        case E_V4SFmode:
          if (pattern1760 (x4, 
E_V4SFmode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3681 (insn, operands);

        case E_V2DFmode:
          if (pattern1760 (x4, 
E_V2DFmode) != 0
              || !
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1))
            return NULL;
          return gen_split_3682 (insn, operands);

        case E_V32QImode:
          if (pattern1760 (x4, 
E_V32QImode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 605 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3683 (insn, operands);

        case E_V16HImode:
          if (pattern1760 (x4, 
E_V16HImode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 605 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3684 (insn, operands);

        case E_V8SImode:
          if (pattern1760 (x4, 
E_V8SImode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 606 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3685 (insn, operands);

        case E_V4DImode:
          if (pattern1760 (x4, 
E_V4DImode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 606 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3686 (insn, operands);

        case E_V2TImode:
          if (pattern1760 (x4, 
E_V2TImode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 606 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3687 (insn, operands);

        case E_V8SFmode:
          if (pattern1760 (x4, 
E_V8SFmode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 607 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3688 (insn, operands);

        case E_V4DFmode:
          if (pattern1760 (x4, 
E_V4DFmode) != 0
              || !(
#line 25450 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 607 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_3689 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
split_47 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != VEC_SELECT)
    return NULL;
  switch (pattern91 (x1))
    {
    case 0:
      x4 = XEXP (x3, 0);
      operands[1] = x4;
      if (!register_operand (operands[1], E_V2SFmode)
          || pattern974 (x2) != 0
          || !register_operand (operands[0], E_SFmode)
          || GET_MODE (x2) != E_SFmode
          || GET_MODE (x3) != E_SFmode)
        return NULL;
      x5 = XEXP (x2, 1);
      if (GET_MODE (x5) != E_SFmode)
        return NULL;
      x6 = XEXP (x5, 0);
      if (!rtx_equal_p (x6, operands[1])
          || !(
#line 1058 "../../src/gcc/config/i386/mmx.md"
(TARGET_SSE3 && TARGET_MMX_WITH_SSE && ix86_partial_vec_fp_math
   && ix86_pre_reload_split ()) && 
#line 1061 "../../src/gcc/config/i386/mmx.md"
( 1)))
        return NULL;
      return gen_split_1029 (insn, operands);

    case 1:
      switch (pattern854 (x2))
        {
        case 0:
          if (!
#line 22633 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3 && reload_completed
   && SSE_REGNO_P (REGNO (operands[0]))))
            return NULL;
          return gen_split_3467 (insn, operands);

        case 1:
          if (!
#line 22720 "../../src/gcc/config/i386/sse.md"
(TARGET_SSSE3 && reload_completed
   && SSE_REGNO_P (REGNO (operands[0]))))
            return NULL;
          return gen_split_3470 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
split_48 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 1);
  x4 = XVECEXP (x3, 0, 0);
  if (GET_CODE (x4) != CONST_INT)
    return NULL;
  x5 = XEXP (x2, 0);
  operands[1] = x5;
  switch (XWINT (x4, 0))
    {
    case 0L:
      switch (GET_MODE (operands[0]))
        {
        case E_SFmode:
          switch (pattern975 (x2))
            {
            case 0:
              if ((
#line 1783 "../../src/gcc/config/i386/mmx.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE)
   && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 1786 "../../src/gcc/config/i386/mmx.md"
( reload_completed)))
                return gen_split_1032 (insn, operands);
              break;

            case 1:
              if ((
#line 12336 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 12338 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1556 (insn, operands);
              break;

            default:
              break;
            }
          break;

        case E_SImode:
          if (nonimmediate_operand (operands[0], E_SImode)
              && GET_MODE (x2) == E_SImode)
            {
              switch (GET_MODE (operands[1]))
                {
                case E_V2SImode:
                  if (nonimmediate_operand (operands[1], E_V2SImode)
                      && (
#line 5729 "../../src/gcc/config/i386/mmx.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE)
   && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 5732 "../../src/gcc/config/i386/mmx.md"
( reload_completed)))
                    return gen_split_1118 (insn, operands);
                  break;

                case E_V4SImode:
                  if (register_operand (operands[1], E_V4SImode)
                      && 
#line 21217 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
                    return gen_split_3390 (insn, operands);
                  break;

                default:
                  break;
                }
            }
          break;

        case E_HFmode:
          switch (pattern976 (x2))
            {
            case 0:
              if (((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 548 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1579 (insn, operands);
              break;

            case 1:
              if ((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1580 (insn, operands);
              break;

            case 2:
              if ((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1581 (insn, operands);
              break;

            default:
              break;
            }
          break;

        case E_BFmode:
          switch (pattern977 (x2))
            {
            case 0:
              if (((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 549 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1582 (insn, operands);
              break;

            case 1:
              if ((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1583 (insn, operands);
              break;

            case 2:
              if ((
#line 13245 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && !(MEM_P (operands[0]) && MEM_P (operands[1]))) && 
#line 13247 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
                return gen_split_1584 (insn, operands);
              break;

            default:
              break;
            }
          break;

        case E_DFmode:
          if (register_operand (operands[0], E_DFmode)
              && GET_MODE (x2) == E_DFmode
              && nonimmediate_operand (operands[1], E_V2DFmode)
              && 
#line 14683 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && reload_completed))
            return gen_split_3173 (insn, operands);
          break;

        case E_QImode:
          if (memory_operand (operands[0], E_QImode)
              && GET_MODE (x2) == E_QImode
              && register_operand (operands[1], E_V16QImode)
              && ((
#line 21077 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2
   && !TARGET_SSE4_1
   && (TARGET_INTER_UNIT_MOVES_FROM_VEC
       || optimize_function_for_speed_p (cfun))
   && ix86_pre_reload_split ()) && 
#line 21070 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1)) && 
#line 21083 "../../src/gcc/config/i386/sse.md"
( 1)))
            return gen_split_3387 (insn, operands);
          break;

        case E_HImode:
          if (memory_operand (operands[0], E_HImode)
              && GET_MODE (x2) == E_HImode
              && register_operand (operands[1], E_V8HImode)
              && (
#line 21077 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2
   && !TARGET_SSE4_1
   && (TARGET_INTER_UNIT_MOVES_FROM_VEC
       || optimize_function_for_speed_p (cfun))
   && ix86_pre_reload_split ()) && 
#line 21083 "../../src/gcc/config/i386/sse.md"
( 1)))
            return gen_split_3388 (insn, operands);
          break;

        case E_TImode:
          if (nonimmediate_operand (operands[0], E_TImode)
              && GET_MODE (x2) == E_TImode)
            {
              switch (GET_MODE (operands[1]))
                {
                case E_V4TImode:
                  if (register_operand (operands[1], E_V4TImode)
                      && (
#line 21451 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX
   && reload_completed
   && (TARGET_AVX512VL || !EXT_REX_SSE_REG_P (operands[1]))) && 
#line 21444 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
                    return gen_split_3398 (insn, operands);
                  break;

                case E_V2TImode:
                  if (register_operand (operands[1], E_V2TImode)
                      && 
#line 21451 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX
   && reload_completed
   && (TARGET_AVX512VL || !EXT_REX_SSE_REG_P (operands[1]))))
                    return gen_split_3399 (insn, operands);
                  break;

                default:
                  break;
                }
            }
          break;

        default:
          break;
        }
      break;

    case 1L:
      switch (GET_MODE (operands[0]))
        {
        case E_SFmode:
          if (register_operand (operands[0], E_SFmode)
              && GET_MODE (x2) == E_SFmode
              && memory_operand (operands[1], E_V2SFmode)
              && 
#line 1827 "../../src/gcc/config/i386/mmx.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE) && reload_completed))
            return gen_split_1033 (insn, operands);
          break;

        case E_SImode:
          if (register_operand (operands[0], E_SImode)
              && GET_MODE (x2) == E_SImode
              && memory_operand (operands[1], E_V2SImode)
              && 
#line 5816 "../../src/gcc/config/i386/mmx.md"
((TARGET_MMX || TARGET_MMX_WITH_SSE) && reload_completed))
            return gen_split_1120 (insn, operands);
          break;

        case E_DFmode:
          if (register_operand (operands[0], E_DFmode)
              && GET_MODE (x2) == E_DFmode
              && memory_operand (operands[1], E_V2DFmode)
              && 
#line 14630 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && reload_completed))
            return gen_split_3171 (insn, operands);
          break;

        default:
          break;
        }
      break;

    default:
      break;
    }
  operands[2] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_SFmode:
      if (GET_MODE (x2) != E_SFmode)
        return NULL;
      if (nonimmediate_operand (operands[0], E_SFmode)
          && register_operand (operands[1], E_V4SFmode)
          && const_0_to_3_operand (operands[2], E_SImode)
          && (
#line 12347 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE4_1) && 
#line 12354 "../../src/gcc/config/i386/sse.md"
( reload_completed && SSE_REG_P (operands[0]))))
        return gen_split_1557 (insn, operands);
      if (!register_operand (operands[0], E_SFmode)
          || !memory_operand (operands[1], E_V4SFmode)
          || !const_0_to_3_operand (operands[2], E_VOIDmode)
          || !(
#line 12390 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE) && 
#line 12392 "../../src/gcc/config/i386/sse.md"
( reload_completed)))
        return NULL;
      return gen_split_1558 (insn, operands);

    case E_QImode:
      if (!register_operand (operands[0], E_QImode)
          || GET_MODE (x2) != E_QImode
          || !memory_operand (operands[1], E_V16QImode)
          || !const_0_to_15_operand (operands[2], E_VOIDmode)
          || !
#line 21404 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
        return NULL;
      return gen_split_3394 (insn, operands);

    case E_HImode:
      if (!register_operand (operands[0], E_HImode)
          || GET_MODE (x2) != E_HImode
          || !memory_operand (operands[1], E_V8HImode)
          || !const_0_to_7_operand (operands[2], E_VOIDmode)
          || !
#line 21404 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
        return NULL;
      return gen_split_3395 (insn, operands);

    case E_SImode:
      if (!register_operand (operands[0], E_SImode)
          || GET_MODE (x2) != E_SImode
          || !memory_operand (operands[1], E_V4SImode)
          || !const_0_to_3_operand (operands[2], E_VOIDmode)
          || !
#line 21404 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
        return NULL;
      return gen_split_3396 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
split_56 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  if (XINT (x2, 1) != 164)
    return NULL;
  x3 = XVECEXP (x2, 0, 0);
  operands[1] = x3;
  x4 = XVECEXP (x2, 0, 1);
  operands[2] = x4;
  x5 = XVECEXP (x2, 0, 2);
  operands[3] = x5;
  x6 = XVECEXP (x2, 0, 3);
  operands[4] = x6;
  if (!const_0_to_255_operand (operands[4], E_SImode))
    return NULL;
  switch (GET_MODE (operands[0]))
    {
    case E_V64QImode:
      if (pattern970 (x2, 
E_V64QImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V64QImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1587 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V64QImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1611 (insn, operands);

    case E_V32QImode:
      if (pattern970 (x2, 
E_V32QImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V32QImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1588 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V32QImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 331 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1612 (insn, operands);

    case E_V16QImode:
      if (pattern970 (x2, 
E_V16QImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16QImode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1589 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16QImode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1613 (insn, operands);

    case E_V32HImode:
      if (pattern970 (x2, 
E_V32HImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V32HImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1590 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V32HImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1614 (insn, operands);

    case E_V16HImode:
      if (pattern970 (x2, 
E_V16HImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16HImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1591 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16HImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 332 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1615 (insn, operands);

    case E_V8HImode:
      if (pattern970 (x2, 
E_V8HImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8HImode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1592 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8HImode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1616 (insn, operands);

    case E_V16SImode:
      if (pattern970 (x2, 
E_V16SImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16SImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1593 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16SImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1617 (insn, operands);

    case E_V8SImode:
      if (pattern970 (x2, 
E_V8SImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8SImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1594 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8SImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 333 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1618 (insn, operands);

    case E_V4SImode:
      if (pattern970 (x2, 
E_V4SImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V4SImode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1595 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V4SImode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1619 (insn, operands);

    case E_V8DImode:
      if (pattern970 (x2, 
E_V8DImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8DImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1596 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8DImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1620 (insn, operands);

    case E_V4DImode:
      if (pattern970 (x2, 
E_V4DImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V4DImode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1597 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V4DImode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 334 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1621 (insn, operands);

    case E_V2DImode:
      if (pattern970 (x2, 
E_V2DImode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V2DImode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1598 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V2DImode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1622 (insn, operands);

    case E_V32HFmode:
      if (pattern970 (x2, 
E_V32HFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V32HFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1599 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V32HFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1623 (insn, operands);

    case E_V16HFmode:
      if (pattern970 (x2, 
E_V16HFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16HFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1600 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16HFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1624 (insn, operands);

    case E_V8HFmode:
      if (pattern970 (x2, 
E_V8HFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8HFmode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1601 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8HFmode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1625 (insn, operands);

    case E_V32BFmode:
      if (pattern970 (x2, 
E_V32BFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V32BFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1602 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V32BFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1626 (insn, operands);

    case E_V16BFmode:
      if (pattern970 (x2, 
E_V16BFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16BFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1603 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16BFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1627 (insn, operands);

    case E_V8BFmode:
      if (pattern970 (x2, 
E_V8BFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8BFmode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1604 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8BFmode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1628 (insn, operands);

    case E_V16SFmode:
      if (pattern970 (x2, 
E_V16SFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V16SFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1605 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V16SFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1629 (insn, operands);

    case E_V8SFmode:
      if (pattern970 (x2, 
E_V8SFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8SFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1606 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8SFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1630 (insn, operands);

    case E_V4SFmode:
      if (pattern970 (x2, 
E_V4SFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V4SFmode)
          && 
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3))
        return gen_split_1607 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V4SFmode)
          || !
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0))
        return NULL;
      return gen_split_1631 (insn, operands);

    case E_V8DFmode:
      if (pattern970 (x2, 
E_V8DFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V8DFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return gen_split_1608 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V8DFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)))
        return NULL;
      return gen_split_1632 (insn, operands);

    case E_V4DFmode:
      if (pattern970 (x2, 
E_V4DFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V4DFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return gen_split_1609 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V4DFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
        return NULL;
      return gen_split_1633 (insn, operands);

    case E_V2DFmode:
      if (pattern970 (x2, 
E_V2DFmode) != 0)
        return NULL;
      if (memory_operand (operands[3], E_V2DFmode)
          && (
#line 13712 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) == 3) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return gen_split_1610 (insn, operands);
      if (!nonimmediate_operand (operands[3], E_V2DFmode)
          || !(
#line 13733 "../../src/gcc/config/i386/sse.md"
(!reload_completed && vpternlog_redundant_operand_mask (operands[4]) != 0) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
        return NULL;
      return gen_split_1634 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
split_70 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case REG:
    case SUBREG:
    case MEM:
    case NOT:
      switch (pattern536 (x2))
        {
        case 0:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2001 (insn, operands);

        case 1:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2028 (insn, operands);

        case 2:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2055 (insn, operands);

        case 3:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2082 (insn, operands);

        case 4:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2109 (insn, operands);

        case 5:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2136 (insn, operands);

        case 6:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2163 (insn, operands);

        case 7:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2190 (insn, operands);

        case 8:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2217 (insn, operands);

        case 9:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2244 (insn, operands);

        case 10:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2271 (insn, operands);

        case 11:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2298 (insn, operands);

        case 12:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2004 (insn, operands);

        case 13:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2031 (insn, operands);

        case 14:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2058 (insn, operands);

        case 15:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2085 (insn, operands);

        case 16:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2112 (insn, operands);

        case 17:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2139 (insn, operands);

        case 18:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2166 (insn, operands);

        case 19:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2193 (insn, operands);

        case 20:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2220 (insn, operands);

        case 21:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2247 (insn, operands);

        case 22:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2274 (insn, operands);

        case 23:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2301 (insn, operands);

        case 24:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2007 (insn, operands);

        case 25:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2034 (insn, operands);

        case 26:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2061 (insn, operands);

        case 27:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2088 (insn, operands);

        case 28:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2115 (insn, operands);

        case 29:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2142 (insn, operands);

        case 30:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2169 (insn, operands);

        case 31:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2196 (insn, operands);

        case 32:
          if (!(
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2223 (insn, operands);

        case 33:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2250 (insn, operands);

        case 34:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2277 (insn, operands);

        case 35:
          if (!((
#line 13790 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13802 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2304 (insn, operands);

        case 36:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3069 (insn, operands);

        case 37:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3078 (insn, operands);

        case 38:
          if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3087 (insn, operands);

        case 39:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3096 (insn, operands);

        case 40:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3105 (insn, operands);

        case 41:
          if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3114 (insn, operands);

        case 42:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3123 (insn, operands);

        case 43:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3132 (insn, operands);

        case 44:
          if (!(
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3141 (insn, operands);

        case 45:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3150 (insn, operands);

        case 46:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3159 (insn, operands);

        case 47:
          if (!((
#line 13959 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13963 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_3168 (insn, operands);

        default:
          return NULL;
        }

    case AND:
      switch (pattern537 (x2))
        {
        case 0:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2649 (insn, operands);

        case 1:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2676 (insn, operands);

        case 2:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2703 (insn, operands);

        case 3:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2730 (insn, operands);

        case 4:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2757 (insn, operands);

        case 5:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2784 (insn, operands);

        case 6:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2811 (insn, operands);

        case 7:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2838 (insn, operands);

        case 8:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2865 (insn, operands);

        case 9:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2892 (insn, operands);

        case 10:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2919 (insn, operands);

        case 11:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2946 (insn, operands);

        default:
          return NULL;
        }

    case IOR:
      switch (pattern537 (x2))
        {
        case 0:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2652 (insn, operands);

        case 1:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2679 (insn, operands);

        case 2:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2706 (insn, operands);

        case 3:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2733 (insn, operands);

        case 4:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2760 (insn, operands);

        case 5:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2787 (insn, operands);

        case 6:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2814 (insn, operands);

        case 7:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2841 (insn, operands);

        case 8:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2868 (insn, operands);

        case 9:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2895 (insn, operands);

        case 10:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2922 (insn, operands);

        case 11:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2949 (insn, operands);

        default:
          return NULL;
        }

    case XOR:
      switch (pattern537 (x2))
        {
        case 0:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2655 (insn, operands);

        case 1:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 335 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2682 (insn, operands);

        case 2:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2709 (insn, operands);

        case 3:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2736 (insn, operands);

        case 4:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 336 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2763 (insn, operands);

        case 5:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2790 (insn, operands);

        case 6:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2817 (insn, operands);

        case 7:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 337 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2844 (insn, operands);

        case 8:
          if (!(
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2871 (insn, operands);

        case 9:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((64 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2898 (insn, operands);

        case 10:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((32 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2925 (insn, operands);

        case 11:
          if (!((
#line 13875 "../../src/gcc/config/i386/sse.md"
((16 == 64 || TARGET_AVX512VL
    || (TARGET_AVX512F && TARGET_EVEX512 && !TARGET_PREFER_AVX256))
   && ix86_pre_reload_split ()
   && (rtx_equal_p (STRIP_UNARY (operands[1]),
		    STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[4]))
       || rtx_equal_p (STRIP_UNARY (operands[1]),
		       STRIP_UNARY (operands[3]))
       || rtx_equal_p (STRIP_UNARY (operands[2]),
		       STRIP_UNARY (operands[3])))) && 
#line 338 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 13887 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_2952 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
split_78 (rtx x1 ATTRIBUTE_UNUSED, rtx_insn *insn ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case MINUS:
      x4 = XEXP (x2, 1);
      if (GET_CODE (x4) != PLUS)
        return NULL;
      operands[6] = x2;
      x5 = XEXP (x3, 0);
      operands[1] = x5;
      x6 = XEXP (x3, 1);
      operands[2] = x6;
      x7 = XEXP (x4, 0);
      operands[3] = x7;
      x8 = XEXP (x4, 1);
      operands[4] = x8;
      x9 = XEXP (x2, 2);
      operands[5] = x9;
      if (!const_int_operand (operands[5], E_VOIDmode))
        return NULL;
      switch (GET_MODE (operands[0]))
        {
        case E_V8SFmode:
          if (pattern1444 (x2, 
E_V8SFmode) != 0
              || !(
#line 3537 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_1300 (insn, operands);

        case E_V4SFmode:
          if (pattern1444 (x2, 
E_V4SFmode) != 0
              || !
#line 3537 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))))
            return NULL;
          return gen_split_1301 (insn, operands);

        case E_V4DFmode:
          if (pattern1444 (x2, 
E_V4DFmode) != 0
              || !(
#line 3537 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_1302 (insn, operands);

        case E_V2DFmode:
          if (pattern1444 (x2, 
E_V2DFmode) != 0
              || !(
#line 3537 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
            return NULL;
          return gen_split_1303 (insn, operands);

        default:
          return NULL;
        }

    case PLUS:
      x4 = XEXP (x2, 1);
      if (GET_CODE (x4) != MINUS)
        return NULL;
      operands[6] = x2;
      x5 = XEXP (x3, 0);
      operands[1] = x5;
      x6 = XEXP (x3, 1);
      operands[2] = x6;
      x7 = XEXP (x4, 0);
      operands[3] = x7;
      x8 = XEXP (x4, 1);
      operands[4] = x8;
      x9 = XEXP (x2, 2);
      operands[5] = x9;
      if (!const_int_operand (operands[5], E_VOIDmode))
        return NULL;
      switch (GET_MODE (operands[0]))
        {
        case E_V8SFmode:
          if (pattern1445 (x2, 
E_V8SFmode) != 0
              || !(
#line 3559 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_1304 (insn, operands);

        case E_V4SFmode:
          if (pattern1445 (x2, 
E_V4SFmode) != 0
              || !
#line 3559 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))))
            return NULL;
          return gen_split_1305 (insn, operands);

        case E_V4DFmode:
          if (pattern1445 (x2, 
E_V4DFmode) != 0
              || !(
#line 3559 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)))
            return NULL;
          return gen_split_1306 (insn, operands);

        case E_V2DFmode:
          if (pattern1445 (x2, 
E_V2DFmode) != 0
              || !(
#line 3559 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE3
   && can_create_pseudo_p ()
   && ((rtx_equal_p (operands[1], operands[3])
	&& rtx_equal_p (operands[2], operands[4]))
       || (rtx_equal_p (operands[1], operands[4])
	   && rtx_equal_p (operands[2], operands[3])))) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)))
            return NULL;
          return gen_split_1307 (insn, operands);

        default:
          return NULL;
        }

    case CONST_INT:
    case CONST_DOUBLE:
    case CONST_VECTOR:
    case REG:
    case SUBREG:
    case MEM:
      switch (GET_CODE (x3))
        {
        case REG:
        case SUBREG:
        case MEM:
          res = split_57 (x1, insn);
          if (res != NULL_RTX)
            return res;
          break;

        case CONST_INT:
        case CONST_DOUBLE:
        case CONST_VECTOR:
          switch (pattern315 (x2))
            {
            case 0:
              res = split_58 (x1, insn);
              if (res != NULL_RTX)
                return res;
              break;

            case 1:
              if (vector_all_ones_operand (operands[1], E_V16QImode)
                  && const0_operand (operands[2], E_V16QImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3297 (insn, operands);
              if (const0_operand (operands[1], E_V16QImode)
                  && vector_all_ones_operand (operands[2], E_V16QImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3320 (insn, operands);
              break;

            case 2:
              if (vector_all_ones_operand (operands[1], E_V8HImode)
                  && const0_operand (operands[2], E_V8HImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3299 (insn, operands);
              if (const0_operand (operands[1], E_V8HImode)
                  && vector_all_ones_operand (operands[2], E_V8HImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3321 (insn, operands);
              break;

            case 3:
              if (vector_all_ones_operand (operands[1], E_V4SImode)
                  && const0_operand (operands[2], E_V4SImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3301 (insn, operands);
              if (const0_operand (operands[1], E_V4SImode)
                  && vector_all_ones_operand (operands[2], E_V4SImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3322 (insn, operands);
              break;

            case 4:
              if (vector_all_ones_operand (operands[1], E_V2DImode)
                  && const0_operand (operands[2], E_V2DImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3303 (insn, operands);
              if (const0_operand (operands[1], E_V2DImode)
                  && vector_all_ones_operand (operands[2], E_V2DImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3323 (insn, operands);
              break;

            case 5:
              if (vector_all_ones_operand (operands[1], E_V32QImode)
                  && const0_operand (operands[2], E_V32QImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3305 (insn, operands);
              if (const0_operand (operands[1], E_V32QImode)
                  && vector_all_ones_operand (operands[2], E_V32QImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3324 (insn, operands);
              break;

            case 6:
              if (vector_all_ones_operand (operands[1], E_V16HImode)
                  && const0_operand (operands[2], E_V16HImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3307 (insn, operands);
              if (const0_operand (operands[1], E_V16HImode)
                  && vector_all_ones_operand (operands[2], E_V16HImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3325 (insn, operands);
              break;

            case 7:
              if (vector_all_ones_operand (operands[1], E_V8SImode)
                  && const0_operand (operands[2], E_V8SImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3309 (insn, operands);
              if (const0_operand (operands[1], E_V8SImode)
                  && vector_all_ones_operand (operands[2], E_V8SImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3326 (insn, operands);
              break;

            case 8:
              if (vector_all_ones_operand (operands[1], E_V4DImode)
                  && const0_operand (operands[2], E_V4DImode)
                  && (
#line 18133 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   && (INTVAL (operands[5]) == 2 || INTVAL (operands[5]) == 5)) && 
#line 18136 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3311 (insn, operands);
              if (const0_operand (operands[1], E_V4DImode)
                  && vector_all_ones_operand (operands[2], E_V4DImode)
                  && (
#line 18191 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
     /* NE is commutative.  */
   && INTVAL (operands[5]) == 4) && 
#line 18196 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3327 (insn, operands);
              break;

            case 9:
              if (((
#line 4144 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4146 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_1320 (insn, operands);
              break;

            case 10:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3288 (insn, operands);
              break;

            case 11:
              if ((
#line 4144 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 4146 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_1321 (insn, operands);
              break;

            case 12:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3284 (insn, operands);
              break;

            case 13:
              if (((
#line 4144 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4146 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_1322 (insn, operands);
              break;

            case 14:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3289 (insn, operands);
              break;

            case 15:
              if (((
#line 4144 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 4146 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_1323 (insn, operands);
              break;

            case 16:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3285 (insn, operands);
              break;

            case 17:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3282 (insn, operands);
              break;

            case 18:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3283 (insn, operands);
              break;

            case 19:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3286 (insn, operands);
              break;

            case 20:
              if ((
#line 18008 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()
   /* NE is commutative.  */
   && ((INTVAL (operands[5]) == 4
	&& !(MEM_P (operands[3]) && MEM_P (operands[4])))
	  /* LE, 3 must be register.  */
       || (INTVAL (operands[5]) == 2
	   && !MEM_P (operands[3]))
	  /* NLT aka GE, 4 must be register and we swap operands.  */
       || (INTVAL (operands[5]) == 5
	   && !MEM_P (operands[4])))) && 
#line 18019 "../../src/gcc/config/i386/sse.md"
( 1)))
                return gen_split_3287 (insn, operands);
              break;

            case 21:
              switch (GET_MODE (operands[0]))
                {
                case E_V16SImode:
                  if (register_operand (operands[0], E_V16SImode)
                      && GET_MODE (x2) == E_V16SImode
                      && register_operand (operands[1], E_HImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V16SImode)
                          && const0_operand (operands[3], E_V16SImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1522 (insn, operands);
                      if (const0_operand (operands[2], E_V16SImode)
                          && vector_all_ones_operand (operands[3], E_V16SImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1534 (insn, operands);
                    }
                  break;

                case E_V8SImode:
                  if (register_operand (operands[0], E_V8SImode)
                      && GET_MODE (x2) == E_V8SImode
                      && register_operand (operands[1], E_QImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V8SImode)
                          && const0_operand (operands[3], E_V8SImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1523 (insn, operands);
                      if (const0_operand (operands[2], E_V8SImode)
                          && vector_all_ones_operand (operands[3], E_V8SImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1535 (insn, operands);
                    }
                  break;

                case E_V4SImode:
                  if (register_operand (operands[0], E_V4SImode)
                      && GET_MODE (x2) == E_V4SImode
                      && register_operand (operands[1], E_QImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V4SImode)
                          && const0_operand (operands[3], E_V4SImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 500 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1524 (insn, operands);
                      if (const0_operand (operands[2], E_V4SImode)
                          && vector_all_ones_operand (operands[3], E_V4SImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 510 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1536 (insn, operands);
                    }
                  break;

                case E_V8DImode:
                  if (register_operand (operands[0], E_V8DImode)
                      && GET_MODE (x2) == E_V8DImode
                      && register_operand (operands[1], E_QImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V8DImode)
                          && const0_operand (operands[3], E_V8DImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1525 (insn, operands);
                      if (const0_operand (operands[2], E_V8DImode)
                          && vector_all_ones_operand (operands[3], E_V8DImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_EVEX512)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1537 (insn, operands);
                    }
                  break;

                case E_V4DImode:
                  if (register_operand (operands[0], E_V4DImode)
                      && GET_MODE (x2) == E_V4DImode
                      && register_operand (operands[1], E_QImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V4DImode)
                          && const0_operand (operands[3], E_V4DImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1526 (insn, operands);
                      if (const0_operand (operands[2], E_V4DImode)
                          && vector_all_ones_operand (operands[3], E_V4DImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1538 (insn, operands);
                    }
                  break;

                case E_V2DImode:
                  if (register_operand (operands[0], E_V2DImode)
                      && GET_MODE (x2) == E_V2DImode
                      && register_operand (operands[1], E_QImode))
                    {
                      if (vector_all_ones_operand (operands[2], E_V2DImode)
                          && const0_operand (operands[3], E_V2DImode)
                          && ((
#line 10329 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F) && 
#line 501 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10333 "../../src/gcc/config/i386/sse.md"
( !TARGET_AVX512DQ && reload_completed
   && optimize_function_for_speed_p (cfun))))
                        return gen_split_1527 (insn, operands);
                      if (const0_operand (operands[2], E_V2DImode)
                          && vector_all_ones_operand (operands[3], E_V2DImode)
                          && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 511 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                        return gen_split_1539 (insn, operands);
                    }
                  break;

                case E_V64QImode:
                  if (pattern1185 (x2, 
E_DImode, 
E_V64QImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 504 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1528 (insn, operands);
                  break;

                case E_V32QImode:
                  if (pattern1185 (x2, 
E_SImode, 
E_V32QImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 505 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1529 (insn, operands);
                  break;

                case E_V16QImode:
                  if (pattern1185 (x2, 
E_HImode, 
E_V16QImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 506 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1530 (insn, operands);
                  break;

                case E_V32HImode:
                  if (pattern1185 (x2, 
E_SImode, 
E_V32HImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 507 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512BW && TARGET_EVEX512)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1531 (insn, operands);
                  break;

                case E_V16HImode:
                  if (pattern1185 (x2, 
E_HImode, 
E_V16HImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 508 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1532 (insn, operands);
                  break;

                case E_V8HImode:
                  if (pattern1185 (x2, 
E_QImode, 
E_V8HImode) == 0
                      && ((
#line 10355 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && ix86_pre_reload_split ()) && 
#line 509 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && TARGET_AVX512BW)) && 
#line 10357 "../../src/gcc/config/i386/sse.md"
( 1)))
                    return gen_split_1533 (insn, operands);
                  break;

                default:
                  break;
                }
              break;

            default:
              break;
            }
          break;

        default:
          break;
        }
      operands[1] = x3;
      switch (pattern318 (x2))
        {
        case 0:
          if (!((
#line 4171 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4173 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1324 (insn, operands);

        case 1:
          if (!(
#line 4171 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 4173 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1325 (insn, operands);

        case 2:
          if (!((
#line 4171 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4173 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1326 (insn, operands);

        case 3:
          if (!((
#line 4171 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 4173 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1327 (insn, operands);

        case 4:
          if (!((
#line 4192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 421 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4194 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1328 (insn, operands);

        case 5:
          if (!(
#line 4192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 4194 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1329 (insn, operands);

        case 6:
          if (!((
#line 4192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 4194 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1330 (insn, operands);

        case 7:
          if (!((
#line 4192 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512VL && ix86_pre_reload_split ()) && 
#line 422 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2)) && 
#line 4194 "../../src/gcc/config/i386/sse.md"
( 1)))
            return NULL;
          return gen_split_1331 (insn, operands);

        default:
          return NULL;
        }

    case VEC_DUPLICATE:
      x5 = XEXP (x3, 0);
      switch (GET_CODE (x5))
        {
        case VEC_SELECT:
          x10 = XEXP (x5, 1);
          if (GET_CODE (x10) != PARALLEL
              || XVECLEN (x10, 0) != 1)
            return NULL;
          x11 = XVECEXP (x10, 0, 0);
          if (x11 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
            return NULL;
          x9 = XEXP (x2, 2);
          if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
            return NULL;
          switch (pattern1009 (x2))
            {
            case 0:
              if (!(
#line 12050 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 12052 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1540 (insn, operands);

            case 1:
              if (!(
#line 12050 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 12052 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1541 (insn, operands);

            case 2:
              if (!(
#line 12050 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 12052 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1542 (insn, operands);

            default:
              return NULL;
            }

        case ZERO_EXTEND:
          switch (pattern310 (x2))
            {
            case 0:
              if (!((
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 803 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1543 (insn, operands);

            case 1:
              if (!(
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1544 (insn, operands);

            case 2:
              if (!(
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1545 (insn, operands);

            case 3:
              if (!((
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 804 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1546 (insn, operands);

            case 4:
              if (!((
#line 12204 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 614 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512F && TARGET_EVEX512)) && 
#line 12206 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1550 (insn, operands);

            case 5:
              if (!(
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1547 (insn, operands);

            case 6:
              if (!((
#line 12204 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 614 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX)) && 
#line 12206 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1551 (insn, operands);

            case 7:
              if (!(
#line 12090 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX512FP16 && ix86_pre_reload_split ()) && 
#line 12092 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1548 (insn, operands);

            case 8:
              if (!(
#line 12204 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE2 && ix86_pre_reload_split ()) && 
#line 12206 "../../src/gcc/config/i386/sse.md"
( 1)))
                return NULL;
              return gen_split_1552 (insn, operands);

            default:
              return NULL;
            }

        case CONST_INT:
        case CONST_WIDE_INT:
        case CONST_POLY_INT:
        case CONST_FIXED:
        case CONST_DOUBLE:
        case CONST_VECTOR:
        case CONST:
        case REG:
        case SUBREG:
        case LABEL_REF:
        case SYMBOL_REF:
        case HIGH:
          x4 = XEXP (x2, 1);
          switch (GET_CODE (x4))
            {
            case SUBREG:
            case MEM:
              if (!rtx_equal_p (x4, operands[0]))
                return NULL;
              x9 = XEXP (x2, 2);
              if (x9 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
                return NULL;
              operands[1] = x5;
              switch (GET_MODE (operands[0]))
                {
                case E_V4SImode:
                  if (pattern1186 (x2, 
E_SImode, 
E_V4SImode) != 0
                      || !
#line 12280 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
                    return NULL;
                  return gen_split_1554 (insn, operands);

                case E_V4SFmode:
                  if (pattern1186 (x2, 
E_SFmode, 
E_V4SFmode) != 0
                      || !
#line 12280 "../../src/gcc/config/i386/sse.md"
(TARGET_SSE && reload_completed))
                    return NULL;
                  return gen_split_1555 (insn, operands);

                default:
                  return NULL;
                }

            case REG:
              operands[1] = x4;
              operands[2] = x5;
              x9 = XEXP (x2, 2);
              operands[3] = x9;
              if (!const_int_operand (operands[3], E_SImode))
                return NULL;
              switch (GET_MODE (operands[0]))
                {
                case E_V8HImode:
                  if (pattern1061 (x2, 
E_V8HImode, 
E_HImode) != 0
                      || !
#line 19962 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && reload_completed
   && INTVAL (operands[3]) > 1
   && ((unsigned) exact_log2 (INTVAL (operands[3]))
       < GET_MODE_NUNITS (V8HImode))))
                    return NULL;
                  return gen_split_3384 (insn, operands);

                case E_V8HFmode:
                  if (pattern1061 (x2, 
E_V8HFmode, 
E_HFmode) != 0
                      || !
#line 19962 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && reload_completed
   && INTVAL (operands[3]) > 1
   && ((unsigned) exact_log2 (INTVAL (operands[3]))
       < GET_MODE_NUNITS (V8HFmode))))
                    return NULL;
                  return gen_split_3385 (insn, operands);

                case E_V8BFmode:
                  if (pattern1061 (x2, 
E_V8BFmode, 
E_BFmode) != 0
                      || !
#line 19962 "../../src/gcc/config/i386/sse.md"
(TARGET_AVX2 && reload_completed
   && INTVAL (operands[3]) > 1
   && ((unsigned) exact_log2 (INTVAL (operands[3]))
       < GET_MODE_NUNITS (V8BFmode))))
                    return NULL;
                  return gen_split_3386 (insn, operands);

                default:
                  return NULL;
                }

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_1 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  if (GET_CODE (x2) != REG
      || REGNO (x2) != 17)
    return NULL;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  switch (GET_CODE (x4))
    {
    case NEG:
      if (GET_MODE (x4) != E_QImode)
        return NULL;
      x5 = XEXP (x4, 0);
      if (GET_CODE (x5) != LTU
          || GET_MODE (x5) != E_QImode)
        return NULL;
      x6 = XEXP (x5, 0);
      if (GET_CODE (x6) != REG
          || REGNO (x6) != 17
          || GET_MODE (x6) != E_CCCmode)
        return NULL;
      x7 = XEXP (x5, 1);
      if (x7 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return NULL;
      x8 = XEXP (x3, 1);
      if (GET_CODE (x8) != GEU
          || GET_MODE (x8) != E_QImode)
        return NULL;
      x9 = XEXP (x8, 0);
      if (GET_CODE (x9) != REG
          || REGNO (x9) != 17
          || GET_MODE (x9) != E_CCCmode)
        return NULL;
      x10 = XEXP (x8, 1);
      if (x10 != const_int_rtx[MAX_SAVED_CONST_INT + 0]
          || GET_MODE (x2) != E_CCCmode
          || GET_MODE (x3) != E_CCCmode
          || !
#line 2162 "../../src/gcc/config/i386/i386.md"
(TARGET_SLOW_STC && !optimize_insn_for_size_p ()))
        return NULL;
      *pmatch_len_ = 0;
      return gen_peephole2_2 (insn, operands);

    case AND:
      x8 = XEXP (x3, 1);
      if (x8 != const_int_rtx[MAX_SAVED_CONST_INT + 0]
          || GET_MODE (x2) != E_CCZmode
          || GET_MODE (x3) != E_CCZmode)
        return NULL;
      x5 = XEXP (x4, 0);
      operands[0] = x5;
      x11 = XEXP (x4, 1);
      operands[1] = x11;
      if (!const_int_operand (operands[1], E_VOIDmode))
        return NULL;
      switch (GET_MODE (x4))
        {
        case E_HImode:
          if (!memory_operand (operands[0], E_HImode)
              || !
#line 12414 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_MEMORY_READ_STALL && !MEM_VOLATILE_P (operands[0])))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_124 (insn, operands);

        case E_SImode:
          if (!memory_operand (operands[0], E_SImode)
              || !
#line 12414 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_MEMORY_READ_STALL && !MEM_VOLATILE_P (operands[0])))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_125 (insn, operands);

        case E_DImode:
          if (!memory_operand (operands[0], E_DImode)
              || !(
#line 12414 "../../src/gcc/config/i386/i386.md"
(!TARGET_PARTIAL_MEMORY_READ_STALL && !MEM_VOLATILE_P (operands[0])) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_126 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_2 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  x3 = XEXP (x1, 1);
  x4 = XEXP (x3, 0);
  operands[1] = x4;
  switch (GET_MODE (operands[0]))
    {
    case E_SImode:
      switch (pattern409 (x3, 
E_SImode))
        {
        case 0:
          if (!
#line 5965 "../../src/gcc/config/i386/i386.md"
(TARGET_AVOID_VECTOR_DECODE
   && SSE_FLOAT_MODE_P (SFmode)
   && optimize_insn_for_speed_p ()))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_56 (insn, operands);

        case 1:
          if (!
#line 5965 "../../src/gcc/config/i386/i386.md"
(TARGET_AVOID_VECTOR_DECODE
   && SSE_FLOAT_MODE_P (DFmode)
   && optimize_insn_for_speed_p ()))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_58 (insn, operands);

        default:
          return NULL;
        }

    case E_DImode:
      switch (pattern409 (x3, 
E_DImode))
        {
        case 0:
          if (!(
#line 5965 "../../src/gcc/config/i386/i386.md"
(TARGET_AVOID_VECTOR_DECODE
   && SSE_FLOAT_MODE_P (SFmode)
   && optimize_insn_for_speed_p ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_57 (insn, operands);

        case 1:
          if (!(
#line 5965 "../../src/gcc/config/i386/i386.md"
(TARGET_AVOID_VECTOR_DECODE
   && SSE_FLOAT_MODE_P (DFmode)
   && optimize_insn_for_speed_p ()) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_59 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_3 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10;
  rtx_insn *res ATTRIBUTE_UNUSED;
  if (peep2_current_count < 2
      || peep2_current_count < 3)
    return NULL;
  x2 = XEXP (x1, 1);
  operands[1] = x2;
  if (!bt_comparison_operator (operands[1], E_QImode))
    return NULL;
  x3 = XEXP (x2, 0);
  if (GET_CODE (x3) != REG
      || REGNO (x3) != 17
      || GET_MODE (x3) != E_CCZmode)
    return NULL;
  x4 = XEXP (x2, 1);
  if (x4 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
    return NULL;
  x5 = XEXP (x1, 0);
  operands[0] = x5;
  if (!nonimmediate_operand (operands[0], E_QImode))
    return NULL;
  x6 = PATTERN (peep2_next_insn (1));
  if (pattern1256 (x6, 
0) != 0)
    return NULL;
  x7 = PATTERN (peep2_next_insn (2));
  x8 = XEXP (x7, 1);
  x9 = XEXP (x8, 0);
  operands[2] = x9;
  if (pattern1780 (x7) != 0)
    return NULL;
  x10 = XEXP (x8, 1);
  operands[3] = x10;
  if (!
#line 19651 "../../src/gcc/config/i386/i386.md"
(peep2_regno_dead_p (3, FLAGS_REG)))
    return NULL;
  *pmatch_len_ = 2;
  return gen_peephole2_168 (insn, operands);
}

 rtx_insn *
peephole2_5 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  switch (GET_CODE (x2))
    {
    case REG:
      if (peep2_current_count < 2)
        return NULL;
      operands[0] = x2;
      x3 = PATTERN (peep2_next_insn (1));
      if (GET_CODE (x3) != SET)
        return NULL;
      x4 = XEXP (x3, 0);
      if (GET_CODE (x4) != STRICT_LOW_PART)
        return NULL;
      x5 = XEXP (x4, 0);
      operands[1] = x5;
      x6 = XEXP (x3, 1);
      operands[2] = x6;
      switch (GET_MODE (operands[0]))
        {
        case E_SImode:
          if (!general_reg_operand (operands[0], E_SImode))
            return NULL;
          switch (pattern1341 ())
            {
            case 0:
              if (!
#line 4948 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[0]) == REGNO (operands[1])
   && (SImode != SImode
       || !TARGET_ZERO_EXTEND_WITH_AND
       || !optimize_function_for_speed_p (cfun))))
                return NULL;
              *pmatch_len_ = 1;
              return gen_peephole2_45 (insn, operands);

            case 1:
              if (!
#line 4948 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[0]) == REGNO (operands[1])
   && (SImode != SImode
       || !TARGET_ZERO_EXTEND_WITH_AND
       || !optimize_function_for_speed_p (cfun))))
                return NULL;
              *pmatch_len_ = 1;
              return gen_peephole2_47 (insn, operands);

            default:
              return NULL;
            }

        case E_DImode:
          if (!general_reg_operand (operands[0], E_DImode))
            return NULL;
          switch (pattern1341 ())
            {
            case 0:
              if (!(
#line 4948 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[0]) == REGNO (operands[1])
   && (DImode != SImode
       || !TARGET_ZERO_EXTEND_WITH_AND
       || !optimize_function_for_speed_p (cfun))) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return NULL;
              *pmatch_len_ = 1;
              return gen_peephole2_46 (insn, operands);

            case 1:
              if (!(
#line 4948 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[0]) == REGNO (operands[1])
   && (DImode != SImode
       || !TARGET_ZERO_EXTEND_WITH_AND
       || !optimize_function_for_speed_p (cfun))) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return NULL;
              *pmatch_len_ = 1;
              return gen_peephole2_48 (insn, operands);

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    case SUBREG:
    case MEM:
      operands[0] = x2;
      switch (GET_MODE (operands[0]))
        {
        case E_QImode:
          if (!memory_operand (operands[0], E_QImode)
              || !
#line 27802 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_speed_p ()
   && ((QImode == HImode
       && TARGET_LCP_STALL)
       || (!TARGET_USE_MOV0
          && TARGET_SPLIT_LONG_MOVES
          && get_attr_length (insn) >= ix86_cur_cost ()->large_insn))
   && peep2_regno_dead_p (0, FLAGS_REG)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_256 (insn, operands);

        case E_HImode:
          if (!memory_operand (operands[0], E_HImode)
              || !
#line 27802 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_speed_p ()
   && ((HImode == HImode
       && TARGET_LCP_STALL)
       || (!TARGET_USE_MOV0
          && TARGET_SPLIT_LONG_MOVES
          && get_attr_length (insn) >= ix86_cur_cost ()->large_insn))
   && peep2_regno_dead_p (0, FLAGS_REG)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_257 (insn, operands);

        default:
          return NULL;
        }

    case STRICT_LOW_PART:
      x7 = XEXP (x2, 0);
      operands[0] = x7;
      switch (GET_MODE (operands[0]))
        {
        case E_QImode:
          if (!general_reg_operand (operands[0], E_QImode)
              || !
#line 28489 "../../src/gcc/config/i386/i386.md"
((! TARGET_USE_MOV0 || optimize_insn_for_size_p ())
   && peep2_regno_dead_p (0, FLAGS_REG)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_333 (insn, operands);

        case E_HImode:
          if (!general_reg_operand (operands[0], E_HImode)
              || !
#line 28489 "../../src/gcc/config/i386/i386.md"
((! TARGET_USE_MOV0 || optimize_insn_for_size_p ())
   && peep2_regno_dead_p (0, FLAGS_REG)))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_334 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_7 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  operands[1] = x2;
  x3 = XEXP (x1, 0);
  operands[0] = x3;
  switch (GET_CODE (operands[0]))
    {
    case REG:
    case SUBREG:
      if (peep2_current_count < 2
          || peep2_current_count < 3)
        return NULL;
      x4 = PATTERN (peep2_next_insn (1));
      if (GET_CODE (x4) != PARALLEL
          || pattern842 (x4) != 0)
        return NULL;
      switch (GET_MODE (operands[0]))
        {
        case E_QImode:
          if (!memory_operand (operands[1], E_QImode))
            return NULL;
          if (general_reg_operand (operands[0], E_QImode))
            {
              switch (pattern1534 (x4, 
E_QImode))
                {
                case 0:
                  if (
#line 8701 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_68 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 1:
                  if (
#line 9987 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_108 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 2:
                  if (
#line 8818 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_76 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 3:
                  if (
#line 8844 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[5])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_80 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 4:
                  if (
#line 9302 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_90 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 5:
                  if (
#line 9328 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[5])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_94 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                default:
                  break;
                }
            }
          if (!register_operand (operands[0], E_QImode))
            return NULL;
          switch (pattern1535 (x4, 
E_QImode))
            {
            case 0:
              x5 = PATTERN (peep2_next_insn (2));
              x6 = XEXP (x5, 0);
              if (rtx_equal_p (x6, operands[1])
                  && 
#line 28107 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                {
                  *pmatch_len_ = 2;
                  res = gen_peephole2_297 (insn, operands);
                  if (res != NULL_RTX)
                    return res;
                }
              if (peep2_current_count < 4
                  || pattern1803 (x6, 
E_QImode) != 0
                  || !
#line 28347 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[4])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[4], operands[1])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                return NULL;
              *pmatch_len_ = 3;
              return gen_peephole2_321 (insn, operands);

            case 1:
              x5 = PATTERN (peep2_next_insn (2));
              x6 = XEXP (x5, 0);
              if (rtx_equal_p (x6, operands[1]))
                {
                  x7 = PATTERN (peep2_next_insn (3));
                  if (pattern1801 (x7) == 0
                      && 
#line 28230 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && REGNO (operands[0]) == REGNO (operands[4])
   && peep2_reg_dead_p (4, operands[0])
   && (QImode != QImode
       || immediate_operand (operands[2], SImode)
       || any_QIreg_operand (operands[2], SImode))
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && ix86_match_ccmode (peep2_next_insn (3),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_313 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
              if (peep2_current_count < 5
                  || pattern1845 (x6, 
E_QImode) != 0
                  || !
#line 28307 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && REGNO (operands[0]) == REGNO (operands[4])
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (5, operands[5])
   && (QImode != QImode
       || immediate_operand (operands[2], SImode)
       || any_QIreg_operand (operands[2], SImode))
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])
   && ix86_match_ccmode (peep2_next_insn (4),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                return NULL;
              *pmatch_len_ = 4;
              return gen_peephole2_319 (insn, operands);

            default:
              return NULL;
            }

        case E_HImode:
          if (!memory_operand (operands[1], E_HImode))
            return NULL;
          if (general_reg_operand (operands[0], E_HImode))
            {
              switch (pattern1534 (x4, 
E_HImode))
                {
                case 0:
                  if (
#line 8701 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_69 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 1:
                  if (
#line 9987 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_109 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 2:
                  if (
#line 8818 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_77 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 3:
                  if (
#line 8844 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[5])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_81 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 4:
                  if (
#line 9302 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])))
                    {
                      *pmatch_len_ = 2;
                      res = gen_peephole2_91 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                case 5:
                  if (
#line 9328 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[5])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_95 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  break;

                default:
                  break;
                }
            }
          if (!register_operand (operands[0], E_HImode))
            return NULL;
          switch (pattern1535 (x4, 
E_HImode))
            {
            case 0:
              x5 = PATTERN (peep2_next_insn (2));
              x6 = XEXP (x5, 0);
              if (rtx_equal_p (x6, operands[1])
                  && 
#line 28107 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                {
                  *pmatch_len_ = 2;
                  res = gen_peephole2_298 (insn, operands);
                  if (res != NULL_RTX)
                    return res;
                }
              if (peep2_current_count < 4
                  || pattern1803 (x6, 
E_HImode) != 0
                  || !
#line 28347 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[4])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[4], operands[1])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                return NULL;
              *pmatch_len_ = 3;
              return gen_peephole2_322 (insn, operands);

            case 1:
              x5 = PATTERN (peep2_next_insn (2));
              x6 = XEXP (x5, 0);
              if (rtx_equal_p (x6, operands[1]))
                {
                  x7 = PATTERN (peep2_next_insn (3));
                  if (pattern1801 (x7) == 0
                      && 
#line 28230 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && REGNO (operands[0]) == REGNO (operands[4])
   && peep2_reg_dead_p (4, operands[0])
   && (HImode != QImode
       || immediate_operand (operands[2], SImode)
       || any_QIreg_operand (operands[2], SImode))
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && ix86_match_ccmode (peep2_next_insn (3),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                    {
                      *pmatch_len_ = 3;
                      res = gen_peephole2_314 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
              if (peep2_current_count < 5
                  || pattern1845 (x6, 
E_HImode) != 0
                  || !
#line 28307 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && REGNO (operands[0]) == REGNO (operands[4])
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (5, operands[5])
   && (HImode != QImode
       || immediate_operand (operands[2], SImode)
       || any_QIreg_operand (operands[2], SImode))
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[5], operands[1])
   && ix86_match_ccmode (peep2_next_insn (4),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)))
                return NULL;
              *pmatch_len_ = 4;
              return gen_peephole2_320 (insn, operands);

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    case MEM:
      switch (GET_MODE (operands[0]))
        {
        case E_QImode:
          if (!push_operand (operands[0], E_QImode)
              || !memory_operand (operands[1], E_QImode)
              || !
#line 27780 "../../src/gcc/config/i386/i386.md"
(!(TARGET_PUSH_MEMORY || optimize_insn_for_size_p ())
   && !RTX_FRAME_RELATED_P (peep2_next_insn (0))))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_251 (insn, operands);

        case E_HImode:
          if (!push_operand (operands[0], E_HImode)
              || !memory_operand (operands[1], E_HImode)
              || !
#line 27780 "../../src/gcc/config/i386/i386.md"
(!(TARGET_PUSH_MEMORY || optimize_insn_for_size_p ())
   && !RTX_FRAME_RELATED_P (peep2_next_insn (0))))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_252 (insn, operands);

        case E_SFmode:
          if (!push_operand (operands[0], E_SFmode)
              || !memory_operand (operands[1], E_SFmode)
              || !
#line 27791 "../../src/gcc/config/i386/i386.md"
(!(TARGET_PUSH_MEMORY || optimize_insn_for_size_p ())
   && !RTX_FRAME_RELATED_P (peep2_next_insn (0))))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_255 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_18 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 0);
  operands[0] = x2;
  res = peephole2_16 (x1, insn, pmatch_len_);
  if (res != NULL_RTX)
    return res;
  if (peep2_current_count >= 2)
    {
      if (peep2_current_count >= 3
          && peep2_current_count >= 4)
        {
          if (general_reg_operand (x2, E_DImode))
            {
              res = peephole2_17 (x1, insn, pmatch_len_);
              if (res != NULL_RTX)
                return res;
            }
          if (peep2_current_count >= 5
              && pattern597 (x1, 
E_DImode) == 0
              && (
#line 27072 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INSN_UID (peep2_next_insn (0)) == ix86_last_zero_store_uid) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            {
              *pmatch_len_ = 4;
              res = gen_peephole2_224 (insn, operands);
              if (res != NULL_RTX)
                return res;
            }
        }
      operands[3] = x2;
      if (peep2_current_count >= 3)
        {
          x3 = XEXP (x1, 1);
          if (pattern410 (x3, 
E_DImode) == 0
              && (
#line 27090 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INSN_UID (peep2_next_insn (0)) == ix86_last_zero_store_uid) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
            {
              *pmatch_len_ = 2;
              res = gen_peephole2_226 (insn, operands);
              if (res != NULL_RTX)
                return res;
            }
        }
      if (general_reg_operand (operands[3], E_DImode))
        {
          x3 = XEXP (x1, 1);
          switch (pattern411 (x3, 
E_DImode))
            {
            case 0:
              if ((
#line 27515 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (2, operands[2])
   && !reg_mentioned_p (operands[3], operands[0])
   && !reg_mentioned_p (operands[3], operands[1])) && ((((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode))))
                {
                  *pmatch_len_ = 1;
                  res = gen_peephole2_240 (insn, operands);
                  if (res != NULL_RTX)
                    return res;
                }
              break;

            case 1:
              if ((
#line 27515 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (2, operands[2])
   && !reg_mentioned_p (operands[3], operands[0])
   && !reg_mentioned_p (operands[3], operands[1])) && ((((
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode))))
                {
                  *pmatch_len_ = 1;
                  res = gen_peephole2_242 (insn, operands);
                  if (res != NULL_RTX)
                    return res;
                }
              break;

            default:
              break;
            }
        }
      operands[2] = x2;
      if (memory_operand (operands[2], E_DImode))
        {
          x3 = XEXP (x1, 1);
          operands[0] = x3;
          if (general_reg_operand (operands[0], E_DImode))
            {
              x4 = PATTERN (peep2_next_insn (1));
              if (GET_CODE (x4) == SET)
                {
                  x5 = XEXP (x4, 1);
                  if (x5 == const_int_rtx[MAX_SAVED_CONST_INT + 0])
                    {
                      x6 = XEXP (x4, 0);
                      operands[1] = x6;
                      if (memory_operand (operands[1], E_DImode)
                          && (
#line 27105 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INSN_UID (peep2_next_insn (0)) == ix86_last_zero_store_uid) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                        {
                          *pmatch_len_ = 1;
                          res = gen_peephole2_228 (insn, operands);
                          if (res != NULL_RTX)
                            return res;
                        }
                    }
                }
            }
        }
    }
  operands[0] = x2;
  if (peep2_current_count >= 2
      && general_reg_operand (operands[0], E_DImode))
    {
      x3 = XEXP (x1, 1);
      operands[1] = x3;
      if (x86_64_general_operand (operands[1], E_DImode))
        {
          x4 = PATTERN (peep2_next_insn (1));
          if (GET_CODE (x4) == SET)
            {
              x6 = XEXP (x4, 0);
              operands[2] = x6;
              if (general_reg_operand (operands[2], E_DImode))
                {
                  x5 = XEXP (x4, 1);
                  if (rtx_equal_p (x5, operands[0])
                      && (
#line 27122 "../../src/gcc/config/i386/i386.md"
(peep2_reg_dead_p (2, operands[0])) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_232 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
            }
        }
    }
  x3 = XEXP (x1, 1);
  operands[1] = x3;
  if (!memory_operand (operands[1], E_DImode))
    return NULL;
  if (push_operand (operands[0], E_DImode)
      && (
#line 27780 "../../src/gcc/config/i386/i386.md"
(!(TARGET_PUSH_MEMORY || optimize_insn_for_size_p ())
   && !RTX_FRAME_RELATED_P (peep2_next_insn (0))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
    {
      *pmatch_len_ = 0;
      res = gen_peephole2_254 (insn, operands);
      if (res != NULL_RTX)
        return res;
    }
  if (peep2_current_count < 2
      || peep2_current_count < 3
      || !register_operand (operands[0], E_DImode))
    return NULL;
  x4 = PATTERN (peep2_next_insn (1));
  switch (GET_CODE (x4))
    {
    case PARALLEL:
      if (XVECLEN (x4, 0) != 2)
        return NULL;
      x7 = XVECEXP (x4, 0, 0);
      if (GET_CODE (x7) != SET)
        return NULL;
      x8 = XEXP (x7, 1);
      if (GET_CODE (x8) != COMPARE
          || pattern1258 (x4, 
E_DImode) != 0)
        return NULL;
      x9 = PATTERN (peep2_next_insn (2));
      if (GET_CODE (x9) != SET)
        return NULL;
      x10 = XEXP (x9, 1);
      if (!rtx_equal_p (x10, operands[0]))
        return NULL;
      x11 = XEXP (x9, 0);
      if (rtx_equal_p (x11, operands[1])
          && (
#line 28107 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        {
          *pmatch_len_ = 2;
          res = gen_peephole2_300 (insn, operands);
          if (res != NULL_RTX)
            return res;
        }
      if (peep2_current_count < 4
          || pattern1803 (x11, 
E_DImode) != 0
          || !(
#line 28347 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && peep2_reg_dead_p (3, operands[0])
   && peep2_reg_dead_p (4, operands[4])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[4], operands[1])
   && ix86_match_ccmode (peep2_next_insn (1),
			 (GET_CODE (operands[3]) == PLUS
			  || GET_CODE (operands[3]) == MINUS)
			 ? CCGOCmode : CCNOmode)) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        return NULL;
      *pmatch_len_ = 3;
      return gen_peephole2_324 (insn, operands);

    case SET:
      if (pattern843 (x4, 
E_DImode) != 0
          || !(
#line 28383 "../../src/gcc/config/i386/i386.md"
((TARGET_READ_MODIFY_WRITE || optimize_insn_for_size_p ())
   && (REGNO (operands[4]) == REGNO (operands[0])
       || REGNO (operands[4]) == REGNO (operands[3]))
   && (rtx_equal_p (operands[REGNO (operands[4]) == REGNO (operands[0])
			     ? 3 : 0], operands[5])
       ? rtx_equal_p (operands[2], operands[6])
       : rtx_equal_p (operands[2], operands[5])
	 && rtx_equal_p (operands[REGNO (operands[4]) == REGNO (operands[0])
				  ? 3 : 0], operands[6]))
   && peep2_reg_dead_p (4, operands[4])
   && peep2_reg_dead_p (5, operands[REGNO (operands[4]) == REGNO (operands[0])
				    ? 3 : 0])
   && !reg_overlap_mentioned_p (operands[0], operands[1])
   && !reg_overlap_mentioned_p (operands[0], operands[2])
   && !reg_overlap_mentioned_p (operands[3], operands[0])
   && !reg_overlap_mentioned_p (operands[3], operands[1])
   && !reg_overlap_mentioned_p (operands[3], operands[2])
   && (DImode != QImode
       || immediate_operand (operands[2], QImode)
       || any_QIreg_operand (operands[2], QImode))) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        return NULL;
      *pmatch_len_ = 4;
      return gen_peephole2_328 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_29 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XEXP (x1, 1);
  x3 = XEXP (x2, 0);
  switch (GET_CODE (x3))
    {
    case NE:
    case EQ:
    case GE:
    case GT:
    case LE:
    case LT:
    case LTGT:
    case GEU:
    case GTU:
    case LEU:
    case LTU:
    case UNORDERED:
    case ORDERED:
    case UNEQ:
    case UNGE:
    case UNGT:
    case UNLE:
    case UNLT:
      operands[1] = x3;
      switch (pattern241 (x1))
        {
        case 0:
          switch (GET_MODE (operands[0]))
            {
            case E_HImode:
              if (pattern1197 (x2, 
E_HImode) != 0
                  || !
#line 26423 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()))
                return NULL;
              *pmatch_len_ = 0;
              return gen_peephole2_199 (insn, operands);

            case E_SImode:
              if (pattern1197 (x2, 
E_SImode) != 0
                  || !
#line 26423 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()))
                return NULL;
              *pmatch_len_ = 0;
              return gen_peephole2_200 (insn, operands);

            case E_DImode:
              if (pattern1197 (x2, 
E_DImode) != 0
                  || !(
#line 26423 "../../src/gcc/config/i386/i386.md"
(TARGET_CMOVE && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()) && 
#line 1164 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
                return NULL;
              *pmatch_len_ = 0;
              return gen_peephole2_201 (insn, operands);

            case E_SFmode:
              if (!general_reg_operand (operands[0], E_SFmode)
                  || pattern1260 (x2, 
E_SFmode) != 0
                  || !
#line 26675 "../../src/gcc/config/i386/i386.md"
((SFmode != DFmode || TARGET_64BIT)
   && TARGET_80387 && TARGET_CMOVE
   && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()))
                return NULL;
              *pmatch_len_ = 0;
              return gen_peephole2_209 (insn, operands);

            case E_DFmode:
              if (!general_reg_operand (operands[0], E_DFmode)
                  || pattern1260 (x2, 
E_DFmode) != 0
                  || !
#line 26675 "../../src/gcc/config/i386/i386.md"
((DFmode != DFmode || TARGET_64BIT)
   && TARGET_80387 && TARGET_CMOVE
   && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()))
                return NULL;
              *pmatch_len_ = 0;
              return gen_peephole2_210 (insn, operands);

            default:
              return NULL;
            }

        case 1:
          if (!register_operand (operands[0], E_DImode)
              || GET_MODE (x2) != E_DImode
              || !ix86_comparison_operator (operands[1], E_VOIDmode))
            return NULL;
          x4 = XEXP (x2, 1);
          x5 = XEXP (x4, 0);
          operands[2] = x5;
          if (!nonimmediate_operand (operands[2], E_SImode))
            return NULL;
          x6 = XEXP (x2, 2);
          x7 = XEXP (x6, 0);
          operands[3] = x7;
          if (!nonimmediate_operand (operands[3], E_SImode)
              || !
#line 26453 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && TARGET_CMOVE && TARGET_AVOID_MEM_OPND_FOR_CMOVE
   && (MEM_P (operands[2]) || MEM_P (operands[3]))
   && optimize_insn_for_speed_p ()))
            return NULL;
          *pmatch_len_ = 0;
          return gen_peephole2_202 (insn, operands);

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_38 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7;
  rtx_insn *res ATTRIBUTE_UNUSED;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  operands[1] = x3;
  x4 = XVECEXP (x1, 0, 1);
  if (GET_CODE (x4) != SET)
    return NULL;
  x5 = XEXP (x2, 0);
  operands[0] = x5;
  x6 = XEXP (x4, 1);
  if (!rtx_equal_p (x6, operands[0]))
    return NULL;
  x7 = XEXP (x4, 0);
  if (!rtx_equal_p (x7, operands[1]))
    return NULL;
  switch (GET_MODE (operands[0]))
    {
    case E_QImode:
      if (!general_reg_operand (operands[0], E_QImode)
          || !general_reg_operand (operands[1], E_QImode))
        return NULL;
      if (
#line 3395 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[0])))
        {
          *pmatch_len_ = 0;
          res = gen_peephole2_19 (insn, operands);
          if (res != NULL_RTX)
            return res;
        }
      if (!
#line 3407 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[1])))
        return NULL;
      *pmatch_len_ = 0;
      return gen_peephole2_23 (insn, operands);

    case E_HImode:
      if (!general_reg_operand (operands[0], E_HImode)
          || !general_reg_operand (operands[1], E_HImode))
        return NULL;
      if (
#line 3395 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[0])))
        {
          *pmatch_len_ = 0;
          res = gen_peephole2_20 (insn, operands);
          if (res != NULL_RTX)
            return res;
        }
      if (!
#line 3407 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[1])))
        return NULL;
      *pmatch_len_ = 0;
      return gen_peephole2_24 (insn, operands);

    case E_SImode:
      if (!general_reg_operand (operands[0], E_SImode)
          || !general_reg_operand (operands[1], E_SImode))
        return NULL;
      if (
#line 3395 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[0])))
        {
          *pmatch_len_ = 0;
          res = gen_peephole2_21 (insn, operands);
          if (res != NULL_RTX)
            return res;
        }
      if (!
#line 3407 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[1])))
        return NULL;
      *pmatch_len_ = 0;
      return gen_peephole2_25 (insn, operands);

    case E_DImode:
      if (!general_reg_operand (operands[0], E_DImode)
          || !general_reg_operand (operands[1], E_DImode))
        return NULL;
      if ((
#line 3395 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[0])) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        {
          *pmatch_len_ = 0;
          res = gen_peephole2_22 (insn, operands);
          if (res != NULL_RTX)
            return res;
        }
      if (!(
#line 3407 "../../src/gcc/config/i386/i386.md"
(((REGNO (operands[0]) != AX_REG
     && REGNO (operands[1]) != AX_REG)
    || optimize_size < 2
    || !optimize_insn_for_size_p ())
   && peep2_reg_dead_p (1, operands[1])) && 
#line 1161 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)))
        return NULL;
      *pmatch_len_ = 0;
      return gen_peephole2_26 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_45 (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19, x20, x21, x22, x23, x24, x25;
  rtx x26, x27;
  rtx_insn *res ATTRIBUTE_UNUSED;
  if (peep2_current_count < 2
      || peep2_current_count < 3)
    return NULL;
  x2 = XVECEXP (x1, 0, 0);
  x3 = XEXP (x2, 1);
  if (GET_MODE (x3) != E_HImode)
    return NULL;
  x4 = XVECEXP (x1, 0, 1);
  if (pattern229 (x4, 
E_CCmode, 
17) != 0)
    return NULL;
  x5 = XEXP (x2, 0);
  operands[1] = x5;
  if (!register_operand (operands[1], E_HImode))
    return NULL;
  x6 = XEXP (x3, 0);
  operands[2] = x6;
  if (!nonimmediate_operand (operands[2], E_HImode))
    return NULL;
  x7 = PATTERN (peep2_next_insn (1));
  if (GET_CODE (x7) != SET)
    return NULL;
  x8 = PATTERN (peep2_next_insn (2));
  if (GET_CODE (x8) != SET)
    return NULL;
  x9 = XEXP (x7, 1);
  switch (GET_CODE (x9))
    {
    case ZERO_EXTEND:
      if (peep2_current_count < 4)
        return NULL;
      x10 = XEXP (x7, 0);
      operands[3] = x10;
      if (!register_operand (operands[3], E_VOIDmode))
        return NULL;
      x11 = XEXP (x9, 0);
      if (!rtx_equal_p (x11, operands[1])
          || pattern1753 (x8) != 0)
        return NULL;
      x12 = XEXP (x8, 1);
      x13 = XEXP (x12, 0);
      x14 = XEXP (x13, 0);
      operands[4] = x14;
      if (!register_operand (operands[4], E_QImode))
        return NULL;
      x15 = PATTERN (peep2_next_insn (3));
      if (GET_CODE (x15) != SET)
        return NULL;
      x16 = XEXP (x15, 1);
      if (GET_CODE (x16) != IF_THEN_ELSE)
        return NULL;
      x17 = XEXP (x16, 0);
      if (!bt_comparison_operator (x17, E_VOIDmode))
        return NULL;
      operands[5] = x17;
      if (pattern1867 (x15) != 0)
        return NULL;
      x18 = XEXP (x16, 1);
      x19 = XEXP (x18, 0);
      operands[6] = x19;
      if (!
#line 22866 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[3]) == REGNO (operands[4])
   && peep2_reg_dead_p (3, operands[1])
   && peep2_reg_dead_p (3, operands[3])
   && peep2_regno_dead_p (4, FLAGS_REG)))
        return NULL;
      *pmatch_len_ = 3;
      return gen_peephole2_195 (insn, operands);

    case COMPARE:
      if (GET_MODE (x9) != E_CCZmode)
        return NULL;
      x11 = XEXP (x9, 0);
      if (GET_CODE (x11) != AND
          || GET_MODE (x11) != E_QImode)
        return NULL;
      x20 = XEXP (x11, 1);
      if (x20 != const_int_rtx[MAX_SAVED_CONST_INT + 1])
        return NULL;
      x21 = XEXP (x9, 1);
      if (x21 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return NULL;
      x10 = XEXP (x7, 0);
      if (GET_CODE (x10) != REG
          || REGNO (x10) != 17
          || GET_MODE (x10) != E_CCZmode)
        return NULL;
      x22 = XEXP (x11, 0);
      operands[3] = x22;
      if (!register_operand (operands[3], E_QImode))
        return NULL;
      x12 = XEXP (x8, 1);
      if (GET_CODE (x12) != IF_THEN_ELSE)
        return NULL;
      x13 = XEXP (x12, 0);
      if (!bt_comparison_operator (x13, E_VOIDmode))
        return NULL;
      operands[4] = x13;
      x14 = XEXP (x13, 0);
      if (GET_CODE (x14) != REG
          || REGNO (x14) != 17
          || GET_MODE (x14) != E_CCZmode)
        return NULL;
      x23 = XEXP (x13, 1);
      if (x23 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
        return NULL;
      x24 = XEXP (x12, 1);
      if (GET_CODE (x24) != LABEL_REF)
        return NULL;
      x25 = XEXP (x12, 2);
      if (GET_CODE (x25) != PC)
        return NULL;
      x26 = XEXP (x8, 0);
      if (GET_CODE (x26) != PC)
        return NULL;
      x27 = XEXP (x24, 0);
      operands[5] = x27;
      if (!
#line 22899 "../../src/gcc/config/i386/i386.md"
(REGNO (operands[1]) == REGNO (operands[3])
   && peep2_reg_dead_p (2, operands[1])
   && peep2_reg_dead_p (2, operands[3])
   && peep2_regno_dead_p (3, FLAGS_REG)))
        return NULL;
      *pmatch_len_ = 2;
      return gen_peephole2_196 (insn, operands);

    default:
      return NULL;
    }
}

 rtx_insn *
peephole2_insns (rtx x1 ATTRIBUTE_UNUSED,
	rtx_insn *insn ATTRIBUTE_UNUSED,
	int *pmatch_len_ ATTRIBUTE_UNUSED)
{
  rtx * const operands ATTRIBUTE_UNUSED = &recog_data.operand[0];
  rtx x2, x3, x4, x5, x6, x7, x8, x9;
  rtx x10, x11, x12, x13, x14, x15, x16, x17;
  rtx x18, x19, x20, x21, x22, x23, x24, x25;
  rtx x26, x27, x28;
  rtx_insn *res ATTRIBUTE_UNUSED;
  recog_data.insn = NULL;
  switch (GET_CODE (x1))
    {
    case SET:
      x2 = XEXP (x1, 1);
      switch (GET_CODE (x2))
        {
        case UNSPEC:
          if (XVECLEN (x2, 0) == 1
              && XINT (x2, 1) == 41
              && pattern57 (x1, 
E_CCCmode) == 0
              && 
#line 2136 "../../src/gcc/config/i386/i386.md"
(TARGET_SLOW_STC && !optimize_insn_for_size_p ()))
            {
              *pmatch_len_ = 0;
              res = gen_peephole2_1 (insn, operands);
              if (res != NULL_RTX)
                return res;
            }
          break;

        case COMPARE:
          res = peephole2_1 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case FLOAT_EXTEND:
          if (GET_MODE (x2) == E_DFmode)
            {
              x3 = XEXP (x1, 0);
              operands[0] = x3;
              if (sse_reg_operand (operands[0], E_DFmode))
                {
                  x4 = XEXP (x2, 0);
                  operands[1] = x4;
                  if (memory_operand (operands[1], E_SFmode)
                      && 
#line 5388 "../../src/gcc/config/i386/i386.md"
(TARGET_SPLIT_MEM_OPND_FOR_FP_CONVERTS
   && optimize_insn_for_speed_p ()))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_54 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
            }
          break;

        case FLOAT_TRUNCATE:
          if (GET_MODE (x2) == E_SFmode)
            {
              x3 = XEXP (x1, 0);
              operands[0] = x3;
              if (sse_reg_operand (operands[0], E_SFmode))
                {
                  x4 = XEXP (x2, 0);
                  operands[1] = x4;
                  if (memory_operand (operands[1], E_DFmode)
                      && 
#line 5618 "../../src/gcc/config/i386/i386.md"
(TARGET_SPLIT_MEM_OPND_FOR_FP_CONVERTS
   && optimize_insn_for_speed_p ()))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_55 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
            }
          break;

        case FIX:
          res = peephole2_2 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case NE:
        case EQ:
          res = peephole2_3 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case CONST_INT:
        case CONST_WIDE_INT:
        case CONST_POLY_INT:
        case CONST_FIXED:
        case CONST_DOUBLE:
        case CONST_VECTOR:
        case CONST:
        case REG:
        case SUBREG:
        case MEM:
        case LABEL_REF:
        case SYMBOL_REF:
        case HIGH:
          res = peephole2_8 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case VEC_SELECT:
          res = peephole2_9 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        default:
          break;
        }
      x3 = XEXP (x1, 0);
      switch (GET_MODE (x3))
        {
        case E_SImode:
          res = peephole2_14 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case E_DImode:
          res = peephole2_18 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        default:
          break;
        }
      if (peep2_current_count >= 2)
        {
          res = peephole2_22 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
        }
      operands[0] = x3;
      res = peephole2_26 (x1, insn, pmatch_len_);
      if (res != NULL_RTX)
        return res;
      switch (GET_CODE (x2))
        {
        case BSWAP:
          if (GET_MODE (x2) == E_HImode)
            {
              operands[0] = x3;
              if (general_reg_operand (operands[0], E_HImode))
                {
                  x4 = XEXP (x2, 0);
                  if (rtx_equal_p (x4, operands[0])
                      && 
#line 22626 "../../src/gcc/config/i386/i386.md"
(!(TARGET_USE_XCHGB ||
     TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))
   && peep2_regno_dead_p (0, FLAGS_REG)))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_190 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                }
            }
          break;

        case IOR:
          res = peephole2_27 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case ZERO_EXTEND:
          res = peephole2_28 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case IF_THEN_ELSE:
          res = peephole2_29 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
          break;

        case CONST_INT:
        case CONST_WIDE_INT:
        case CONST_POLY_INT:
        case CONST_FIXED:
        case CONST_DOUBLE:
        case CONST_VECTOR:
        case CONST:
        case LABEL_REF:
        case SYMBOL_REF:
        case HIGH:
          if (x2 == const_int_rtx[MAX_SAVED_CONST_INT + 0])
            {
              res = peephole2_31 (x1, insn, pmatch_len_);
              if (res != NULL_RTX)
                return res;
            }
          operands[1] = x2;
          if (immediate_operand (operands[1], E_SImode))
            {
              operands[0] = x3;
              if (memory_operand (operands[0], E_SImode)
                  && 
#line 27818 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_speed_p ()
   && ((SImode == HImode
       && TARGET_LCP_STALL)
       || (TARGET_SPLIT_LONG_MOVES
          && get_attr_length (insn) >= ix86_cur_cost ()->large_insn))))
                {
                  *pmatch_len_ = 0;
                  res = gen_peephole2_261 (insn, operands);
                  if (res != NULL_RTX)
                    return res;
                }
            }
          break;

        default:
          break;
        }
      if (GET_CODE (x3) == REG)
        {
          res = peephole2_33 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
        }
      if (peep2_current_count >= 2)
        {
          res = peephole2_35 (x1, insn, pmatch_len_);
          if (res != NULL_RTX)
            return res;
        }
      operands[0] = x3;
      return peephole2_37 (x1, insn, pmatch_len_);

    case PARALLEL:
      switch (XVECLEN (x1, 0))
        {
        case 2:
          return peephole2_49 (x1, insn, pmatch_len_);

        case 6:
          if (peep2_current_count < 2
              || peep2_current_count < 3
              || peep2_current_count < 4
              || pattern35 (x1) != 0
              || !register_operand (operands[4], E_VOIDmode))
            return NULL;
          x5 = XVECEXP (x1, 0, 0);
          x6 = XEXP (x5, 1);
          x7 = XEXP (x6, 1);
          x8 = XEXP (x7, 0);
          operands[5] = x8;
          if (!register_operand (operands[5], E_VOIDmode))
            return NULL;
          x9 = XVECEXP (x1, 0, 1);
          x10 = XEXP (x9, 0);
          operands[6] = x10;
          if (!register_operand (operands[6], E_VOIDmode))
            return NULL;
          x11 = XVECEXP (x1, 0, 2);
          x12 = XEXP (x11, 0);
          operands[3] = x12;
          if (!immediate_operand (operands[3], E_SImode))
            return NULL;
          x13 = XVECEXP (x1, 0, 3);
          x14 = XEXP (x13, 0);
          operands[0] = x14;
          if (!register_operand (operands[0], E_VOIDmode))
            return NULL;
          x15 = XVECEXP (x1, 0, 4);
          x16 = XEXP (x15, 0);
          operands[1] = x16;
          if (!register_operand (operands[1], E_VOIDmode))
            return NULL;
          x17 = XVECEXP (x1, 0, 5);
          x18 = XEXP (x17, 0);
          operands[2] = x18;
          if (!register_operand (operands[2], E_VOIDmode))
            return NULL;
          x19 = PATTERN (peep2_next_insn (1));
          if (pattern1856 (x19) != 0
              || !
#line 26158 "../../src/gcc/config/i386/i386.md"
(peep2_reg_dead_p (4, operands[7]) && peep2_reg_dead_p (4, operands[8])))
            return NULL;
          *pmatch_len_ = 3;
          return gen_peephole2_197 (insn, operands);

        case 5:
          if (peep2_current_count < 2
              || peep2_current_count < 3
              || peep2_current_count < 4)
            return NULL;
          x5 = XVECEXP (x1, 0, 0);
          if (GET_CODE (x5) != SET)
            return NULL;
          x6 = XEXP (x5, 1);
          if (GET_CODE (x6) != IF_THEN_ELSE
              || pattern230 (x1) != 0
              || !register_operand (operands[6], E_VOIDmode))
            return NULL;
          x7 = XEXP (x6, 1);
          x8 = XEXP (x7, 0);
          x20 = XEXP (x8, 0);
          operands[4] = x20;
          if (!register_operand (operands[4], E_VOIDmode))
            return NULL;
          x21 = XEXP (x7, 1);
          x22 = XEXP (x21, 0);
          operands[5] = x22;
          if (!register_operand (operands[5], E_VOIDmode))
            return NULL;
          x9 = XVECEXP (x1, 0, 1);
          x10 = XEXP (x9, 0);
          operands[3] = x10;
          if (!immediate_operand (operands[3], E_SImode))
            return NULL;
          x11 = XVECEXP (x1, 0, 2);
          x12 = XEXP (x11, 0);
          operands[0] = x12;
          if (!register_operand (operands[0], E_VOIDmode))
            return NULL;
          x13 = XVECEXP (x1, 0, 3);
          x14 = XEXP (x13, 0);
          operands[1] = x14;
          if (!register_operand (operands[1], E_VOIDmode))
            return NULL;
          x15 = XVECEXP (x1, 0, 4);
          x16 = XEXP (x15, 0);
          operands[2] = x16;
          if (!register_operand (operands[2], E_VOIDmode))
            return NULL;
          x19 = PATTERN (peep2_next_insn (1));
          if (pattern1856 (x19) != 0
              || !
#line 26189 "../../src/gcc/config/i386/i386.md"
(peep2_reg_dead_p (4, operands[7]) && peep2_reg_dead_p (4, operands[8])))
            return NULL;
          *pmatch_len_ = 3;
          return gen_peephole2_198 (insn, operands);

        case 3:
          x5 = XVECEXP (x1, 0, 0);
          if (GET_CODE (x5) != SET)
            return NULL;
          x11 = XVECEXP (x1, 0, 2);
          if (GET_CODE (x11) != CLOBBER)
            return NULL;
          x6 = XEXP (x5, 1);
          switch (GET_CODE (x6))
            {
            case UNSPEC:
              if (peep2_current_count < 2
                  || XVECLEN (x6, 0) != 1
                  || XINT (x6, 1) != 92)
                return NULL;
              x9 = XVECEXP (x1, 0, 1);
              if (GET_CODE (x9) != SET)
                return NULL;
              x23 = XEXP (x9, 1);
              if (x23 != const_int_rtx[MAX_SAVED_CONST_INT + 0])
                return NULL;
              x12 = XEXP (x11, 0);
              if (GET_CODE (x12) != REG
                  || REGNO (x12) != 17
                  || GET_MODE (x12) != E_CCmode)
                return NULL;
              x24 = XEXP (x5, 0);
              operands[0] = x24;
              x25 = XVECEXP (x6, 0, 0);
              operands[1] = x25;
              x10 = XEXP (x9, 0);
              operands[2] = x10;
              if (!general_reg_operand (operands[2], E_VOIDmode))
                return NULL;
              x19 = PATTERN (peep2_next_insn (1));
              if (GET_CODE (x19) != SET)
                return NULL;
              x26 = XEXP (x19, 0);
              operands[3] = x26;
              switch (GET_MODE (operands[0]))
                {
                case E_SImode:
                  if (!memory_operand (operands[0], E_SImode)
                      || GET_MODE (x6) != E_SImode
                      || !memory_operand (operands[1], E_SImode))
                    return NULL;
                  x27 = XEXP (x19, 1);
                  operands[4] = x27;
                  if (const0_operand (operands[4], E_VOIDmode)
                      && general_reg_operand (operands[3], E_VOIDmode)
                      && (
#line 27439 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && GET_MODE_SIZE (GET_MODE (operands[3])) <= UNITS_PER_WORD
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_233 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (general_gr_operand (operands[4], E_SImode)
                      && general_reg_operand (operands[3], E_SImode)
                      && (
#line 27500 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_235 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (general_gr_operand (operands[4], E_DImode)
                      && general_reg_operand (operands[3], E_DImode)
                      && (
#line 27500 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && (((
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode))))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_236 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (address_no_seg_operand (operands[4], E_SImode)
                      && general_reg_operand (operands[3], E_SImode)
                      && (
#line 27555 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_243 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (address_no_seg_operand (operands[4], E_DImode)
                      && general_reg_operand (operands[3], E_DImode)
                      && (
#line 27555 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && (((
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode))))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_244 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (!general_reg_operand (operands[3], E_DImode))
                    return NULL;
                  switch (pattern1782 (x27))
                    {
                    case 0:
                      if (!(
#line 27604 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
                        return NULL;
                      *pmatch_len_ = 1;
                      return gen_peephole2_247 (insn, operands);

                    case 1:
                      if (!(
#line 27604 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == SImode)))
                        return NULL;
                      *pmatch_len_ = 1;
                      return gen_peephole2_248 (insn, operands);

                    default:
                      return NULL;
                    }

                case E_DImode:
                  if (!memory_operand (operands[0], E_DImode)
                      || GET_MODE (x6) != E_DImode
                      || !memory_operand (operands[1], E_DImode))
                    return NULL;
                  x27 = XEXP (x19, 1);
                  operands[4] = x27;
                  if (const0_operand (operands[4], E_VOIDmode)
                      && general_reg_operand (operands[3], E_VOIDmode)
                      && (
#line 27439 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && GET_MODE_SIZE (GET_MODE (operands[3])) <= UNITS_PER_WORD
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_234 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (general_gr_operand (operands[4], E_SImode)
                      && general_reg_operand (operands[3], E_SImode)
                      && (
#line 27500 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_237 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (general_gr_operand (operands[4], E_DImode)
                      && general_reg_operand (operands[3], E_DImode)
                      && (
#line 27500 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && (((
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode))))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_238 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (address_no_seg_operand (operands[4], E_SImode)
                      && general_reg_operand (operands[3], E_SImode)
                      && (
#line 27555 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_245 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (address_no_seg_operand (operands[4], E_DImode)
                      && general_reg_operand (operands[3], E_DImode)
                      && (
#line 27555 "../../src/gcc/config/i386/i386.md"
(GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && (((
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1167 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT)) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode))))
                    {
                      *pmatch_len_ = 1;
                      res = gen_peephole2_246 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (!general_reg_operand (operands[3], E_DImode))
                    return NULL;
                  switch (pattern1782 (x27))
                    {
                    case 0:
                      if (!(
#line 27604 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
                        return NULL;
                      *pmatch_len_ = 1;
                      return gen_peephole2_249 (insn, operands);

                    case 1:
                      if (!(
#line 27604 "../../src/gcc/config/i386/i386.md"
(TARGET_64BIT
   && GET_MODE (operands[2]) == word_mode
   && peep2_reg_dead_p (0, operands[3])
   && peep2_reg_dead_p (1, operands[2])) && 
#line 1408 "../../src/gcc/config/i386/i386.md"
(ptr_mode == DImode)))
                        return NULL;
                      *pmatch_len_ = 1;
                      return gen_peephole2_250 (insn, operands);

                    default:
                      return NULL;
                    }

                default:
                  return NULL;
                }

            case PLUS:
              if (pattern414 (x5) != 0)
                return NULL;
              x9 = XVECEXP (x1, 0, 1);
              if (pattern229 (x9, 
E_CCmode, 
17) != 0)
                return NULL;
              x12 = XEXP (x11, 0);
              if (GET_CODE (x12) != MEM
                  || GET_MODE (x12) != E_BLKmode)
                return NULL;
              x28 = XEXP (x12, 0);
              if (GET_CODE (x28) != SCRATCH)
                return NULL;
              switch (pattern1446 (x5))
                {
                case 0:
                  if ((
#line 28605 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_347 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28605 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_348 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28619 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -2*GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_351 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28619 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -2*GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_352 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28661 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == GET_MODE_SIZE (word_mode)) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_363 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28661 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == GET_MODE_SIZE (word_mode)) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_364 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28676 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_367 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28676 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_368 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28689 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_371 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (!(
#line 28689 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == SImode))))
                    return NULL;
                  *pmatch_len_ = 0;
                  return gen_peephole2_372 (insn, operands);

                case 1:
                  if ((
#line 28605 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_349 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28605 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_350 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28619 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -2*GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_353 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28619 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_PUSH || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == -2*GET_MODE_SIZE (word_mode)
   && !ix86_red_zone_used) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_354 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28661 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == GET_MODE_SIZE (word_mode)) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_365 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28661 "../../src/gcc/config/i386/i386.md"
((TARGET_SINGLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == GET_MODE_SIZE (word_mode)) && (((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_366 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28676 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_369 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28676 "../../src/gcc/config/i386/i386.md"
((TARGET_DOUBLE_POP || optimize_insn_for_size_p ())
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_370 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if ((
#line 28689 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == SImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    {
                      *pmatch_len_ = 0;
                      res = gen_peephole2_373 (insn, operands);
                      if (res != NULL_RTX)
                        return res;
                    }
                  if (!(
#line 28689 "../../src/gcc/config/i386/i386.md"
(optimize_insn_for_size_p ()
   && INTVAL (operands[0]) == 2*GET_MODE_SIZE (word_mode)) && ((((((((((
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1403 "../../src/gcc/config/i386/i386.md"
(word_mode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode)) && 
#line 1398 "../../src/gcc/config/i386/i386.md"
(Pmode == DImode))))
                    return NULL;
                  *pmatch_len_ = 0;
                  return gen_peephole2_374 (insn, operands);

                default:
                  return NULL;
                }

            default:
              return NULL;
            }

        default:
          return NULL;
        }

    default:
      return NULL;
    }
}
